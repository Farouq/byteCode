<clones>
<clone_pair pairid="1" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="4" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="5" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="6" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="7" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="8" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="9" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="10" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="11" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="12" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="13" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="14" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.cs" startline="8" endline="23">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ActorPropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="15" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="16" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="17" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="18" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="19" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="20" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="21" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="22" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="23" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ActorPropertiesDialog.Designer.cs" startline="22" endline="84">
<![CDATA[
#region Windows Form Designer generated code
private void InitializeComponent()
{
this.button1 = new System.Windows.Forms.Button();
this.button2 = new System.Windows.Forms.Button();
this.flowLayoutPanel1 = new System.Windows.Forms.FlowLayoutPanel();
this.SuspendLayout();
this.button1.DialogResult = System.Windows.Forms.DialogResult.Cancel;
this.button1.Location = new System.Drawing.Point(226, 333);
this.button1.Name = "button1";
this.button1.Size = new System.Drawing.Size(75, 23);
this.button1.TabIndex = 0;
this.button1.Text = "Cancel";
this.button1.UseVisualStyleBackColor = true;
this.button2.DialogResult = System.Windows.Forms.DialogResult.Cancel;
this.button2.Enabled = false;
this.button2.Location = new System.Drawing.Point(145, 333);
this.button2.Name = "button2";
this.button2.Size = new System.Drawing.Size(75, 23);
this.button2.TabIndex = 0;
this.button2.Text = "OK";
this.button2.UseVisualStyleBackColor = true;
this.flowLayoutPanel1.AutoScroll = true;
this.flowLayoutPanel1.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
this.flowLayoutPanel1.Location = new System.Drawing.Point(13, 13);
this.flowLayoutPanel1.Name = "flowLayoutPanel1";
this.flowLayoutPanel1.Size = new System.Drawing.Size(288, 314);
this.flowLayoutPanel1.TabIndex = 1;
this.AcceptButton = this.button2;
this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
this.CancelButton = this.button1;
this.ClientSize = new System.Drawing.Size(313, 368);
this.Controls.Add(this.flowLayoutPanel1);
this.Controls.Add(this.button2);
this.Controls.Add(this.button1);
this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog;
this.MaximizeBox = false;
this.MinimizeBox = false;
this.Name = "ActorPropertiesDialog";
this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;
this.Text = "Actor Properties";
this.ResumeLayout(false);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="32" endline="92">
<![CDATA[
#region Windows Form Designer generated code
private void InitializeComponent()
{
this.label1 = new System.Windows.Forms.Label();
this.listBox1 = new System.Windows.Forms.ListBox();
this.button1 = new System.Windows.Forms.Button();
this.SuspendLayout();
this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)
| System.Windows.Forms.AnchorStyles.Right)));
this.label1.Location = new System.Drawing.Point(10, 9);
this.label1.Name = "label1";
this.label1.Size = new System.Drawing.Size(610, 23);
this.label1.TabIndex = 0;
this.label1.Text = "Your map import completed, but with errors
this.listBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)
| System.Windows.Forms.AnchorStyles.Left)
| System.Windows.Forms.AnchorStyles.Right)));
this.listBox1.FormattingEnabled = true;
this.listBox1.Location = new System.Drawing.Point(13, 30);
this.listBox1.Name = "listBox1";
this.listBox1.Size = new System.Drawing.Size(607, 316);
this.listBox1.TabIndex = 1;
this.button1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right)));
this.button1.DialogResult = System.Windows.Forms.DialogResult.Cancel;
this.button1.Location = new System.Drawing.Point(545, 359);
this.button1.Name = "button1";
this.button1.Size = new System.Drawing.Size(75, 23);
this.button1.TabIndex = 2;
this.button1.Text = "Close";
this.button1.UseVisualStyleBackColor = true;
this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
this.ClientSize = new System.Drawing.Size(632, 394);
this.Controls.Add(this.button1);
this.Controls.Add(this.listBox1);
this.Controls.Add(this.label1);
this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog;
this.Name = "ErrorListDialog";
this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;
this.Text = "Map Import Errors";
this.ResumeLayout(false);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="24" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="25" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="26" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="27" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="28" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="29" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="30" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ErrorListDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="31" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="509" endline="516">
<![CDATA[
void ShowGridClicked(object sender, EventArgs e)
{
showGridToolStripMenuItem.Checked ^= true;
toolStripMenuItemShowGrid.Checked ^= true;
surface1.ShowGrid = showGridToolStripMenuItem.Checked;
surface1.Chunks.Clear();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="740" endline="747">
<![CDATA[
void showRulerToolStripMenuItemClick(object sender, EventArgs e)
{
showRulerToolStripMenuItem.Checked ^= true;
showRulerToolStripItem.Checked ^= true;
surface1.ShowRuler = showRulerToolStripMenuItem.Checked;
surface1.Chunks.Clear();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="32" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="716" endline="724">
<![CDATA[
void zoomInToolStripButtonClick(object sender, System.EventArgs e)
{
if (surface1.Map == null) return;
surface1.Zoom /= .75f;
surface1.Invalidate();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="725" endline="733">
<![CDATA[
void zoomOutToolStripButtonClick(object sender, System.EventArgs e)
{
if (surface1.Map == null) return;
surface1.Zoom *= .75f;
surface1.Invalidate();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="33" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="734" endline="739">
<![CDATA[
void panToolStripButtonClick(object sender, System.EventArgs e)
{
panToolStripButton.Checked ^= true;
surface1.IsPanning = panToolStripButton.Checked;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="753" endline="758">
<![CDATA[
void EraserToolStripButtonClick(object sender, System.EventArgs e)
{
eraserToolStripButton.Checked ^= true;
surface1.IsErasing = eraserToolStripButton.Checked;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="34" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="35" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="36" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="37" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="38" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="39" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="40" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="92" endline="160">
<![CDATA[
apd.ShowDialog();
}
}
void MakeDirty() { dirty = true; }
string loadedMapName;
string currentMod = "ra";
TileSet tileset;
bool dirty = false;
void LoadMap(string mapname)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = mapname;
var map = new Map(mapname);
if (map.Players.Count == 0)
map.MakeDefaultPlayers();
PrepareMapResources(Game.modData.Manifest, map);
cashToolStripStatusLabel.Text = CalculateTotalResource().ToString();
dirty = false;
}
void NewMap(Map map)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = null;
PrepareMapResources(Game.modData.Manifest, map);
MakeDirty();
}
void PrepareMapResources(Manifest manifest, Map map)
{
Rules.LoadRules(manifest, map);
tileset = Rules.TileSets[map.Tileset];
tileset.LoadTiles();
int[] ShadowIndex = { 3, 4 };
var palette = new Palette(FileSystem.Open(tileset.Palette), ShadowIndex);
var playerPalette = tileset.PlayerPalette ?? tileset.Palette;
var PlayerPalette = new Palette(FileSystem.Open(playerPalette), ShadowIndex);
surface1.Bind(map, tileset, palette, PlayerPalette);
var palettes = new[] { tilePalette, actorPalette, resourcePalette };
foreach (var p in palettes) { p.Visible = false; p.SuspendLayout(); }
string[] templateOrder = tileset.EditorTemplateOrder ?? new string[]{};
foreach (var tc in tileset.Templates.GroupBy(t => t.Value.Category).OrderBy(t => templateOrder.ToList().IndexOf(t.Key)))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="161" endline="398">
<![CDATA[
{
var category = tc.Key ?? "(Uncategorized)";
var categoryHeader = new Label
{
BackColor = SystemColors.Highlight,
ForeColor = SystemColors.HighlightText,
Text = category,
AutoSize = false,
Height = 24,
TextAlign = ContentAlignment.MiddleLeft,
Width = tilePalette.ClientSize.Width,
};
tilePalette.Resize += (_,e) => categoryHeader.Width = tilePalette.ClientSize.Width;
if (tilePalette.Controls.Count > 0)
tilePalette.SetFlowBreak(
tilePalette.Controls[tilePalette.Controls.Count - 1], true);
tilePalette.Controls.Add(categoryHeader);
foreach( var t in tc )
{
try
{
var bitmap = tileset.RenderTemplate((ushort)t.Key, palette);
var ibox = new PictureBox
{
Image = bitmap,
Width = bitmap.Width / 2,
Height = bitmap.Height / 2,
SizeMode = PictureBoxSizeMode.StretchImage
};
var brushTemplate = new BrushTemplate { Bitmap = bitmap, N = t.Key };
ibox.Click += (_, e) => surface1.SetTool(new BrushTool(brushTemplate));
var template = t.Value;
tilePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{1}
template.Image,
template.Id,
template.Size.X,
template.Size.Y));
}
catch { }
}
}
var actorTemplates = new List<ActorTemplate>();
foreach (var a in Rules.Info.Keys)
{
try
{
var info = Rules.Info[a];
if (!info.Traits.Contains<RenderSimpleInfo>()) continue;
var etf = info.Traits.GetOrDefault<EditorTilesetFilterInfo>();
if (etf != null && etf.ExcludeTilesets != null
&& etf.ExcludeTilesets.Contains(tileset.Id)) continue;
if (etf != null && etf.RequireTilesets != null
&& !etf.RequireTilesets.Contains(tileset.Id)) continue;
var TemplatePalette = PlayerPalette;
var rsi = info.Traits.GetOrDefault<RenderSimpleInfo>();
if (rsi != null && rsi.Palette != null && rsi.Palette.Contains("terrain"))
TemplatePalette = palette;
var template = RenderUtils.RenderActor(info, tileset, TemplatePalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ActorTool(template));
actorPalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}".F(
info.Name));
actorTemplates.Add(template);
}
catch { }
}
surface1.BindActorTemplates(actorTemplates);
var resourceTemplates = new List<ResourceTemplate>();
foreach (var a in Rules.Info["world"].Traits.WithInterface<ResourceTypeInfo>())
{
try
{
var template = RenderUtils.RenderResourceType(a, tileset.Extensions, PlayerPalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ResourceTool(template));
resourcePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}
template.Info.Name,
template.Info.ValuePerUnit));
resourceTemplates.Add(template);
}
catch { }
}
surface1.BindResourceTemplates(resourceTemplates);
foreach (var p in palettes)
{
p.Visible = true;
p.ResumeLayout();
}
pmMiniMap.Image = Minimap.AddStaticResources(surface1.Map, Minimap.TerrainBitmap(surface1.Map, true));
propertiesToolStripMenuItem.Enabled = true;
toolStripMenuItemProperties.Enabled = true;
resizeToolStripMenuItem.Enabled = true;
toolStripMenuItemResize.Enabled = true;
saveToolStripMenuItem.Enabled = true;
toolStripMenuItemSave.Enabled = true;
saveAsToolStripMenuItem.Enabled = true;
mnuMinimapToPNG.Enabled = true;	// TODO
PopulateActorOwnerChooser();
}
void PopulateActorOwnerChooser()
{
actorOwnerChooser.Items.Clear();
actorOwnerChooser.Items.AddRange(surface1.Map.Players.Values.ToArray());
actorOwnerChooser.SelectedIndex = 0;
surface1.NewActorOwner = (actorOwnerChooser.SelectedItem as PlayerReference).Name;
}
void ResizeClicked(object sender, EventArgs e)
{
using (var rd = new ResizeDialog())
{
rd.width.Value = surface1.Map.MapSize.X;
rd.height.Value = surface1.Map.MapSize.Y;
rd.cordonLeft.Value = surface1.Map.Bounds.Left;
rd.cordonTop.Value = surface1.Map.Bounds.Top;
rd.cordonRight.Value = surface1.Map.Bounds.Right;
rd.cordonBottom.Value = surface1.Map.Bounds.Bottom;
if (DialogResult.OK != rd.ShowDialog())
return;
surface1.Map.ResizeCordon((int)rd.cordonLeft.Value,
(int)rd.cordonTop.Value,
(int)rd.cordonRight.Value,
(int)rd.cordonBottom.Value);
if ((int)rd.width.Value != surface1.Map.MapSize.X || (int)rd.height.Value != surface1.Map.MapSize.Y)
{
surface1.Map.Resize((int)rd.width.Value, (int)rd.height.Value);
surface1.Bind(surface1.Map, surface1.TileSet, surface1.Palette, surface1.PlayerPalette);	// rebind it to invalidate all caches
}
surface1.Invalidate();
}
}
void SaveClicked(object sender, EventArgs e)
{
if (loadedMapName == null)
SaveAsClicked(sender, e);
else
{
surface1.Map.Save(loadedMapName);
dirty = false;
}
}
void SaveAsClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = false;
nms.btnOk.Text = "Save";
nms.txtNew.Text = "unnamed";
nms.txtPathOut.ReadOnly = false;
if (DialogResult.OK == nms.ShowDialog())
{
if (nms.txtNew.Text == "")
nms.txtNew.Text = "unnamed";
loadedMapName = Path.Combine(nms.MapFolderPath, nms.txtNew.Text + ".oramap");
SaveClicked(sender, e);
}
}
}
void OpenClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = true;
nms.txtPathOut.ReadOnly = true;
nms.btnOk.Text = "Open";
if (DialogResult.OK == nms.ShowDialog())
LoadMap(nms.txtNew.Tag as string);
}
}
void NewClicked(object sender, EventArgs e)
{
using (var nmd = new NewMapDialog())
{
nmd.theater.Items.Clear();
nmd.theater.Items.AddRange(Rules.TileSets.Select(a => a.Value.Id).ToArray());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="41" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="92" endline="160">
<![CDATA[
apd.ShowDialog();
}
}
void MakeDirty() { dirty = true; }
string loadedMapName;
string currentMod = "ra";
TileSet tileset;
bool dirty = false;
void LoadMap(string mapname)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = mapname;
var map = new Map(mapname);
if (map.Players.Count == 0)
map.MakeDefaultPlayers();
PrepareMapResources(Game.modData.Manifest, map);
cashToolStripStatusLabel.Text = CalculateTotalResource().ToString();
dirty = false;
}
void NewMap(Map map)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = null;
PrepareMapResources(Game.modData.Manifest, map);
MakeDirty();
}
void PrepareMapResources(Manifest manifest, Map map)
{
Rules.LoadRules(manifest, map);
tileset = Rules.TileSets[map.Tileset];
tileset.LoadTiles();
int[] ShadowIndex = { 3, 4 };
var palette = new Palette(FileSystem.Open(tileset.Palette), ShadowIndex);
var playerPalette = tileset.PlayerPalette ?? tileset.Palette;
var PlayerPalette = new Palette(FileSystem.Open(playerPalette), ShadowIndex);
surface1.Bind(map, tileset, palette, PlayerPalette);
var palettes = new[] { tilePalette, actorPalette, resourcePalette };
foreach (var p in palettes) { p.Visible = false; p.SuspendLayout(); }
string[] templateOrder = tileset.EditorTemplateOrder ?? new string[]{};
foreach (var tc in tileset.Templates.GroupBy(t => t.Value.Category).OrderBy(t => templateOrder.ToList().IndexOf(t.Key)))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Game.cs" startline="306" endline="371">
<![CDATA[
if (mm.Length == 0) mm = new[] { "ra" };
Console.WriteLine("Loading mods
Settings.Game.Mods = mm;
Sound.StopMusic();
Sound.StopVideo();
Sound.Initialize();
modData = new ModData( mm );
Renderer.InitializeFonts(modData.Manifest);
modData.LoadInitialAssets(true);
PerfHistory.items["render"].hasNormalTick = false;
PerfHistory.items["batches"].hasNormalTick = false;
PerfHistory.items["render_widgets"].hasNormalTick = false;
PerfHistory.items["render_flip"].hasNormalTick = false;
JoinLocal();
viewport = new Viewport(new int2(Renderer.Resolution), Rectangle.Empty, Renderer);
if (Game.Settings.Server.Dedicated)
{
while (true)
{
Game.Settings.Server.Map = WidgetUtils.ChooseInitialMap(Game.Settings.Server.Map);
Game.Settings.Save();
Game.CreateServer(new ServerSettings(Game.Settings.Server));
while(true)
{
System.Threading.Thread.Sleep(100);
if((server.State == Server.ServerState.GameStarted)
&& (server.conns.Count<=1))
{
Console.WriteLine("No one is playing, shutting down...");
server.Shutdown();
break;
}
}
if (Game.Settings.Server.DedicatedLoop)
{
Console.WriteLine("Starting a new server instance...");
continue;
}
else
break;
}
System.Environment.Exit(0);
}
else
{
modData.LoadScreen.StartGame();
Settings.Save();
}
}
public static void LoadShellMap()
{
StartGame(ChooseShellmap(), true);
}
static string ChooseShellmap()
{
var shellmaps =  modData.AvailableMaps
.Where(m => m.Value.UseAsShellmap);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="42" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="92" endline="160">
<![CDATA[
apd.ShowDialog();
}
}
void MakeDirty() { dirty = true; }
string loadedMapName;
string currentMod = "ra";
TileSet tileset;
bool dirty = false;
void LoadMap(string mapname)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = mapname;
var map = new Map(mapname);
if (map.Players.Count == 0)
map.MakeDefaultPlayers();
PrepareMapResources(Game.modData.Manifest, map);
cashToolStripStatusLabel.Text = CalculateTotalResource().ToString();
dirty = false;
}
void NewMap(Map map)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = null;
PrepareMapResources(Game.modData.Manifest, map);
MakeDirty();
}
void PrepareMapResources(Manifest manifest, Map map)
{
Rules.LoadRules(manifest, map);
tileset = Rules.TileSets[map.Tileset];
tileset.LoadTiles();
int[] ShadowIndex = { 3, 4 };
var palette = new Palette(FileSystem.Open(tileset.Palette), ShadowIndex);
var playerPalette = tileset.PlayerPalette ?? tileset.Palette;
var PlayerPalette = new Palette(FileSystem.Open(playerPalette), ShadowIndex);
surface1.Bind(map, tileset, palette, PlayerPalette);
var palettes = new[] { tilePalette, actorPalette, resourcePalette };
foreach (var p in palettes) { p.Visible = false; p.SuspendLayout(); }
string[] templateOrder = tileset.EditorTemplateOrder ?? new string[]{};
foreach (var tc in tileset.Templates.GroupBy(t => t.Value.Category).OrderBy(t => templateOrder.ToList().IndexOf(t.Key)))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="390" endline="422">
<![CDATA[
if (!Players.ContainsKey("Neutral"))
Players.Add("Neutral", new PlayerReference
{
Name = "Neutral",
Race = firstRace,
OwnsWorld = true,
NonCombatant = true
});
var numSpawns = GetSpawnPoints().Length;
for (var index = 0; index < numSpawns; index++)
{
if (Players.ContainsKey("Multi{0}".F(index)))
continue;
var p = new PlayerReference
{
Name = "Multi{0}".F(index),
Race = "Random",
Playable = true,
DefaultStartingUnits = true,
Enemies = new[] { "Creeps" }
};
Players.Add(p.Name, p);
}
Players.Add("Creeps", new PlayerReference
{
Name = "Creeps",
Race = firstRace,
NonCombatant = true,
Enemies = Players.Where(p => p.Value.Playable).Select(p => p.Key).ToArray()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="43" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="92" endline="160">
<![CDATA[
apd.ShowDialog();
}
}
void MakeDirty() { dirty = true; }
string loadedMapName;
string currentMod = "ra";
TileSet tileset;
bool dirty = false;
void LoadMap(string mapname)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = mapname;
var map = new Map(mapname);
if (map.Players.Count == 0)
map.MakeDefaultPlayers();
PrepareMapResources(Game.modData.Manifest, map);
cashToolStripStatusLabel.Text = CalculateTotalResource().ToString();
dirty = false;
}
void NewMap(Map map)
{
tilePalette.Controls.Clear();
actorPalette.Controls.Clear();
resourcePalette.Controls.Clear();
loadedMapName = null;
PrepareMapResources(Game.modData.Manifest, map);
MakeDirty();
}
void PrepareMapResources(Manifest manifest, Map map)
{
Rules.LoadRules(manifest, map);
tileset = Rules.TileSets[map.Tileset];
tileset.LoadTiles();
int[] ShadowIndex = { 3, 4 };
var palette = new Palette(FileSystem.Open(tileset.Palette), ShadowIndex);
var playerPalette = tileset.PlayerPalette ?? tileset.Palette;
var PlayerPalette = new Palette(FileSystem.Open(playerPalette), ShadowIndex);
surface1.Bind(map, tileset, palette, PlayerPalette);
var palettes = new[] { tilePalette, actorPalette, resourcePalette };
foreach (var p in palettes) { p.Visible = false; p.SuspendLayout(); }
string[] templateOrder = tileset.EditorTemplateOrder ?? new string[]{};
foreach (var tc in tileset.Templates.GroupBy(t => t.Value.Category).OrderBy(t => templateOrder.ToList().IndexOf(t.Key)))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs" startline="84" endline="92">
<![CDATA[
}
EnumerateMaps();
}
void EnumerateMaps()
{
var maps = Game.modData.AvailableMaps
.Where(kv => kv.Value.Selectable)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="44" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="161" endline="398">
<![CDATA[
{
var category = tc.Key ?? "(Uncategorized)";
var categoryHeader = new Label
{
BackColor = SystemColors.Highlight,
ForeColor = SystemColors.HighlightText,
Text = category,
AutoSize = false,
Height = 24,
TextAlign = ContentAlignment.MiddleLeft,
Width = tilePalette.ClientSize.Width,
};
tilePalette.Resize += (_,e) => categoryHeader.Width = tilePalette.ClientSize.Width;
if (tilePalette.Controls.Count > 0)
tilePalette.SetFlowBreak(
tilePalette.Controls[tilePalette.Controls.Count - 1], true);
tilePalette.Controls.Add(categoryHeader);
foreach( var t in tc )
{
try
{
var bitmap = tileset.RenderTemplate((ushort)t.Key, palette);
var ibox = new PictureBox
{
Image = bitmap,
Width = bitmap.Width / 2,
Height = bitmap.Height / 2,
SizeMode = PictureBoxSizeMode.StretchImage
};
var brushTemplate = new BrushTemplate { Bitmap = bitmap, N = t.Key };
ibox.Click += (_, e) => surface1.SetTool(new BrushTool(brushTemplate));
var template = t.Value;
tilePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{1}
template.Image,
template.Id,
template.Size.X,
template.Size.Y));
}
catch { }
}
}
var actorTemplates = new List<ActorTemplate>();
foreach (var a in Rules.Info.Keys)
{
try
{
var info = Rules.Info[a];
if (!info.Traits.Contains<RenderSimpleInfo>()) continue;
var etf = info.Traits.GetOrDefault<EditorTilesetFilterInfo>();
if (etf != null && etf.ExcludeTilesets != null
&& etf.ExcludeTilesets.Contains(tileset.Id)) continue;
if (etf != null && etf.RequireTilesets != null
&& !etf.RequireTilesets.Contains(tileset.Id)) continue;
var TemplatePalette = PlayerPalette;
var rsi = info.Traits.GetOrDefault<RenderSimpleInfo>();
if (rsi != null && rsi.Palette != null && rsi.Palette.Contains("terrain"))
TemplatePalette = palette;
var template = RenderUtils.RenderActor(info, tileset, TemplatePalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ActorTool(template));
actorPalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}".F(
info.Name));
actorTemplates.Add(template);
}
catch { }
}
surface1.BindActorTemplates(actorTemplates);
var resourceTemplates = new List<ResourceTemplate>();
foreach (var a in Rules.Info["world"].Traits.WithInterface<ResourceTypeInfo>())
{
try
{
var template = RenderUtils.RenderResourceType(a, tileset.Extensions, PlayerPalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ResourceTool(template));
resourcePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}
template.Info.Name,
template.Info.ValuePerUnit));
resourceTemplates.Add(template);
}
catch { }
}
surface1.BindResourceTemplates(resourceTemplates);
foreach (var p in palettes)
{
p.Visible = true;
p.ResumeLayout();
}
pmMiniMap.Image = Minimap.AddStaticResources(surface1.Map, Minimap.TerrainBitmap(surface1.Map, true));
propertiesToolStripMenuItem.Enabled = true;
toolStripMenuItemProperties.Enabled = true;
resizeToolStripMenuItem.Enabled = true;
toolStripMenuItemResize.Enabled = true;
saveToolStripMenuItem.Enabled = true;
toolStripMenuItemSave.Enabled = true;
saveAsToolStripMenuItem.Enabled = true;
mnuMinimapToPNG.Enabled = true;	// TODO
PopulateActorOwnerChooser();
}
void PopulateActorOwnerChooser()
{
actorOwnerChooser.Items.Clear();
actorOwnerChooser.Items.AddRange(surface1.Map.Players.Values.ToArray());
actorOwnerChooser.SelectedIndex = 0;
surface1.NewActorOwner = (actorOwnerChooser.SelectedItem as PlayerReference).Name;
}
void ResizeClicked(object sender, EventArgs e)
{
using (var rd = new ResizeDialog())
{
rd.width.Value = surface1.Map.MapSize.X;
rd.height.Value = surface1.Map.MapSize.Y;
rd.cordonLeft.Value = surface1.Map.Bounds.Left;
rd.cordonTop.Value = surface1.Map.Bounds.Top;
rd.cordonRight.Value = surface1.Map.Bounds.Right;
rd.cordonBottom.Value = surface1.Map.Bounds.Bottom;
if (DialogResult.OK != rd.ShowDialog())
return;
surface1.Map.ResizeCordon((int)rd.cordonLeft.Value,
(int)rd.cordonTop.Value,
(int)rd.cordonRight.Value,
(int)rd.cordonBottom.Value);
if ((int)rd.width.Value != surface1.Map.MapSize.X || (int)rd.height.Value != surface1.Map.MapSize.Y)
{
surface1.Map.Resize((int)rd.width.Value, (int)rd.height.Value);
surface1.Bind(surface1.Map, surface1.TileSet, surface1.Palette, surface1.PlayerPalette);	// rebind it to invalidate all caches
}
surface1.Invalidate();
}
}
void SaveClicked(object sender, EventArgs e)
{
if (loadedMapName == null)
SaveAsClicked(sender, e);
else
{
surface1.Map.Save(loadedMapName);
dirty = false;
}
}
void SaveAsClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = false;
nms.btnOk.Text = "Save";
nms.txtNew.Text = "unnamed";
nms.txtPathOut.ReadOnly = false;
if (DialogResult.OK == nms.ShowDialog())
{
if (nms.txtNew.Text == "")
nms.txtNew.Text = "unnamed";
loadedMapName = Path.Combine(nms.MapFolderPath, nms.txtNew.Text + ".oramap");
SaveClicked(sender, e);
}
}
}
void OpenClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = true;
nms.txtPathOut.ReadOnly = true;
nms.btnOk.Text = "Open";
if (DialogResult.OK == nms.ShowDialog())
LoadMap(nms.txtNew.Tag as string);
}
}
void NewClicked(object sender, EventArgs e)
{
using (var nmd = new NewMapDialog())
{
nmd.theater.Items.Clear();
nmd.theater.Items.AddRange(Rules.TileSets.Select(a => a.Value.Id).ToArray());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Game.cs" startline="306" endline="371">
<![CDATA[
if (mm.Length == 0) mm = new[] { "ra" };
Console.WriteLine("Loading mods
Settings.Game.Mods = mm;
Sound.StopMusic();
Sound.StopVideo();
Sound.Initialize();
modData = new ModData( mm );
Renderer.InitializeFonts(modData.Manifest);
modData.LoadInitialAssets(true);
PerfHistory.items["render"].hasNormalTick = false;
PerfHistory.items["batches"].hasNormalTick = false;
PerfHistory.items["render_widgets"].hasNormalTick = false;
PerfHistory.items["render_flip"].hasNormalTick = false;
JoinLocal();
viewport = new Viewport(new int2(Renderer.Resolution), Rectangle.Empty, Renderer);
if (Game.Settings.Server.Dedicated)
{
while (true)
{
Game.Settings.Server.Map = WidgetUtils.ChooseInitialMap(Game.Settings.Server.Map);
Game.Settings.Save();
Game.CreateServer(new ServerSettings(Game.Settings.Server));
while(true)
{
System.Threading.Thread.Sleep(100);
if((server.State == Server.ServerState.GameStarted)
&& (server.conns.Count<=1))
{
Console.WriteLine("No one is playing, shutting down...");
server.Shutdown();
break;
}
}
if (Game.Settings.Server.DedicatedLoop)
{
Console.WriteLine("Starting a new server instance...");
continue;
}
else
break;
}
System.Environment.Exit(0);
}
else
{
modData.LoadScreen.StartGame();
Settings.Save();
}
}
public static void LoadShellMap()
{
StartGame(ChooseShellmap(), true);
}
static string ChooseShellmap()
{
var shellmaps =  modData.AvailableMaps
.Where(m => m.Value.UseAsShellmap);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="45" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="161" endline="398">
<![CDATA[
{
var category = tc.Key ?? "(Uncategorized)";
var categoryHeader = new Label
{
BackColor = SystemColors.Highlight,
ForeColor = SystemColors.HighlightText,
Text = category,
AutoSize = false,
Height = 24,
TextAlign = ContentAlignment.MiddleLeft,
Width = tilePalette.ClientSize.Width,
};
tilePalette.Resize += (_,e) => categoryHeader.Width = tilePalette.ClientSize.Width;
if (tilePalette.Controls.Count > 0)
tilePalette.SetFlowBreak(
tilePalette.Controls[tilePalette.Controls.Count - 1], true);
tilePalette.Controls.Add(categoryHeader);
foreach( var t in tc )
{
try
{
var bitmap = tileset.RenderTemplate((ushort)t.Key, palette);
var ibox = new PictureBox
{
Image = bitmap,
Width = bitmap.Width / 2,
Height = bitmap.Height / 2,
SizeMode = PictureBoxSizeMode.StretchImage
};
var brushTemplate = new BrushTemplate { Bitmap = bitmap, N = t.Key };
ibox.Click += (_, e) => surface1.SetTool(new BrushTool(brushTemplate));
var template = t.Value;
tilePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{1}
template.Image,
template.Id,
template.Size.X,
template.Size.Y));
}
catch { }
}
}
var actorTemplates = new List<ActorTemplate>();
foreach (var a in Rules.Info.Keys)
{
try
{
var info = Rules.Info[a];
if (!info.Traits.Contains<RenderSimpleInfo>()) continue;
var etf = info.Traits.GetOrDefault<EditorTilesetFilterInfo>();
if (etf != null && etf.ExcludeTilesets != null
&& etf.ExcludeTilesets.Contains(tileset.Id)) continue;
if (etf != null && etf.RequireTilesets != null
&& !etf.RequireTilesets.Contains(tileset.Id)) continue;
var TemplatePalette = PlayerPalette;
var rsi = info.Traits.GetOrDefault<RenderSimpleInfo>();
if (rsi != null && rsi.Palette != null && rsi.Palette.Contains("terrain"))
TemplatePalette = palette;
var template = RenderUtils.RenderActor(info, tileset, TemplatePalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ActorTool(template));
actorPalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}".F(
info.Name));
actorTemplates.Add(template);
}
catch { }
}
surface1.BindActorTemplates(actorTemplates);
var resourceTemplates = new List<ResourceTemplate>();
foreach (var a in Rules.Info["world"].Traits.WithInterface<ResourceTypeInfo>())
{
try
{
var template = RenderUtils.RenderResourceType(a, tileset.Extensions, PlayerPalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ResourceTool(template));
resourcePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}
template.Info.Name,
template.Info.ValuePerUnit));
resourceTemplates.Add(template);
}
catch { }
}
surface1.BindResourceTemplates(resourceTemplates);
foreach (var p in palettes)
{
p.Visible = true;
p.ResumeLayout();
}
pmMiniMap.Image = Minimap.AddStaticResources(surface1.Map, Minimap.TerrainBitmap(surface1.Map, true));
propertiesToolStripMenuItem.Enabled = true;
toolStripMenuItemProperties.Enabled = true;
resizeToolStripMenuItem.Enabled = true;
toolStripMenuItemResize.Enabled = true;
saveToolStripMenuItem.Enabled = true;
toolStripMenuItemSave.Enabled = true;
saveAsToolStripMenuItem.Enabled = true;
mnuMinimapToPNG.Enabled = true;	// TODO
PopulateActorOwnerChooser();
}
void PopulateActorOwnerChooser()
{
actorOwnerChooser.Items.Clear();
actorOwnerChooser.Items.AddRange(surface1.Map.Players.Values.ToArray());
actorOwnerChooser.SelectedIndex = 0;
surface1.NewActorOwner = (actorOwnerChooser.SelectedItem as PlayerReference).Name;
}
void ResizeClicked(object sender, EventArgs e)
{
using (var rd = new ResizeDialog())
{
rd.width.Value = surface1.Map.MapSize.X;
rd.height.Value = surface1.Map.MapSize.Y;
rd.cordonLeft.Value = surface1.Map.Bounds.Left;
rd.cordonTop.Value = surface1.Map.Bounds.Top;
rd.cordonRight.Value = surface1.Map.Bounds.Right;
rd.cordonBottom.Value = surface1.Map.Bounds.Bottom;
if (DialogResult.OK != rd.ShowDialog())
return;
surface1.Map.ResizeCordon((int)rd.cordonLeft.Value,
(int)rd.cordonTop.Value,
(int)rd.cordonRight.Value,
(int)rd.cordonBottom.Value);
if ((int)rd.width.Value != surface1.Map.MapSize.X || (int)rd.height.Value != surface1.Map.MapSize.Y)
{
surface1.Map.Resize((int)rd.width.Value, (int)rd.height.Value);
surface1.Bind(surface1.Map, surface1.TileSet, surface1.Palette, surface1.PlayerPalette);	// rebind it to invalidate all caches
}
surface1.Invalidate();
}
}
void SaveClicked(object sender, EventArgs e)
{
if (loadedMapName == null)
SaveAsClicked(sender, e);
else
{
surface1.Map.Save(loadedMapName);
dirty = false;
}
}
void SaveAsClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = false;
nms.btnOk.Text = "Save";
nms.txtNew.Text = "unnamed";
nms.txtPathOut.ReadOnly = false;
if (DialogResult.OK == nms.ShowDialog())
{
if (nms.txtNew.Text == "")
nms.txtNew.Text = "unnamed";
loadedMapName = Path.Combine(nms.MapFolderPath, nms.txtNew.Text + ".oramap");
SaveClicked(sender, e);
}
}
}
void OpenClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = true;
nms.txtPathOut.ReadOnly = true;
nms.btnOk.Text = "Open";
if (DialogResult.OK == nms.ShowDialog())
LoadMap(nms.txtNew.Tag as string);
}
}
void NewClicked(object sender, EventArgs e)
{
using (var nmd = new NewMapDialog())
{
nmd.theater.Items.Clear();
nmd.theater.Items.AddRange(Rules.TileSets.Select(a => a.Value.Id).ToArray());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="390" endline="422">
<![CDATA[
if (!Players.ContainsKey("Neutral"))
Players.Add("Neutral", new PlayerReference
{
Name = "Neutral",
Race = firstRace,
OwnsWorld = true,
NonCombatant = true
});
var numSpawns = GetSpawnPoints().Length;
for (var index = 0; index < numSpawns; index++)
{
if (Players.ContainsKey("Multi{0}".F(index)))
continue;
var p = new PlayerReference
{
Name = "Multi{0}".F(index),
Race = "Random",
Playable = true,
DefaultStartingUnits = true,
Enemies = new[] { "Creeps" }
};
Players.Add(p.Name, p);
}
Players.Add("Creeps", new PlayerReference
{
Name = "Creeps",
Race = firstRace,
NonCombatant = true,
Enemies = Players.Where(p => p.Value.Playable).Select(p => p.Key).ToArray()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="46" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Form1.cs" startline="161" endline="398">
<![CDATA[
{
var category = tc.Key ?? "(Uncategorized)";
var categoryHeader = new Label
{
BackColor = SystemColors.Highlight,
ForeColor = SystemColors.HighlightText,
Text = category,
AutoSize = false,
Height = 24,
TextAlign = ContentAlignment.MiddleLeft,
Width = tilePalette.ClientSize.Width,
};
tilePalette.Resize += (_,e) => categoryHeader.Width = tilePalette.ClientSize.Width;
if (tilePalette.Controls.Count > 0)
tilePalette.SetFlowBreak(
tilePalette.Controls[tilePalette.Controls.Count - 1], true);
tilePalette.Controls.Add(categoryHeader);
foreach( var t in tc )
{
try
{
var bitmap = tileset.RenderTemplate((ushort)t.Key, palette);
var ibox = new PictureBox
{
Image = bitmap,
Width = bitmap.Width / 2,
Height = bitmap.Height / 2,
SizeMode = PictureBoxSizeMode.StretchImage
};
var brushTemplate = new BrushTemplate { Bitmap = bitmap, N = t.Key };
ibox.Click += (_, e) => surface1.SetTool(new BrushTool(brushTemplate));
var template = t.Value;
tilePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{1}
template.Image,
template.Id,
template.Size.X,
template.Size.Y));
}
catch { }
}
}
var actorTemplates = new List<ActorTemplate>();
foreach (var a in Rules.Info.Keys)
{
try
{
var info = Rules.Info[a];
if (!info.Traits.Contains<RenderSimpleInfo>()) continue;
var etf = info.Traits.GetOrDefault<EditorTilesetFilterInfo>();
if (etf != null && etf.ExcludeTilesets != null
&& etf.ExcludeTilesets.Contains(tileset.Id)) continue;
if (etf != null && etf.RequireTilesets != null
&& !etf.RequireTilesets.Contains(tileset.Id)) continue;
var TemplatePalette = PlayerPalette;
var rsi = info.Traits.GetOrDefault<RenderSimpleInfo>();
if (rsi != null && rsi.Palette != null && rsi.Palette.Contains("terrain"))
TemplatePalette = palette;
var template = RenderUtils.RenderActor(info, tileset, TemplatePalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ActorTool(template));
actorPalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}".F(
info.Name));
actorTemplates.Add(template);
}
catch { }
}
surface1.BindActorTemplates(actorTemplates);
var resourceTemplates = new List<ResourceTemplate>();
foreach (var a in Rules.Info["world"].Traits.WithInterface<ResourceTypeInfo>())
{
try
{
var template = RenderUtils.RenderResourceType(a, tileset.Extensions, PlayerPalette);
var ibox = new PictureBox
{
Image = template.Bitmap,
Width = 32,
Height = 32,
SizeMode = PictureBoxSizeMode.Zoom,
BorderStyle = BorderStyle.FixedSingle
};
ibox.Click += (_, e) => surface1.SetTool(new ResourceTool(template));
resourcePalette.Controls.Add(ibox);
tt.SetToolTip(ibox,
"{0}
template.Info.Name,
template.Info.ValuePerUnit));
resourceTemplates.Add(template);
}
catch { }
}
surface1.BindResourceTemplates(resourceTemplates);
foreach (var p in palettes)
{
p.Visible = true;
p.ResumeLayout();
}
pmMiniMap.Image = Minimap.AddStaticResources(surface1.Map, Minimap.TerrainBitmap(surface1.Map, true));
propertiesToolStripMenuItem.Enabled = true;
toolStripMenuItemProperties.Enabled = true;
resizeToolStripMenuItem.Enabled = true;
toolStripMenuItemResize.Enabled = true;
saveToolStripMenuItem.Enabled = true;
toolStripMenuItemSave.Enabled = true;
saveAsToolStripMenuItem.Enabled = true;
mnuMinimapToPNG.Enabled = true;	// TODO
PopulateActorOwnerChooser();
}
void PopulateActorOwnerChooser()
{
actorOwnerChooser.Items.Clear();
actorOwnerChooser.Items.AddRange(surface1.Map.Players.Values.ToArray());
actorOwnerChooser.SelectedIndex = 0;
surface1.NewActorOwner = (actorOwnerChooser.SelectedItem as PlayerReference).Name;
}
void ResizeClicked(object sender, EventArgs e)
{
using (var rd = new ResizeDialog())
{
rd.width.Value = surface1.Map.MapSize.X;
rd.height.Value = surface1.Map.MapSize.Y;
rd.cordonLeft.Value = surface1.Map.Bounds.Left;
rd.cordonTop.Value = surface1.Map.Bounds.Top;
rd.cordonRight.Value = surface1.Map.Bounds.Right;
rd.cordonBottom.Value = surface1.Map.Bounds.Bottom;
if (DialogResult.OK != rd.ShowDialog())
return;
surface1.Map.ResizeCordon((int)rd.cordonLeft.Value,
(int)rd.cordonTop.Value,
(int)rd.cordonRight.Value,
(int)rd.cordonBottom.Value);
if ((int)rd.width.Value != surface1.Map.MapSize.X || (int)rd.height.Value != surface1.Map.MapSize.Y)
{
surface1.Map.Resize((int)rd.width.Value, (int)rd.height.Value);
surface1.Bind(surface1.Map, surface1.TileSet, surface1.Palette, surface1.PlayerPalette);	// rebind it to invalidate all caches
}
surface1.Invalidate();
}
}
void SaveClicked(object sender, EventArgs e)
{
if (loadedMapName == null)
SaveAsClicked(sender, e);
else
{
surface1.Map.Save(loadedMapName);
dirty = false;
}
}
void SaveAsClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = false;
nms.btnOk.Text = "Save";
nms.txtNew.Text = "unnamed";
nms.txtPathOut.ReadOnly = false;
if (DialogResult.OK == nms.ShowDialog())
{
if (nms.txtNew.Text == "")
nms.txtNew.Text = "unnamed";
loadedMapName = Path.Combine(nms.MapFolderPath, nms.txtNew.Text + ".oramap");
SaveClicked(sender, e);
}
}
}
void OpenClicked(object sender, EventArgs e)
{
using (var nms = new MapSelect(currentMod))
{
nms.txtNew.ReadOnly = true;
nms.txtPathOut.ReadOnly = true;
nms.btnOk.Text = "Open";
if (DialogResult.OK == nms.ShowDialog())
LoadMap(nms.txtNew.Tag as string);
}
}
void NewClicked(object sender, EventArgs e)
{
using (var nmd = new NewMapDialog())
{
nmd.theater.Items.Clear();
nmd.theater.Items.AddRange(Rules.TileSets.Select(a => a.Value.Id).ToArray());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs" startline="84" endline="92">
<![CDATA[
}
EnumerateMaps();
}
void EnumerateMaps()
{
var maps = Game.modData.AvailableMaps
.Where(kv => kv.Value.Selectable)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="47" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\LegacyMapImporter.cs" startline="230" endline="237">
<![CDATA[
static byte ReadByte(Stream s)
{
int ret = s.ReadByte();
if (ret == -1)
throw new NotImplementedException();
return (byte)ret;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="231" endline="238">
<![CDATA[
static byte ReadByte(Stream s)
{
int ret = s.ReadByte();
if (ret == -1)
throw new NotImplementedException();
return (byte)ret;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="48" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\LegacyMapImporter.cs" startline="238" endline="245">
<![CDATA[
static ushort ReadWord(Stream s)
{
ushort ret = ReadByte(s);
ret |= (ushort)(ReadByte(s) << 8);
return ret;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="239" endline="246">
<![CDATA[
static ushort ReadWord(Stream s)
{
ushort ret = ReadByte(s);
ret |= (ushort)(ReadByte(s) << 8);
return ret;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="49" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="50" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="51" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="52" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="53" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\MapSelect.Designer.cs" startline="20" endline="26">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="54" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="55" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="56" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="57" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="58" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="59" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="60" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="61" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="62" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="63" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="64" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="65" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="66" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public NewMapDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="67" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="68" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="69" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="70" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\NewMapDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="71" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="72" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="73" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="74" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="75" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="76" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="77" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="78" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="79" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="80" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="81" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="82" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public PropertiesDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="83" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="84" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="85" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\PropertiesDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="86" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Properties\Resources.Designer.cs" startline="34" endline="46">
<![CDATA[
[global
internal static global
get {
if (object.ReferenceEquals(resourceMan, null)) {
global
resourceMan = temp;
}
return resourceMan;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\Properties\Resources.Designer.cs" startline="34" endline="46">
<![CDATA[
[global
internal static global
get {
if (object.ReferenceEquals(resourceMan, null)) {
global
resourceMan = temp;
}
return resourceMan;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="87" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Properties\Resources.Designer.cs" startline="47" endline="57">
<![CDATA[
}
[global
internal static global
get {
return resourceCulture;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\Properties\Resources.Designer.cs" startline="47" endline="57">
<![CDATA[
}
[global
internal static global
get {
return resourceCulture;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="88" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="89" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="90" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="91" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="92" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="93" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="94" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="95" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="96" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="97" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="98" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.cs" startline="18" endline="20">
<![CDATA[
private System.ComponentModel.IContainer components = null;
public ResizeDialog()
{
InitializeComponent();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="99" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="100" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\ResizeDialog.Designer.cs" startline="25" endline="31">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="101" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Surface.cs" startline="55" endline="114">
<![CDATA[
Dictionary<string, ActorTemplate> ActorTemplates = new Dictionary<string, ActorTemplate>();
public Dictionary<int, ResourceTemplate> ResourceTemplates = new Dictionary<int, ResourceTemplate>();
static readonly Font MarkerFont = new Font(FontFamily.GenericSansSerif, 12.0f, FontStyle.Regular);
static readonly SolidBrush TextBrush = new SolidBrush(Color.Red);
public Keys GetModifiers() { return ModifierKeys; }
public void Bind(Map m, TileSet ts, Palette p, Palette pp)
{
Map = m;
TileSet = ts;
Palette = p;
PlayerPalette = pp;
PlayerPalettes = null;
Chunks.Clear();
Tool = null;
}
public void SetTool(ITool tool) { Tool = tool; ClearSelection(); }
public void BindActorTemplates(IEnumerable<ActorTemplate> templates)
{
ActorTemplates = templates.ToDictionary(a => a.Info.Name.ToLowerInvariant());
}
public void BindResourceTemplates(IEnumerable<ResourceTemplate> templates)
{
ResourceTemplates = templates.ToDictionary(a => a.Info.ResourceType);
}
public Dictionary<int2, Bitmap> Chunks = new Dictionary<int2, Bitmap>();
public Surface()
{
BackColor = Color.Black;
SetStyle(ControlStyles.OptimizedDoubleBuffer, true);
SetStyle(ControlStyles.ResizeRedraw, true);
UpdateStyles();
}
static readonly Pen SelectionPen = new Pen(Color.Blue);
static readonly Pen PastePen = new Pen(Color.Green);
static readonly Pen CordonPen = new Pen(Color.Red);
int2 MousePos;
public void Scroll(int2 dx)
{
Offset -= dx;
Invalidate();
}
protected override void OnDoubleClick(EventArgs e)
{
base.OnDoubleClick(e);
var x = Map.Actors.Value.FirstOrDefault(a => a.Value.Location() == GetBrushLocation());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Editor\Surface.cs" startline="115" endline="472">
<![CDATA[
if (x.Key != null)
ActorDoubleClicked(x);
}
protected override void OnMouseWheel(MouseEventArgs e)
{
base.OnMouseWheel(e);
if (Map == null) return;
Zoom *= e.Delta > 0 ? 4.0f / 3.0f
Invalidate();
}
protected override void OnMouseLeave(EventArgs e)
{
base.OnMouseLeave(e);
this.Parent.Focus();
Invalidate();
}
protected override void OnMouseEnter(EventArgs e)
{
base.OnMouseLeave(e);
this.Focus();
Invalidate();
}
protected override void OnMouseMove(MouseEventArgs e)
{
base.OnMouseMove(e);
if (Map == null) return;
var oldMousePos = MousePos;
MousePos = new int2(e.Location);
MousePositionChanged(GetBrushLocation().ToString());
if (e.Button == MouseButtons.Middle || (e.Button != MouseButtons.None && IsPanning))
Scroll(oldMousePos - MousePos);
else
{
if (e.Button == MouseButtons.Right || (IsErasing && e.Button == MouseButtons.Left))
Erase();
if (e.Button == MouseButtons.Left && !IsErasing)
Draw();
Invalidate();
}
}
void Erase()
{
var brushLocation = GetBrushLocation();
if (Map == null || brushLocation.X >= Map.MapSize.X ||
brushLocation.Y >= Map.MapSize.Y ||
brushLocation.X < 0 ||
brushLocation.Y < 0)
return;
Tool = null;
var key = Map.Actors.Value.FirstOrDefault(a => a.Value.Location() == brushLocation);
if (key.Key != null) Map.Actors.Value.Remove(key.Key);
if (Map.MapResources.Value[brushLocation.X, brushLocation.Y].type != 0)
{
Map.MapResources.Value[brushLocation.X, brushLocation.Y] = new TileReference<byte, byte>();
var ch = new int2((brushLocation.X) / ChunkSize, (brushLocation.Y) / ChunkSize);
if (Chunks.ContainsKey(ch))
{
Chunks[ch].Dispose();
Chunks.Remove(ch);
}
}
AfterChange();
ClearSelection();
}
void Draw()
{
if (Tool != null)
{
Tool.Apply(this);
AfterChange();
}
else if (IsPaste)
PasteSelection();
else
SelectionEnd = GetBrushLocationBR();
}
protected override void OnMouseDown(MouseEventArgs e)
{
base.OnMouseDown(e);
if (Map == null) return;
if (!IsPanning)
{
if (e.Button == MouseButtons.Right) Erase();
if (e.Button == MouseButtons.Left && !IsErasing)
{
Draw();
if (!IsPaste)
SelectionStart = SelectionEnd = GetBrushLocation();
}
}
Invalidate();
}
public const int ChunkSize = 8;		// 8x8 chunks ==> 192x192 bitmaps.
Bitmap RenderChunk(int u, int v)
{
var bitmap = new Bitmap(ChunkSize * TileSet.TileSize, ChunkSize * TileSet.TileSize);
var data = bitmap.LockBits(bitmap.Bounds(),
ImageLockMode.WriteOnly, PixelFormat.Format32bppArgb);
unsafe
{
int* p = (int*)data.Scan0.ToPointer();
var stride = data.Stride >> 2;
for (var i = 0; i < ChunkSize; i++)
for (var j = 0; j < ChunkSize; j++)
{
var tr = Map.MapTiles.Value[u * ChunkSize + i, v * ChunkSize + j];
var tile = TileSet.Templates[tr.type].Data;
var index = (tr.index < tile.TileBitmapBytes.Count) ? tr.index
var rawImage = tile.TileBitmapBytes[index];
for (var x = 0; x < TileSet.TileSize; x++)
for (var y = 0; y < TileSet.TileSize; y++)
p[(j * TileSet.TileSize + y) * stride + i * TileSet.TileSize + x] = Palette.GetColor(rawImage[x + TileSet.TileSize * y]).ToArgb();
if (Map.MapResources.Value[u * ChunkSize + i, v * ChunkSize + j].type != 0)
{
var resourceImage = ResourceTemplates[Map.MapResources.Value[u * ChunkSize + i, v * ChunkSize + j].type].Bitmap;
var srcdata = resourceImage.LockBits(resourceImage.Bounds(),
ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);
int* q = (int*)srcdata.Scan0.ToPointer();
var srcstride = srcdata.Stride >> 2;
for (var x = 0; x < TileSet.TileSize; x++)
for (var y = 0; y < TileSet.TileSize; y++)
{
var c = q[y * srcstride + x];
if ((c & 0xff000000) != 0)	/* quick & dirty, i cbf doing real alpha */
p[(j * TileSet.TileSize + y) * stride + i * TileSet.TileSize + x] = c;
}
resourceImage.UnlockBits(srcdata);
}
}
}
bitmap.UnlockBits(data);
if (ShowGrid)
using( var g = SGraphics.FromImage(bitmap) )
{
var rect = new Rectangle(0,0,bitmap.Width, bitmap.Height);
ControlPaint.DrawGrid( g, rect,	new Size(2, Game.CellSize), Color.DarkRed );
ControlPaint.DrawGrid( g, rect,	new Size(Game.CellSize, 2), Color.DarkRed );
ControlPaint.DrawGrid( g, rect,	new Size(Game.CellSize, Game.CellSize), Color.Red );
}
return bitmap;
}
public CPos GetBrushLocation()
{
var vX = (int)Math.Floor((MousePos.X - Offset.X) / Zoom);
var vY = (int)Math.Floor((MousePos.Y - Offset.Y) / Zoom);
return new CPos(vX / TileSet.TileSize, vY / TileSet.TileSize);
}
public CPos GetBrushLocationBR()
{
var vX = (int)Math.Floor((MousePos.X - Offset.X) / Zoom);
var vY = (int)Math.Floor((MousePos.Y - Offset.Y) / Zoom);
return new CPos((vX + TileSet.TileSize - 1) / TileSet.TileSize,
(vY + TileSet.TileSize - 1) / TileSet.TileSize);
}
public void DrawActor(SGraphics g, CPos p, ActorTemplate t, ColorPalette cp)
{
var centered = t.Appearance == null || !t.Appearance.RelativeToTopLeft;
var actorPalette = cp;
if (t.Appearance != null && t.Appearance.UseTerrainPalette)
actorPalette = Palette.AsSystemPalette();
DrawImage(g, t.Bitmap, p, centered, actorPalette);
}
float2 GetDrawPosition(CPos location, Bitmap bmp, bool centered)
{
float offsetX = centered ? bmp.Width / 2 - TileSet.TileSize / 2
float drawX = TileSet.TileSize * location.X * Zoom + Offset.X - offsetX;
float offsetY = centered ? bmp.Height / 2 - TileSet.TileSize / 2
float drawY = TileSet.TileSize * location.Y * Zoom + Offset.Y - offsetY;
return new float2(drawX, drawY);
}
public void DrawImage(SGraphics g, Bitmap bmp, CPos location, bool centered, ColorPalette cp)
{
var drawPos = GetDrawPosition(location, bmp, centered);
var sourceRect = new RectangleF(0, 0, bmp.Width, bmp.Height);
var destRect = new RectangleF(drawPos.X, drawPos.Y, bmp.Width * Zoom, bmp.Height * Zoom);
var restorePalette = bmp.Palette;
if (cp != null) bmp.Palette = cp;
g.DrawImage(bmp, destRect, sourceRect, GraphicsUnit.Pixel);
if (cp != null) bmp.Palette = restorePalette;
}
void DrawActorBorder(SGraphics g, CPos p, ActorTemplate t)
{
var centered = t.Appearance == null || !t.Appearance.RelativeToTopLeft;
var drawPos = GetDrawPosition(p, t.Bitmap, centered);
g.DrawRectangle(CordonPen,
drawPos.X, drawPos.Y,
t.Bitmap.Width * Zoom, t.Bitmap.Height * Zoom);
}
ColorPalette GetPaletteForPlayerInner(string name)
{
var pr = Map.Players[name];
var pcpi = Rules.Info["player"].Traits.Get<PlayerColorPaletteInfo>();
var remap = new PlayerColorRemap(pcpi.RemapIndex, pr.Color, pcpi.Ramp);
return new Palette(PlayerPalette, remap).AsSystemPalette();
}
Cache<string, ColorPalette> PlayerPalettes;
public ColorPalette GetPaletteForPlayer(string player)
{
if (PlayerPalettes == null)
PlayerPalettes = new Cache<string, ColorPalette>(GetPaletteForPlayerInner);
return PlayerPalettes[player];
}
ColorPalette GetPaletteForActor(ActorReference ar)
{
var ownerInit = ar.InitDict.GetOrDefault<OwnerInit>();
if (ownerInit == null)
return null;
return GetPaletteForPlayer(ownerInit.PlayerName);
}
protected override void OnPaint(PaintEventArgs e)
{
if (Map == null) return;
if (TileSet == null) return;
for (var u = 0; u < Map.MapSize.X; u += ChunkSize)
for (var v = 0; v < Map.MapSize.Y; v += ChunkSize)
{
var x = new int2(u / ChunkSize, v / ChunkSize);
if (!Chunks.ContainsKey(x)) Chunks[x] = RenderChunk(u / ChunkSize, v / ChunkSize);
var bmp = Chunks[x];
float DrawX = TileSet.TileSize * (float)ChunkSize * (float)x.X * Zoom + Offset.X;
float DrawY = TileSet.TileSize * (float)ChunkSize * (float)x.Y * Zoom + Offset.Y;
RectangleF sourceRect = new RectangleF(0, 0, bmp.Width, bmp.Height);
RectangleF destRect = new RectangleF(DrawX, DrawY, bmp.Width * Zoom, bmp.Height * Zoom);
e.Graphics.DrawImage(bmp, destRect, sourceRect, GraphicsUnit.Pixel);
}
e.Graphics.DrawRectangle(CordonPen,
Map.Bounds.Left * TileSet.TileSize * Zoom + Offset.X,
Map.Bounds.Top * TileSet.TileSize * Zoom + Offset.Y,
Map.Bounds.Width * TileSet.TileSize * Zoom,
Map.Bounds.Height * TileSet.TileSize * Zoom);
e.Graphics.DrawRectangle(SelectionPen,
(SelectionStart.X * TileSet.TileSize * Zoom) + Offset.X,
(SelectionStart.Y * TileSet.TileSize * Zoom) + Offset.Y,
(SelectionEnd - SelectionStart).X * TileSet.TileSize * Zoom,
(SelectionEnd - SelectionStart).Y * TileSet.TileSize * Zoom);
if (IsPaste)
{
var loc = GetBrushLocation();
var width = Math.Abs((SelectionStart - SelectionEnd).X);
var height = Math.Abs((SelectionStart - SelectionEnd).Y);
e.Graphics.DrawRectangle(PastePen,
(loc.X * TileSet.TileSize * Zoom) + Offset.X,
(loc.Y * TileSet.TileSize * Zoom) + Offset.Y,
width * (TileSet.TileSize * Zoom),
height * (TileSet.TileSize * Zoom));
}
foreach (var ar in Map.Actors.Value)
{
if (ActorTemplates.ContainsKey(ar.Value.Type))
DrawActor(e.Graphics, ar.Value.Location(), ActorTemplates[ar.Value.Type],
GetPaletteForActor(ar.Value));
else
Console.WriteLine("Warning
}
if (ShowActorNames)
foreach (var ar in Map.Actors.Value)
if (!ar.Key.StartsWith("Actor"))	// if it has a custom name
e.Graphics.DrawStringContrast(Font, ar.Key,
(int)(ar.Value.Location().X * TileSet.TileSize * Zoom + Offset.X),
(int)(ar.Value.Location().Y * TileSet.TileSize * Zoom + Offset.Y),
Brushes.White,
Brushes.Black);
if (ShowRuler && Zoom > 0.2)
{
for (int i = Map.Bounds.Left; i <= Map.Bounds.Right; i+=8)
{
if( i % 8 == 0)
{
PointF point = new PointF(i * TileSet.TileSize * Zoom + Offset.X, (Map.Bounds.Top - 8) * TileSet.TileSize * Zoom + Offset.Y);
e.Graphics.DrawString((i - Map.Bounds.Left).ToString(), MarkerFont, TextBrush, point);
}
}
for (int i = Map.Bounds.Top; i <= Map.Bounds.Bottom; i+=8)
{
if (i % 8 == 0)
{
PointF point = new PointF((Map.Bounds.Left - 8) * TileSet.TileSize * Zoom + Offset.X, i * TileSet.TileSize * Zoom + Offset.Y);
e.Graphics.DrawString((i - Map.Bounds.Left).ToString(), MarkerFont, TextBrush, point);
}
}
}
if (Tool != null)
Tool.Preview(this, e.Graphics);
if (Tool == null)
{
var x = Map.Actors.Value.FirstOrDefault(a => a.Value.Location() == GetBrushLocation());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="102" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Exts.cs" startline="83" endline="88">
<![CDATA[
public static T[] GetCustomAttributes<T>(this MemberInfo mi, bool inherit)
where T
{
return (T[])mi.GetCustomAttributes(typeof(T), inherit);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Exts.cs" startline="89" endline="94">
<![CDATA[
public static T[] GetCustomAttributes<T>(this ParameterInfo mi)
where T
{
return (T[])mi.GetCustomAttributes(typeof(T), true);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="103" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="104" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="105" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\SoundInfo.cs" startline="51" endline="62">
<![CDATA[
}
}
public class SoundPool
{
readonly string[] clips;
readonly List<string> liveclips = new List<string>();
public SoundPool(params string[] clips)
{
this.clips = clips;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="106" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="107" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="108" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="109" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="110" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="111" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="112" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="113" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="114" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="115" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="116" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="117" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="118" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="119" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="120" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="121" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="122" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="123" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="124" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="125" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="126" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="127" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="128" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="129" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="130" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="131" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="132" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="133" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FieldLoader.cs" startline="406" endline="414">
<![CDATA[
}
public class FieldFromYamlKeyAttribute
public class DescAttribute
{
public readonly string[] Lines;
public DescAttribute(params string[] lines) { Lines = lines; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="134" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs" startline="58" endline="192">
<![CDATA[
public static byte[] Decompress(byte[] src)
{
BitReader br = new BitReader(src);
int coded = br.ReadBits(8);
if (coded < 0 || coded > 1)
throw new NotImplementedException("Invalid datastream");
bool EncodedLiterals = (coded == 1);
int dict = br.ReadBits(8);
if (dict < 4 || dict > 6)
throw new InvalidDataException("Invalid dictionary size");
ushort next = 0; // index of next write location in out[]
bool first = true; // true to check distances (for first 4K)
byte[] outBuffer = new byte[MAXWIN]; // output buffer and sliding window
var ms = new MemoryStream();
do
{
if (br.ReadBits(1) == 1)
{
int symbol = Decode(lencode, br);
int len = lengthbase[symbol] + br.ReadBits(extra[symbol]);
if (len == 519) // Magic number for "done"
{
for (int i = 0; i < next; i++)
ms.WriteByte(outBuffer[i]);
break;
}
symbol = len == 2 ? 2
int dist = Decode(distcode, br) << symbol;
dist += br.ReadBits(symbol);
dist++;
if (first && dist > next)
throw new InvalidDataException("Attempt to jump before data");
do
{
int dest = next;
int source = dest - dist;
int copy = MAXWIN;
if (next < dist)
{
source += copy;
copy = dist;
}
copy -= next;
if (copy > len)
copy = len;
len -= copy;
next += (ushort)copy;
while( copy-- > 0 )
outBuffer[dest++] = outBuffer[source++];
if (next == MAXWIN)
{
for (int i = 0; i < next; i++)
ms.WriteByte(outBuffer[i]);
next = 0;
first = false;
}
} while (len != 0);
}
else // literal value
{
int symbol = EncodedLiterals ? Decode(litcode, br)
outBuffer[next++] = (byte)symbol;
if (next == MAXWIN)
{
for (int i = 0; i < next; i++)
ms.WriteByte(outBuffer[i]);
next = 0;
first = false;
}
}
} while (true);
return ms.ToArray();
}
static int Decode(Huffman h, BitReader br)
{
int code = 0; // len bits being decoded
int first = 0; // first code of length len
int index = 0; // index of first code of length len in symbol table
short next = 1;
while (true)
{
code |= br.ReadBits(1) ^ 1; // invert code
int count = h.Count[next++];
if (code < first + count)
return h.Symbol[index + (code - first)];
index += count;
first += count;
first <<= 1;
code <<= 1;
}
}
}
class BitReader
{
readonly byte[] src;
int offset = 0;
int bitBuffer = 0;
int bitCount = 0;
public BitReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs" startline="19" endline="24">
<![CDATA[
int offset = 0;
public FastByteReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="135" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs" startline="69" endline="87">
<![CDATA[
void Encrypt(ref uint a, ref uint b)
{
uint _a = a, _b = b;
_a ^= m_p[0];
bool x = false;
for( int i = 1; i <= 16; i++, x ^= true)
{
if (x)
Round(ref _a, _b, i);
else
Round(ref _b, _a, i);
}
for( int i = 1; i <= 16; i++, x ^= true)
{
if (x)
Round(ref _a, _b, i);
else
Round(ref _b, _a, i);
}
_b ^= m_p[17];
a = _b;
b = _a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs" startline="88" endline="106">
<![CDATA[
void Decrypt(ref uint a, ref uint b)
{
uint _a = a, _b = b;
_a ^= m_p[17];
bool x = false;
for (int i = 16; i >= 1; i--, x ^= true)
{
if (x)
Round(ref _a, _b, i);
else
Round(ref _b, _a, i);
}
for (int i = 16; i >= 1; i--, x ^= true)
{
if (x)
Round(ref _a, _b, i);
else
Round(ref _b, _a, i);
}
_b ^= m_p[0];
a = _b;
b = _a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="136" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="137" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="138" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="139" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="140" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="141" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="142" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="143" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="144" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="145" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="146" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="147" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="148" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="149" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="150" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="151" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="152" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="153" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="154" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="155" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="156" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="157" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="158" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="159" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="160" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="161" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="162" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="163" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="164" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="165" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="166" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="167" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="168" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs" startline="28" endline="34">
<![CDATA[
PublicKey pubkey = new PublicKey();
uint[] glob1 = new uint[64];
uint glob1_bitlen, glob1_len_x2;
uint[] glob2 = new uint[130];
uint[] glob1_hi = new uint[4];
uint[] glob1_hi_inv = new uint[4];
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="169" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs" startline="19" endline="24">
<![CDATA[
int offset = 0;
public FastByteReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="170" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs" startline="19" endline="24">
<![CDATA[
int offset = 0;
public FastByteReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="171" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs" startline="19" endline="24">
<![CDATA[
int offset = 0;
public FastByteReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="172" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs" startline="19" endline="24">
<![CDATA[
int offset = 0;
public FastByteReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="173" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs" startline="19" endline="24">
<![CDATA[
int offset = 0;
public FastByteReader(byte[] src)
{
this.src = src;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="174" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\IniFile.cs" startline="21" endline="26">
<![CDATA[
Dictionary<string, IniSection> sections = new Dictionary<string, IniSection>();
public IniFile( Stream s )
{
Load( s );
}
public IniFile( params Stream[] streams )
{
foreach( var s in streams )
Load( s );
}
public void Load( Stream s )
{
StreamReader reader = new StreamReader( s );
IniSection currentSection = null;
while( !reader.EndOfStream )
{
string line = reader.ReadLine();
if( line.Length == 0 ) continue;
switch( line[ 0 ] )
{
case ';'
case '['
default
}
}
}
Regex sectionPattern = new Regex( @"^\[([^]*)\]" );
public IniFile( Stream s )
{
Load( s );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="29">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="175" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\IniFile.cs" startline="21" endline="26">
<![CDATA[
Dictionary<string, IniSection> sections = new Dictionary<string, IniSection>();
public IniFile( Stream s )
{
Load( s );
}
public IniFile( params Stream[] streams )
{
foreach( var s in streams )
Load( s );
}
public void Load( Stream s )
{
StreamReader reader = new StreamReader( s );
IniSection currentSection = null;
while( !reader.EndOfStream )
{
string line = reader.ReadLine();
if( line.Length == 0 ) continue;
switch( line[ 0 ] )
{
case ';'
case '['
default
}
}
}
Regex sectionPattern = new Regex( @"^\[([^]*)\]" );
public IniFile( Stream s )
{
Load( s );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="176" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\IniFile.cs" startline="21" endline="26">
<![CDATA[
Dictionary<string, IniSection> sections = new Dictionary<string, IniSection>();
public IniFile( Stream s )
{
Load( s );
}
public IniFile( params Stream[] streams )
{
foreach( var s in streams )
Load( s );
}
public void Load( Stream s )
{
StreamReader reader = new StreamReader( s );
IniSection currentSection = null;
while( !reader.EndOfStream )
{
string line = reader.ReadLine();
if( line.Length == 0 ) continue;
switch( line[ 0 ] )
{
case ';'
case '['
default
}
}
}
Regex sectionPattern = new Regex( @"^\[([^]*)\]" );
public IniFile( Stream s )
{
Load( s );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="177" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\IniFile.cs" startline="21" endline="26">
<![CDATA[
Dictionary<string, IniSection> sections = new Dictionary<string, IniSection>();
public IniFile( Stream s )
{
Load( s );
}
public IniFile( params Stream[] streams )
{
foreach( var s in streams )
Load( s );
}
public void Load( Stream s )
{
StreamReader reader = new StreamReader( s );
IniSection currentSection = null;
while( !reader.EndOfStream )
{
string line = reader.ReadLine();
if( line.Length == 0 ) continue;
switch( line[ 0 ] )
{
case ';'
case '['
default
}
}
}
Regex sectionPattern = new Regex( @"^\[([^]*)\]" );
public IniFile( Stream s )
{
Load( s );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="178" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\IniFile.cs" startline="113" endline="123">
<![CDATA[
}
public class IniSection
{
public string Name { get; private set; }
Dictionary<string, string> values = new Dictionary<string, string>();
public IniSection( string name )
{
Name = name;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Support\PerfHistory.cs" startline="104" endline="115">
<![CDATA[
}
}
public class PerfSample
{
readonly Stopwatch sw = new Stopwatch();
readonly string Item;
public PerfSample(string item)
{
Item = item;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="179" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\FileFormats\IniFile.cs" startline="134" endline="139">
<![CDATA[
public string GetValue( string key, string defaultValue )
{
string s;
return values.TryGetValue( key, out s ) ? s
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PlayerColorRemap.cs" startline="47" endline="53">
<![CDATA[
public Color GetRemappedColor(Color original, int index)
{
Color c;
return remapColors.TryGetValue(index, out c)
? c
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="180" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\FileSystem.cs" startline="94" endline="117">
<![CDATA[
}
public static bool Unmount(IFolder mount)
{
return (mountedFolders.RemoveAll(f => f == mount) > 0);
}
public static void Mount(IFolder mount)
{
if (!mountedFolders.Contains(mount)) mountedFolders.Add(mount);
}
public static void LoadFromManifest( Manifest manifest )
{
UnmountAll();
foreach (var dir in manifest.Folders) Mount(dir);
foreach (var pkg in manifest.Packages) Mount(pkg);
}
static Stream GetFromCache( Cache<uint, List<IFolder>> index, string filename )
{
var folder = index[PackageEntry.HashFilename(filename)]
.Where(x => x.Exists(filename))
.OrderBy(x => x.Priority)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\FileSystem.cs" startline="118" endline="144">
<![CDATA[
.FirstOrDefault();
if (folder != null)
return folder.GetContent(filename);
return null;
}
public static Stream Open(string filename) { return OpenWithExts(filename, ""); }
public static Stream OpenWithExts( string filename, params string[] exts )
{
if( filename.IndexOfAny( new char[] { '/', '\\' } ) == -1 )
{
foreach( var ext in exts )
{
var s = GetFromCache( allFiles, filename + ext );
if( s != null )
return s;
}
}
foreach( var ext in exts )
{
var folder = mountedFolders
.Where(x => x.Exists(filename + ext))
.OrderByDescending(x => x.Priority)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="181" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\Folder.cs" startline="24" endline="32">
<![CDATA[
public Folder(string path, int priority, Dictionary<string, byte[]> contents)
{
this.path = path;
this.priority = priority;
if (Directory.Exists(path))
Directory.Delete(path, true);
Write(contents);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs" startline="35" endline="45">
<![CDATA[
public MixFile(string filename, int priority, Dictionary<string, byte[]> contents)
{
this.priority = priority;
if (File.Exists(filename))
File.Delete(filename);
s = File.Create(filename);
Write(contents);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="182" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\Folder.cs" startline="24" endline="32">
<![CDATA[
public Folder(string path, int priority, Dictionary<string, byte[]> contents)
{
this.path = path;
this.priority = priority;
if (Directory.Exists(path))
Directory.Delete(path, true);
Write(contents);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="38" endline="50">
<![CDATA[
public ZipFile(string filename, int priority, Dictionary<string, byte[]> contents)
{
this.priority = priority;
this.filename = filename;
if (File.Exists(filename))
File.Delete(filename);
pkg = SZipFile.Create(filename);
Write(contents);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="183" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs" startline="86" endline="98">
<![CDATA[
public Stream GetContent(uint hash)
{
PackageEntry e;
if (!index.TryGetValue(hash, out e))
return null;
s.Seek( dataStart + e.Offset, SeekOrigin.Begin );
byte[] data = new byte[ e.Length ];
s.Read( data, 0, (int)e.Length );
return new MemoryStream(Blast.Decompress(data));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs" startline="139" endline="150">
<![CDATA[
public Stream GetContent(uint hash)
{
PackageEntry e;
if (!index.TryGetValue(hash, out e))
return null;
s.Seek(dataStart + e.Offset, SeekOrigin.Begin);
var data = new byte[e.Length];
s.Read(data, 0, (int)e.Length);
return new MemoryStream(data);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="184" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs" startline="35" endline="45">
<![CDATA[
public MixFile(string filename, int priority, Dictionary<string, byte[]> contents)
{
this.priority = priority;
if (File.Exists(filename))
File.Delete(filename);
s = File.Create(filename);
Write(contents);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="38" endline="50">
<![CDATA[
public ZipFile(string filename, int priority, Dictionary<string, byte[]> contents)
{
this.priority = priority;
this.filename = filename;
if (File.Exists(filename))
File.Delete(filename);
pkg = SZipFile.Create(filename);
Write(contents);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="185" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="186" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="187" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="188" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="189" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="190" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="191" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="192" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="193" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="194" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="195" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="196" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="197" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="198" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="199" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="200" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="201" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="202" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="203" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="204" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="205" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="206" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="207" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="208" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="209" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="210" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="211" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="212" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="213" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs" startline="102" endline="110">
<![CDATA[
}
class StaticMemoryDataSource
{
byte[] data;
public StaticMemoryDataSource (byte[] data)
{
this.data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="214" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Graphics\Dune2ShpReader.cs" startline="134" endline="139">
<![CDATA[
}
public IEnumerator<Dune2ImageHeader> GetEnumerator()
{
return headers.GetEnumerator();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Utility\R8Reader.cs" startline="127" endline="132">
<![CDATA[
}
public IEnumerator<R8Image> GetEnumerator()
{
return headers.GetEnumerator();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="215" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Graphics\IGraphicsDevice.cs" startline="22" endline="27">
<![CDATA[
public RendererAttribute( Type graphicsDeviceType )
{
if( !typeof( IDeviceFactory ).IsAssignableFrom( graphicsDeviceType ) )
throw new InvalidOperationException( "Incorrect type in RendererAttribute" );
Type = graphicsDeviceType;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Cached.cs" startline="21" endline="27">
<![CDATA[
public Cached(Func<T> p)
{
if (p == null)
throw new ArgumentNullException();
this.p = p;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="216" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Graphics\IGraphicsDevice.cs" startline="22" endline="27">
<![CDATA[
public RendererAttribute( Type graphicsDeviceType )
{
if( !typeof( IDeviceFactory ).IsAssignableFrom( graphicsDeviceType ) )
throw new InvalidOperationException( "Incorrect type in RendererAttribute" );
Type = graphicsDeviceType;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Lazy.cs" startline="20" endline="26">
<![CDATA[
public Lazy(Func<T> p)
{
if (p == null)
throw new ArgumentNullException();
this.p = p;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="217" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Graphics\ShpReader.cs" startline="160" endline="165">
<![CDATA[
public static ShpReader Load(string filename)
{
using (var s = File.OpenRead(filename))
return new ShpReader(s);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Palette.cs" startline="117" endline="122">
<![CDATA[
public static Palette Load(string filename, int[] remap)
{
using(var s = File.OpenRead(filename))
return new Palette(s, remap);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="218" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="219" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="220" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="221" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="222" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="223" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="26" endline="52">
<![CDATA[
public readonly string Name = "Unnamed Bot";
public readonly int SquadSize = 8;
public readonly int AssignRolesInterval = 20;
public readonly int RushInterval = 600;
public readonly int AttackForceInterval = 30;
public readonly string RallypointTestBuilding = "fact";		// temporary hack to maintain previous rallypoint behavior.
public readonly string[] UnitQueues = { "Vehicle", "Infantry", "Plane", "Ship", "Aircraft" };
public readonly bool ShouldRepairBuildings = true;
string IBotInfo.Name { get { return this.Name; } }
[FieldLoader.LoadUsing("LoadUnits")]
public readonly Dictionary<string, float> UnitsToBuild = null;
[FieldLoader.LoadUsing("LoadBuildings")]
public readonly Dictionary<string, float> BuildingFractions = null;
[FieldLoader.LoadUsing("LoadUnitsCommonNames")]
public readonly Dictionary<string, string[]> UnitsCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingsCommonNames")]
public readonly Dictionary<string, string[]> BuildingCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingLimits")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="224" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="225" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="226" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="227" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="228" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="46">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="25" endline="44">
<![CDATA[
public readonly int Speed = 1;
public readonly int Arm = 0;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly bool Shadow = true;
public readonly bool Proximity = false;
public readonly string Trail = null;
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Rate of Turning")]
public readonly int ROT = 5;
[Desc("Explode when following the target longer than this.")]
public readonly int RangeLimit = 0;
public readonly bool TurboBoost = false;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
public readonly bool Jammable = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="229" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\PlayerReference.cs" startline="20" endline="47">
<![CDATA[
public bool OwnsWorld = false;
public bool NonCombatant = false;
public bool Playable = false;
public string Bot = null;
public bool DefaultStartingUnits = false;
public bool AllowBots = true;
public bool Required = false;
public bool LockRace = false;
public string Race;
public bool LockColor = false;
public HSLColor ColorRamp = new HSLColor(0,0,238);
public HSLColor Color { get { return ColorRamp; } set { ColorRamp = value; }}
public bool LockSpawn = false;
public int Spawn = 0;
public bool LockTeam = false;
public int Team = 0;
public int InitialCash = 0;
public string[] Allies = {};
public string[] Enemies = {};
public PlayerReference() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="21" endline="65">
<![CDATA[
[Desc("Distance (in pixels) from the explosion center at which damage is 1/2.")]
public readonly int Spread = 1;
[FieldLoader.LoadUsing( "LoadVersus" )]
[Desc("Damage vs each armortype. 0% = can't target.")]
public readonly Dictionary<string, float> Versus;
[Desc("Can this damage ore?")]
public readonly bool Ore = false;
[Desc("Explosion effect to use.")]
public readonly string Explosion = null;
[Desc("Explosion effect on hitting water (usually a splash).")]
public readonly string WaterExplosion = null;
[Desc("Type of smudge to apply to terrain.")]
public readonly string[] SmudgeType = { };
[Desc("Size of the explosion. provide 2 values for a ring effect (outer/inner).")]
public readonly int[] Size = { 0, 0 };
[Desc("Infantry death animation to use")]
public readonly int InfDeath = 1;
[Desc("Sound to play on impact.")]
public readonly string ImpactSound = null;
[Desc("Sound to play on impact with water")]
public readonly string WaterImpactSound = null;
[Desc("How much (raw) damage to deal")]
public readonly int Damage = 0;
[Desc("Delay in ticks before dealing the damage, 0 = instant (old model).")]
public readonly int Delay = 0;
[Desc("Which damage model to use.")]
public readonly DamageModel DamageModel = DamageModel.Normal;
[Desc("Whether we should prevent prone response for infantry.")]
public readonly bool PreventProne = false;
public float EffectivenessAgainst(Actor self)
{
var health = self.Info.Traits.GetOrDefault<HealthInfo>();
if (health == null) return 0f;
var armor = self.Info.Traits.GetOrDefault<ArmorInfo>();
if (armor == null || armor.Type == null) return 1;
float versus;
return Versus.TryGetValue(armor.Type, out versus) ? versus
}
public WarheadInfo( MiniYaml yaml )
{
FieldLoader.Load( this, yaml );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="230" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="231" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="232" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="233" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="234" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="235" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="236" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="237" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="238" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="239" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="240" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="241" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="242" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="243" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="244" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="245" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="246" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="247" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="248" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="249" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="250" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="251" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="252" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="253" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="28">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="254" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="29">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="255" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="29">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="256" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="29">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="257" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="29">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="258" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="23" endline="29">
<![CDATA[
public string[] AcceptsSmudgeType = { };
public bool IsWater = false;
public Color Color;
public string CustomCursor;
public TerrainTypeInfo() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="259" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="260" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="261" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="262" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="263" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="264" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="265" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="266" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="267" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="268" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="269" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="270" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="271" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="272" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="273" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="274" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="32" endline="45">
<![CDATA[
}
public class TileTemplate
{
public ushort Id;
public string Image;
public int2 Size;
public bool PickAny;
public string Category;
[FieldLoader.LoadUsing( "LoadTiles" )]
public Dictionary<byte, string> Tiles = new Dictionary<byte, string>();
public TileTemplate() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="275" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="276" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="277" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="278" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="279" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="280" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="281" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="282" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="76" endline="113">
<![CDATA[
if (onCancel != null)
fullscreenMask.OnMouseDown += _ => onCancel();
Ui.Root.AddChild(fullscreenMask);
var oldBounds = panel.Bounds;
panel.Bounds = new Rectangle(RenderOrigin.X, RenderOrigin.Y + Bounds.Height, oldBounds.Width, oldBounds.Height);
Ui.Root.AddChild(panel);
}
public void ShowDropDown<T>(string panelTemplate, int height, IEnumerable<T> options, Func<T, ScrollItemWidget, ScrollItemWidget> setupItem)
{
var substitutions = new Dictionary<string,int>() {{ "DROPDOWN_WIDTH", Bounds.Width }};
var panel = (ScrollPanelWidget)Ui.LoadWidget(panelTemplate, null, new WidgetArgs()
{{ "substitutions", substitutions }});
var itemTemplate = panel.Get<ScrollItemWidget>("TEMPLATE");
panel.RemoveChildren();
foreach (var option in options)
{
var o = option;
var item = setupItem(o, itemTemplate);
var onClick = item.OnClick;
item.OnClick = () => { onClick(); RemovePanel(); };
panel.AddChild(item);
}
panel.Bounds.Height = Math.Min(height, panel.ContentHeight);
AttachPanel(panel);
}
}
public class MaskWidget
{
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="283" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="284" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="285" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="286" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="287" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="288" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="289" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="290" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="291" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="292" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="293" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="294" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="295" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="296" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="297" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="298" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="299" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="300" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="301" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="302" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="303" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="304" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="305" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="306" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="307" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Map\TileSet.cs" startline="56" endline="91">
<![CDATA[
public MiniYaml Save()
{
var root = new List<MiniYamlNode>();
foreach (var field in Fields)
{
FieldInfo f = this.GetType().GetField(field);
if (f.GetValue(this) == null) continue;
root.Add( new MiniYamlNode( field, FieldSaver.FormatValue( this, f ) ) );
}
root.Add( new MiniYamlNode( "Tiles", null,
Tiles.Select( x => new MiniYamlNode( x.Key.ToString(), x.Value ) ).ToList() ) );
return new MiniYaml(null, root);
}
public Terrain Data;
}
public class TileSet
{
public string Name;
public string Id;
public string Palette;
public string PlayerPalette;
public int TileSize = 24;
public string[] Extensions;
public int WaterPaletteRotationBase = 0x60;
public Dictionary<string, TerrainTypeInfo> Terrain = new Dictionary<string, TerrainTypeInfo>();
public Dictionary<ushort, TileTemplate> Templates = new Dictionary<ushort, TileTemplate>();
public string[] EditorTemplateOrder;
static readonly string[] fields = {"Name", "TileSize", "Id", "Palette", "Extensions"};
public TileSet() {}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="308" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="309" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="310" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="311" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="312" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="313" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="314" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="315" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="316" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="317" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="318" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="319" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="320" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="321" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="322" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="323" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="324" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="325" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="326" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="327" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="328" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="329" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="330" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\MiniYaml.cs" startline="26" endline="36">
<![CDATA[
}
public SourceLocation Location;
public string Key;
public MiniYaml Value;
public MiniYamlNode( string k, MiniYaml v )
{
Key = k;
Value = v;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="331" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PackageEntry.cs" startline="24" endline="29">
<![CDATA[
public PackageEntry(uint hash, uint offset, uint length)
{
Hash = hash;
Offset = offset;
Length = length;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\AnimationWithOffset.cs" startline="27" endline="33">
<![CDATA[
public AnimationWithOffset(Animation a, Func<WorldRenderer, float2> o, Func<bool> d)
{
this.Animation = a;
this.OffsetFunc = o;
this.DisableFunc = d;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="332" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PackageEntry.cs" startline="24" endline="29">
<![CDATA[
public PackageEntry(uint hash, uint offset, uint length)
{
Hash = hash;
Offset = offset;
Length = length;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\WorldRenderer.cs" startline="25" endline="30">
<![CDATA[
public PaletteReference(string name, int index, Palette palette)
{
Name = name;
Index = index;
Palette = palette;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="333" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PackageEntry.cs" startline="24" endline="29">
<![CDATA[
public PackageEntry(uint hash, uint offset, uint length)
{
Hash = hash;
Offset = offset;
Length = length;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="105" endline="185">
<![CDATA[
var scale = 200 / Math.Max(5000, (float)Math.Ceiling(maxValue / 1000) * 1000);
var xStep = width / xAxisSize;
var yStep = height / yAxisSize;
var pointCount = GetSeries().First().Points.Count();
var pointStart = Math.Max(0, pointCount - xAxisSize);
var pointEnd = Math.Max(pointCount, xAxisSize);
var keyOffset = 0;
foreach (var series in GetSeries())
{
var key = series.Key;
var color = series.Color;
var points = series.Points;
if (points.Any())
{
points = points.Reverse().Take(xAxisSize).Reverse();
var scaledData = points.Select(d => d * scale);
var x = 0;
scaledData.Aggregate((a, b) =>
{
Game.Renderer.LineRenderer.DrawLine(
origin + new float2(x, -a),
origin + new float2(x + xStep, -b),
color, color);
x += xStep;
return b;
});
var value = points.Last();
if (value != 0)
{
tiny.DrawText(GetValueFormat().F(value), origin + new float2(x, -value * scale - 2), color);
}
}
tiny.DrawText(key, new float2(rect.Left, rect.Top) + new float2(5, 10 * keyOffset + 3), color);
keyOffset++;
}
for (int n = pointStart, x = 0; n <= pointEnd; n++, x += xStep)
{
Game.Renderer.LineRenderer.DrawLine(origin + new float2(x, 0), origin + new float2(x, -5), Color.White, Color.White);
tiny.DrawText(GetXAxisValueFormat().F(n), origin + new float2(x, 2), Color.White);
}
bold.DrawText(GetXAxisLabel(), origin + new float2(width / 2, 20), Color.White);
for (var y = (GetDisplayFirstYAxisValue() ? 0
{
var yValue = y / scale;
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width - 5, -y), origin + new float2(width, -y), Color.White, Color.White);
tiny.DrawText(GetYAxisValueFormat().F(yValue), origin + new float2(width + 2, -y), Color.White);
}
bold.DrawText(GetYAxisLabel(), origin + new float2(width + 40, -(height / 2)), Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(width, 0), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(0, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width, 0), origin + new float2(width, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(0, -height), origin + new float2(width, -height), Color.White, Color.White);
}
public override Widget Clone()
{
return new LineGraphWidget(this);
}
}
public class LineGraphSeries
{
public string Key;
public Color Color;
public IEnumerable<float> Points;
public LineGraphSeries(string key, Color color, IEnumerable<float> points)
{
Key = key;
Color = color;
Points = points;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="334" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PackageEntry.cs" startline="24" endline="29">
<![CDATA[
public PackageEntry(uint hash, uint offset, uint length)
{
Hash = hash;
Offset = offset;
Length = length;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="23" endline="28">
<![CDATA[
public Teleport(Actor chronosphere, CPos destination, bool killCargo)
{
this.chronosphere = chronosphere;
this.destination = destination;
this.killCargo = killCargo;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="335" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PackageEntry.cs" startline="24" endline="29">
<![CDATA[
public PackageEntry(uint hash, uint offset, uint length)
{
Hash = hash;
Offset = offset;
Length = length;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="23" endline="28">
<![CDATA[
public Objective(ObjectiveType type, string text, ObjectiveStatus status)
{
Type = type;
Text = text;
Status = status;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="336" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\PackageEntry.cs" startline="24" endline="29">
<![CDATA[
public PackageEntry(uint hash, uint offset, uint length)
{
Hash = hash;
Offset = offset;
Length = length;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="32" endline="41">
<![CDATA[
public ProximityCapturableInfo Info;
public Actor Self;
public ProximityCapturable(Actor self, ProximityCapturableInfo info)
{
Info = info;
Self = self;
OriginalOwner = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="337" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Cached.cs" startline="21" endline="27">
<![CDATA[
public Cached(Func<T> p)
{
if (p == null)
throw new ArgumentNullException();
this.p = p;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Lazy.cs" startline="20" endline="26">
<![CDATA[
public Lazy(Func<T> p)
{
if (p == null)
throw new ArgumentNullException();
this.p = p;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="338" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Cached.cs" startline="21" endline="27">
<![CDATA[
public Cached(Func<T> p)
{
if (p == null)
throw new ArgumentNullException();
this.p = p;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="339" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Cached.cs" startline="28" endline="39">
<![CDATA[
public T Value
{
get
{
if (hasValue)
return value;
value = p();
hasValue = true;
return value;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Lazy.cs" startline="27" endline="38">
<![CDATA[
public T Value
{
get
{
if (p == null)
return value;
value = p();
p = null;
return value;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="340" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="341" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="342" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="343" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="344" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="345" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="346" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="347" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="348" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="349" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="350" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="351" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="352" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="353" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="354" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="355" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="356" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="357" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="358" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="359" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="360" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="361" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="17" endline="21">
<![CDATA[
public DisposableAction(Action onDispose, Action onFinalize)
{
this.onDispose = onDispose;
this.onFinalize = onFinalize;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="362" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\DisposableAction.cs" startline="22" endline="33">
<![CDATA[
Action onDispose;
Action onFinalize;
bool disposed;
public void Dispose()
{
if (disposed) return;
disposed = true;
onDispose();
GC.SuppressFinalize(this);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs" startline="301" endline="312">
<![CDATA[
bool disposed;
public void Dispose()
{
if (disposed)
return;
disposed = true;
GC.SuppressFinalize(this);
PutBackIntoPool(cellInfo);
cellInfo = null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="363" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Lazy.cs" startline="20" endline="26">
<![CDATA[
public Lazy(Func<T> p)
{
if (p == null)
throw new ArgumentNullException();
this.p = p;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="364" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="365" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="366" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="367" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="368" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="369" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="370" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="371" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="372" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="373" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="374" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="375" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="376" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="377" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\Pair.cs" startline="40" endline="47">
<![CDATA[
public override bool Equals(object obj)
{
if (!(obj is Pair<T, U>))
return false;
return (Pair<T, U>)obj == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="378" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="379" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="380" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="381" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="382" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="383" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="384" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="385" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="386" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="387" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="388" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="389" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="390" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="73" endline="81">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
float2 o = (float2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="391" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="392" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="393" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="394" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="395" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="396" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="397" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="398" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="399" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="400" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="401" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="402" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="403" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="404" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="405" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="406" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="407" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="408" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="409" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="410" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="411" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="412" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="413" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="414" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="415" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="416" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="417" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="418" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\float2.cs" startline="84" endline="110">
<![CDATA[
public static bool WithinEpsilon(float2 a, float2 b, float e)
{
float2 d = a - b;
return Math.Abs(d.X) < e && Math.Abs(d.Y) < e;
}
public float2 Sign() { return new float2(Math.Sign(X), Math.Sign(Y)); }
public static float Dot(float2 a, float2 b) { return a.X * b.X + a.Y * b.Y; }
public float2 Round() { return new float2((float)Math.Round(X), (float)Math.Round(Y)); }
public override string ToString() { return "({0},{1})".F(X, Y); }
public int2 ToInt2() { return new int2((int)X, (int)Y); }
public static float2 Max(float2 a, float2 b) { return new float2(Math.Max(a.X, b.X), Math.Max(a.Y, b.Y)); }
public static float2 Min(float2 a, float2 b) { return new float2(Math.Min(a.X, b.X), Math.Min(a.Y, b.Y)); }
public float LengthSquared { get { return X * X + Y * Y; } }
public float Length { get { return (float)Math.Sqrt(LengthSquared); } }
}
public class EWMA
{
readonly float animRate;
float? value;
public EWMA(float animRate) { this.animRate = animRate; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="419" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="420" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="421" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="422" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="423" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="424" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="425" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="426" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="427" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="428" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="429" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="430" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="43" endline="51">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
int2 o = (int2)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="431" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="75" endline="80">
<![CDATA[
public int2 Clamp(Rectangle r)
{
return new int2(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="58" endline="65">
<![CDATA[
public PSubVec Clamp(Rectangle r)
{
return new PSubVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="432" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="75" endline="80">
<![CDATA[
public int2 Clamp(Rectangle r)
{
return new int2(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="52" endline="57">
<![CDATA[
public PSubPos Clamp(Rectangle r)
{
return new PSubPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="433" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="75" endline="80">
<![CDATA[
public int2 Clamp(Rectangle r)
{
return new int2(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="57" endline="64">
<![CDATA[
public PVecInt Clamp(Rectangle r)
{
return new PVecInt(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="434" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="75" endline="80">
<![CDATA[
public int2 Clamp(Rectangle r)
{
return new int2(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="81" endline="86">
<![CDATA[
public PPos Clamp(Rectangle r)
{
return new PPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="435" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="75" endline="80">
<![CDATA[
public int2 Clamp(Rectangle r)
{
return new int2(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="54" endline="61">
<![CDATA[
public CVec Clamp(Rectangle r)
{
return new CVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="436" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\Primitives\int2.cs" startline="75" endline="80">
<![CDATA[
public int2 Clamp(Rectangle r)
{
return new int2(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="45" endline="50">
<![CDATA[
public CPos Clamp(Rectangle r)
{
return new CPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="437" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\TypeDictionary.cs" startline="24" endline="31">
<![CDATA[
{
var t = val.GetType();
foreach( var i in t.GetInterfaces() )
InnerAdd( i, val );
foreach( var i in t.GetInterfaces() )
InnerAdd( i, val );
foreach( var tt in t.BaseTypes() )
InnerAdd( tt, val );
foreach( var tt in t.BaseTypes() )
InnerAdd( tt, val );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="41" endline="50">
<![CDATA[
public void AddTrait( Actor actor, object val )
{
var t = val.GetType();
foreach( var i in t.GetInterfaces() )
InnerAdd( actor, i, val );
foreach( var i in t.GetInterfaces() )
InnerAdd( actor, i, val );
foreach( var tt in t.BaseTypes() )
InnerAdd( actor, tt, val );
foreach( var tt in t.BaseTypes() )
InnerAdd( actor, tt, val );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="438" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="439" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="440" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="441" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="442" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="443" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="444" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="445" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="446" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="447" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="448" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WPos o = (WPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="449" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="450" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="451" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="452" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="453" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="454" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="455" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="456" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="457" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="458" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WVec.cs" startline="57" endline="65">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WVec o = (WVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="459" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="460" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="461" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="462" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="463" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="464" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="465" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="466" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="467" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="40" endline="48">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="468" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WAngle.cs" startline="29" endline="99">
<![CDATA[
public static readonly WAngle Zero = new WAngle(0);
public static WAngle FromFacing(int facing) { return new WAngle(facing*4); }
public static WAngle FromDegrees(int degrees) { return new WAngle(degrees*1024/360); }
public static WAngle operator +(WAngle a, WAngle b) { return new WAngle(a.Angle + b.Angle); }
public static WAngle operator -(WAngle a, WAngle b) { return new WAngle(a.Angle - b.Angle); }
public static WAngle operator -(WAngle a) { return new WAngle(-a.Angle); }
public static bool operator ==(WAngle me, WAngle other) { return (me.Angle == other.Angle); }
public static bool operator !=(WAngle me, WAngle other) { return !(me == other); }
public override int GetHashCode() { return Angle.GetHashCode(); }
public override bool Equals(object obj)
{
if (obj == null)
return false;
WAngle o = (WAngle)obj;
return o == this;
}
public int Sin() { return new WAngle(Angle - 256).Cos(); }
public int Cos()
{
if (Angle <= 256)
return CosineTable[Angle];
if (Angle <= 512)
return -CosineTable[512 - Angle];
return -new WAngle(Angle - 512).Cos();
}
public int Tan()
{
if (Angle <= 256)
return TanTable[Angle];
if (Angle <= 512)
return -TanTable[512 - Angle];
return new WAngle(Angle - 512).Tan();
}
public float RendererRadians() { return (float)(Angle * Math.PI / 512f); }
public float RendererDegrees() { return Angle * 0.3515625f; }
public override string ToString() { return "{0}".F(Angle); }
static int[] CosineTable =
{
1024, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1022, 1022, 1022, 1021,
1021, 1020, 1020, 1019, 1019, 1018, 1017, 1017, 1016, 1015, 1014, 1013,
1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 1003, 1001, 1000,
999, 997, 996, 994, 993, 991, 990, 988, 986, 985, 983, 981, 979, 978,
976, 974, 972, 970, 968, 966, 964, 962, 959, 957, 955, 953, 950, 948,
946, 943, 941, 938, 936, 933, 930, 928, 925, 922, 920, 917, 914, 911,
908, 906, 903, 900, 897, 894, 890, 887, 884, 881, 878, 875, 871, 868,
865, 861, 858, 854, 851, 847, 844, 840, 837, 833, 829, 826, 822, 818,
814, 811, 807, 803, 799, 795, 791, 787, 783, 779, 775, 771, 767, 762,
758, 754, 750, 745, 741, 737, 732, 728, 724, 719, 715, 710, 706, 701,
696, 692, 687, 683, 678, 673, 668, 664, 659, 654, 649, 644, 639, 634,
629, 625, 620, 615, 609, 604, 599, 594, 589, 584, 579, 574, 568, 563,
558, 553, 547, 542, 537, 531, 526, 521, 515, 510, 504, 499, 493, 488,
482, 477, 471, 466, 460, 454, 449, 443, 437, 432, 426, 420, 414, 409,
403, 397, 391, 386, 380, 374, 368, 362, 356, 350, 344, 339, 333, 327,
321, 315, 309, 303, 297, 291, 285, 279, 273, 267, 260, 254, 248, 242,
236, 230, 224, 218, 212, 205, 199, 193, 187, 181, 175, 168, 162, 156,
150, 144, 137, 131, 125, 119, 112, 106, 100, 94, 87, 81, 75, 69, 62,
56, 50, 43, 37, 31, 25, 18, 12, 6, 0
};
static int[] TanTable =
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\Util.cs" startline="17" endline="33">
<![CDATA[
static float[] channelSelect = { 0.75f, 0.25f, -0.25f, -0.75f };
public static void FastCreateQuad(Vertex[] vertices, float2 o, Sprite r, int palette, int nv, float2 size)
{
var attrib = new float2(palette / (float)HardwarePalette.MaxPalettes, channelSelect[(int)r.channel]);
vertices[nv] = new Vertex(o,
r.FastMapTextureCoords(0), attrib);
vertices[nv + 1] = new Vertex(new float2(o.X + size.X, o.Y),
r.FastMapTextureCoords(1), attrib);
vertices[nv + 2] = new Vertex(new float2(o.X + size.X, o.Y + size.Y),
r.FastMapTextureCoords(3), attrib);
vertices[nv + 3] = new Vertex(new float2(o.X, o.Y + size.Y),
r.FastMapTextureCoords(2), attrib);
}
static readonly int[] channelMasks = { 2, 1, 0, 3 };	// yes, our channel order is nuts.
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="469" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="470" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="471" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="472" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="473" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="474" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="475" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="476" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRot.cs" startline="97" endline="105">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRot o = (WRot)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="477" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="478" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="479" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="480" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="481" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="482" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="483" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\WRange.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
WRange o = (WRange)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="484" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="485" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="486" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="487" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="488" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="489" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.FileFormats\HSLColor.cs" startline="95" endline="103">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
HSLColor o = (HSLColor)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="490" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Actor.cs" startline="264" endline="280">
<![CDATA[
public void ChangeOwner(Player newOwner)
{
World.AddFrameEndTask(w =>
{
var oldOwner = Owner;
w.Remove(this);
Owner = newOwner;
w.Add(this);
foreach (var t in this.TraitsImplementing<INotifyOwnerChanged>())
t.OnOwnerChanged(this, oldOwner, newOwner);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="491" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Actor.cs" startline="264" endline="280">
<![CDATA[
public void ChangeOwner(Player newOwner)
{
World.AddFrameEndTask(w =>
{
var oldOwner = Owner;
w.Remove(this);
Owner = newOwner;
w.Add(this);
foreach (var t in this.TraitsImplementing<INotifyOwnerChanged>())
t.OnOwnerChanged(this, oldOwner, newOwner);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\InfiltrateForSupportPower.cs" startline="31" endline="38">
<![CDATA[
public void OnInfiltrate(Actor self, Actor infiltrator)
{
infiltrator.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit(infiltrator.Owner)
}));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="492" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Actor.cs" startline="264" endline="280">
<![CDATA[
public void ChangeOwner(Player newOwner)
{
World.AddFrameEndTask(w =>
{
var oldOwner = Owner;
w.Remove(this);
Owner = newOwner;
w.Add(this);
foreach (var t in this.TraitsImplementing<INotifyOwnerChanged>())
t.OnOwnerChanged(this, oldOwner, newOwner);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LeavesHusk.cs" startline="33" endline="70">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
self.World.AddFrameEndTask(w =>
{
var td = new TypeDictionary()
{
new LocationInit( self.Location ),
new CenterLocationInit(self.CenterLocation),
new OwnerInit( self.Owner ),
new SkipMakeAnimsInit()
};
var mobile = self.TraitOrDefault<Mobile>();
if (mobile != null)
{
if (!mobile.CanEnterCell(self.Location, self, false)) return;
td.Add(new HuskSpeedInit(mobile.MovementSpeedForCell(self, self.Location)));
}
var facing = self.TraitOrDefault<IFacing>();
if (facing != null)
td.Add(new FacingInit( facing.Facing ));
var turreted = self.TraitsImplementing<Turreted>().FirstOrDefault();
if (turreted != null)
td.Add( new TurretFacingInit(turreted.turretFacing) );
var huskActor = self.TraitsImplementing<IHuskModifier>()
.Select(ihm => ihm.HuskActor(self))
.FirstOrDefault(a => a != null);
w.CreateActor(huskActor ?? Info.HuskActor, td);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="493" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Actor.cs" startline="264" endline="280">
<![CDATA[
public void ChangeOwner(Player newOwner)
{
World.AddFrameEndTask(w =>
{
var oldOwner = Owner;
w.Remove(this);
Owner = newOwner;
w.Add(this);
foreach (var t in this.TraitsImplementing<INotifyOwnerChanged>())
t.OnOwnerChanged(this, oldOwner, newOwner);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="82" endline="102">
<![CDATA[
void ChangeOwnership(Actor self, Actor captor)
{
self.World.AddFrameEndTask(w =>
{
if (self.Destroyed || captor.Destroyed) return;
var previousOwner = self.Owner;
w.Remove(self);
self.Owner = captor.Owner;
w.Add(self);
if (self.Owner == self.World.LocalPlayer)
w.Add(new FlashTarget(self));
foreach (var t in self.TraitsImplementing<INotifyCapture>())
t.OnCapture(self, captor, previousOwner, self.Owner);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="494" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Actor.cs" startline="264" endline="280">
<![CDATA[
public void ChangeOwner(Player newOwner)
{
World.AddFrameEndTask(w =>
{
var oldOwner = Owner;
w.Remove(this);
Owner = newOwner;
w.Add(this);
foreach (var t in this.TraitsImplementing<INotifyOwnerChanged>())
t.OnOwnerChanged(this, oldOwner, newOwner);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="495" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="496" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="497" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="498" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="499" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="500" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="501" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="502" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="503" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="504" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="505" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="506" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="507" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="508" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="509" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="510" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="511" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="512" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="513" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="514" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="515" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="20" endline="27">
<![CDATA[
internal TypeDictionary dict;
public ActorInitializer( Actor actor, TypeDictionary dict )
{
this.self = actor;
this.dict = dict;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="516" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="517" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="518" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="519" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="520" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="521" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="522" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="523" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="524" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="525" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="526" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="527" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="528" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="529" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="32" endline="44">
<![CDATA[
}
public interface IActorInit {}
public interface IActorInit<T>
{
T Value( World world );
}
public class FacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public FacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="530" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="531" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="532" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="533" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="534" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="535" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="536" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="537" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="538" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="539" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="540" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="541" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="542" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="47" endline="52">
<![CDATA[
}
public class TurretFacingInit
{
[FieldFromYamlKey] public readonly int value = 128;
public TurretFacingInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="543" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="544" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="545" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="546" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="547" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="548" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="549" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="550" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="551" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="552" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="553" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="554" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="55" endline="60">
<![CDATA[
}
public class AltitudeInit
{
[FieldFromYamlKey] public readonly int value = 0;
public AltitudeInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="555" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="556" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="557" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="558" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="559" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="560" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="561" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="562" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="563" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="564" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="565" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="566" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="63" endline="68">
<![CDATA[
}
public class LocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public LocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="567" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="568" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="569" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="570" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="571" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="572" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="573" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="574" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="575" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="576" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="71" endline="76">
<![CDATA[
}
public class SubCellInit
{
[FieldFromYamlKey] public readonly int value = 0;
public SubCellInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="577" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="578" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="579" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="580" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="581" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="582" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="583" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="584" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="585" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="586" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="79" endline="84">
<![CDATA[
}
public class CenterLocationInit
{
[FieldFromYamlKey] public readonly int2 value = int2.Zero;
public CenterLocationInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="587" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="588" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="589" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="590" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="591" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="592" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="593" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="594" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="87" endline="94">
<![CDATA[
}
public class OwnerInit
{
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="595" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="596" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="597" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="598" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="599" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="600" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="601" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BridgeLayer.cs" startline="21" endline="37">
<![CDATA[
public readonly string[] Bridges = {"bridge1", "bridge2"};
public object Create(ActorInitializer init) { return new BridgeLayer(init.self, this); }
}
class BridgeLayer
{
readonly BridgeLayerInfo Info;
readonly World world;
Dictionary<ushort, Pair<string, float>> BridgeTypes = new Dictionary<ushort, Pair<string,float>>();
Bridge[,] Bridges;
public BridgeLayer(Actor self, BridgeLayerInfo Info)
{
this.Info = Info;
this.world = self.World;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="602" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="603" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\PowerdownIndicator.cs" startline="22" endline="27">
<![CDATA[
Animation anim = new Animation("poweroff");
public PowerdownIndicator(Actor a)
{
this.a = a; anim.PlayRepeating("offline");
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="604" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="605" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="606" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="607" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="608" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="609" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="610" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorInitializer.cs" startline="91" endline="100">
<![CDATA[
[FieldFromYamlKey] public readonly string PlayerName = "Neutral";
Player player;
public OwnerInit() { }
public OwnerInit( string playerName ) { this.PlayerName = playerName; }
public OwnerInit( Player player ) {
this.player = player;
this.PlayerName = player.InternalName;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="611" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\ActorMap.cs" startline="31" endline="38">
<![CDATA[
public ActorMap( World world )
{
map = world.Map;
influence = new InfluenceNode[world.Map.MapSize.X, world.Map.MapSize.Y];
world.ActorAdded += a => Add( a, a.OccupiesSpace );
world.ActorRemoved += a => Remove( a, a.OccupiesSpace );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BuildingInfluence.cs" startline="18" endline="37">
<![CDATA[
}
public class BuildingInfluence
{
Actor[,] influence;
Map map;
public BuildingInfluence( World world )
{
map = world.Map;
influence = new Actor[map.MapSize.X, map.MapSize.Y];
world.ActorAdded +=
a => { if (a.HasTrait<Building>())
ChangeInfluence(a, a.Trait<Building>(), true); };
world.ActorRemoved +=
a => { if (a.HasTrait<Building>())
ChangeInfluence(a, a.Trait<Building>(), false); };
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="612" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\QuadRenderer.cs" startline="21" endline="28">
<![CDATA[
Vertex[] vertices = new Vertex[Renderer.TempBufferSize];
int nv = 0;
public QuadRenderer(Renderer renderer, IShader shader)
{
this.renderer = renderer;
this.shader = shader;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\LineRenderer.cs" startline="18" endline="31">
<![CDATA[
public float LineWidth = 1f;
static float2 offset = new float2(0.5f,0.5f);
Renderer renderer;
IShader shader;
Vertex[] vertices = new Vertex[ Renderer.TempBufferSize ];
int nv = 0;
public LineRenderer( Renderer renderer, IShader shader )
{
this.renderer = renderer;
this.shader = shader;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="613" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\QuadRenderer.cs" startline="21" endline="28">
<![CDATA[
Vertex[] vertices = new Vertex[Renderer.TempBufferSize];
int nv = 0;
public QuadRenderer(Renderer renderer, IShader shader)
{
this.renderer = renderer;
this.shader = shader;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\SpriteRenderer.cs" startline="21" endline="29">
<![CDATA[
Vertex[] vertices = new Vertex[Renderer.TempBufferSize];
Sheet currentSheet = null;
int nv = 0;
public SpriteRenderer(Renderer renderer, IShader shader)
{
this.renderer = renderer;
this.shader = shader;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="614" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\QuadRenderer.cs" startline="29" endline="43">
<![CDATA[
public void Flush()
{
if (nv > 0)
{
shader.Render(() =>
{
var vb = renderer.GetTempVertexBuffer();
vb.SetData(vertices, nv);
renderer.DrawBatch(vb, 0, nv, PrimitiveType.QuadList);
});
nv = 0;
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\LineRenderer.cs" startline="32" endline="47">
<![CDATA[
public void Flush()
{
if( nv > 0 )
{
shader.Render( () =>
{
var vb = renderer.GetTempVertexBuffer();
vb.SetData( vertices, nv );
renderer.SetLineWidth(LineWidth * Game.viewport.Zoom);
renderer.DrawBatch( vb,	0, nv, PrimitiveType.LineList );
} );
nv = 0;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="615" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\QuadRenderer.cs" startline="59" endline="65">
<![CDATA[
public void SetViewportParams(Size screen, float zoom, float2 scroll)
{
shader.SetVec("Scroll", (int)scroll.X, (int)scroll.Y);
shader.SetVec("r1", zoom*2f/screen.Width, -zoom*2f/screen.Height);
shader.SetVec("r2", -1, 1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\LineRenderer.cs" startline="80" endline="86">
<![CDATA[
public void SetViewportParams(Size screen, float zoom, float2 scroll)
{
shader.SetVec("Scroll", (int)scroll.X, (int)scroll.Y);
shader.SetVec("r1", zoom*2f/screen.Width, -zoom*2f/screen.Height);
shader.SetVec("r2", -1, 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="616" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\QuadRenderer.cs" startline="59" endline="65">
<![CDATA[
public void SetViewportParams(Size screen, float zoom, float2 scroll)
{
shader.SetVec("Scroll", (int)scroll.X, (int)scroll.Y);
shader.SetVec("r1", zoom*2f/screen.Width, -zoom*2f/screen.Height);
shader.SetVec("r2", -1, 1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\SpriteRenderer.cs" startline="94" endline="100">
<![CDATA[
public void SetViewportParams(Size screen, float zoom, float2 scroll)
{
shader.SetVec("Scroll", (int)scroll.X, (int)scroll.Y);
shader.SetVec("r1", zoom*2f/screen.Width, -zoom*2f/screen.Height);
shader.SetVec("r2", -1, 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="617" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="58" endline="65">
<![CDATA[
public PSubVec Clamp(Rectangle r)
{
return new PSubVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="52" endline="57">
<![CDATA[
public PSubPos Clamp(Rectangle r)
{
return new PSubPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="618" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="58" endline="65">
<![CDATA[
public PSubVec Clamp(Rectangle r)
{
return new PSubVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="57" endline="64">
<![CDATA[
public PVecInt Clamp(Rectangle r)
{
return new PVecInt(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="619" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="58" endline="65">
<![CDATA[
public PSubVec Clamp(Rectangle r)
{
return new PSubVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="81" endline="86">
<![CDATA[
public PPos Clamp(Rectangle r)
{
return new PPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="620" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="58" endline="65">
<![CDATA[
public PSubVec Clamp(Rectangle r)
{
return new PSubVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="54" endline="61">
<![CDATA[
public CVec Clamp(Rectangle r)
{
return new CVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="621" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="58" endline="65">
<![CDATA[
public PSubVec Clamp(Rectangle r)
{
return new PSubVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="45" endline="50">
<![CDATA[
public CPos Clamp(Rectangle r)
{
return new CPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="622" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="623" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="624" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="625" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="626" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubVec.cs" startline="68" endline="76">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubVec o = (PSubVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="627" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="52" endline="57">
<![CDATA[
public PSubPos Clamp(Rectangle r)
{
return new PSubPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="57" endline="64">
<![CDATA[
public PVecInt Clamp(Rectangle r)
{
return new PVecInt(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="628" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="52" endline="57">
<![CDATA[
public PSubPos Clamp(Rectangle r)
{
return new PSubPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="81" endline="86">
<![CDATA[
public PPos Clamp(Rectangle r)
{
return new PPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="629" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="52" endline="57">
<![CDATA[
public PSubPos Clamp(Rectangle r)
{
return new PSubPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="54" endline="61">
<![CDATA[
public CVec Clamp(Rectangle r)
{
return new CVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="630" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="52" endline="57">
<![CDATA[
public PSubPos Clamp(Rectangle r)
{
return new PSubPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="45" endline="50">
<![CDATA[
public CPos Clamp(Rectangle r)
{
return new CPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="631" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="632" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="633" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="634" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PSubPos.cs" startline="60" endline="68">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PSubPos o = (PSubPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="635" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="57" endline="64">
<![CDATA[
public PVecInt Clamp(Rectangle r)
{
return new PVecInt(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="81" endline="86">
<![CDATA[
public PPos Clamp(Rectangle r)
{
return new PPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="636" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="57" endline="64">
<![CDATA[
public PVecInt Clamp(Rectangle r)
{
return new PVecInt(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="54" endline="61">
<![CDATA[
public CVec Clamp(Rectangle r)
{
return new CVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="637" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="57" endline="64">
<![CDATA[
public PVecInt Clamp(Rectangle r)
{
return new PVecInt(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="45" endline="50">
<![CDATA[
public CPos Clamp(Rectangle r)
{
return new CPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="638" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="639" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="640" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PVecInt.cs" startline="67" endline="75">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PVecInt o = (PVecInt)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="641" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="81" endline="86">
<![CDATA[
public PPos Clamp(Rectangle r)
{
return new PPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="54" endline="61">
<![CDATA[
public CVec Clamp(Rectangle r)
{
return new CVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="642" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="81" endline="86">
<![CDATA[
public PPos Clamp(Rectangle r)
{
return new PPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="45" endline="50">
<![CDATA[
public CPos Clamp(Rectangle r)
{
return new CPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="643" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="644" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\PPos.cs" startline="96" endline="104">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
PPos o = (PPos)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="645" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="646" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="647" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="648" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="649" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="650" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="651" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="652" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="653" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="654" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="655" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="656" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="657" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="658" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="659" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="660" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="661" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="662" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="663" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="664" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="23" endline="27">
<![CDATA[
public DelayedAction(int delay, Action a)
{
this.a = a;
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="665" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="28" endline="33">
<![CDATA[
public void Tick(World world)
{
if (--delay <= 0)
world.AddFrameEndTask(w => { w.Remove(this); a(); });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\FlashTarget.cs" startline="29" endline="34">
<![CDATA[
public void Tick( World world )
{
if (--remainingTicks == 0 || !target.IsInWorld)
world.AddFrameEndTask(w => w.Remove(this));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="666" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="28" endline="33">
<![CDATA[
public void Tick(World world)
{
if (--delay <= 0)
world.AddFrameEndTask(w => { w.Remove(this); a(); });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\CashTick.cs" startline="44" endline="50">
<![CDATA[
public void Tick(World world)
{
if (--remaining <= 0)
world.AddFrameEndTask(w => w.Remove(this));
pos -= new PVecInt(0, velocity);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="667" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Effects\DelayedAction.cs" startline="28" endline="33">
<![CDATA[
public void Tick(World world)
{
if (--delay <= 0)
world.AddFrameEndTask(w => { w.Remove(this); a(); });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs" startline="44" endline="64">
<![CDATA[
public void Tick(World world)
{
paraAnim.Tick();
altitude -= fallRate;
if (altitude <= 0)
world.AddFrameEndTask(w =>
{
w.Remove(cargo);
w.Remove(this);
var loc = location.ToCPos();
cargo.CancelActivity();
cargo.Trait<ITeleportable>().SetPosition(cargo, loc);
w.Add(cargo);
foreach( var npl in cargo.TraitsImplementing<INotifyParachuteLanded>() )
npl.OnLanded();
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="668" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Game.cs" startline="306" endline="371">
<![CDATA[
if (mm.Length == 0) mm = new[] { "ra" };
Console.WriteLine("Loading mods
Settings.Game.Mods = mm;
Sound.StopMusic();
Sound.StopVideo();
Sound.Initialize();
modData = new ModData( mm );
Renderer.InitializeFonts(modData.Manifest);
modData.LoadInitialAssets(true);
PerfHistory.items["render"].hasNormalTick = false;
PerfHistory.items["batches"].hasNormalTick = false;
PerfHistory.items["render_widgets"].hasNormalTick = false;
PerfHistory.items["render_flip"].hasNormalTick = false;
JoinLocal();
viewport = new Viewport(new int2(Renderer.Resolution), Rectangle.Empty, Renderer);
if (Game.Settings.Server.Dedicated)
{
while (true)
{
Game.Settings.Server.Map = WidgetUtils.ChooseInitialMap(Game.Settings.Server.Map);
Game.Settings.Save();
Game.CreateServer(new ServerSettings(Game.Settings.Server));
while(true)
{
System.Threading.Thread.Sleep(100);
if((server.State == Server.ServerState.GameStarted)
&& (server.conns.Count<=1))
{
Console.WriteLine("No one is playing, shutting down...");
server.Shutdown();
break;
}
}
if (Game.Settings.Server.DedicatedLoop)
{
Console.WriteLine("Starting a new server instance...");
continue;
}
else
break;
}
System.Environment.Exit(0);
}
else
{
modData.LoadScreen.StartGame();
Settings.Save();
}
}
public static void LoadShellMap()
{
StartGame(ChooseShellmap(), true);
}
static string ChooseShellmap()
{
var shellmaps =  modData.AvailableMaps
.Where(m => m.Value.UseAsShellmap);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="390" endline="422">
<![CDATA[
if (!Players.ContainsKey("Neutral"))
Players.Add("Neutral", new PlayerReference
{
Name = "Neutral",
Race = firstRace,
OwnsWorld = true,
NonCombatant = true
});
var numSpawns = GetSpawnPoints().Length;
for (var index = 0; index < numSpawns; index++)
{
if (Players.ContainsKey("Multi{0}".F(index)))
continue;
var p = new PlayerReference
{
Name = "Multi{0}".F(index),
Race = "Random",
Playable = true,
DefaultStartingUnits = true,
Enemies = new[] { "Creeps" }
};
Players.Add(p.Name, p);
}
Players.Add("Creeps", new PlayerReference
{
Name = "Creeps",
Race = firstRace,
NonCombatant = true,
Enemies = Players.Where(p => p.Value.Playable).Select(p => p.Key).ToArray()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="669" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Game.cs" startline="306" endline="371">
<![CDATA[
if (mm.Length == 0) mm = new[] { "ra" };
Console.WriteLine("Loading mods
Settings.Game.Mods = mm;
Sound.StopMusic();
Sound.StopVideo();
Sound.Initialize();
modData = new ModData( mm );
Renderer.InitializeFonts(modData.Manifest);
modData.LoadInitialAssets(true);
PerfHistory.items["render"].hasNormalTick = false;
PerfHistory.items["batches"].hasNormalTick = false;
PerfHistory.items["render_widgets"].hasNormalTick = false;
PerfHistory.items["render_flip"].hasNormalTick = false;
JoinLocal();
viewport = new Viewport(new int2(Renderer.Resolution), Rectangle.Empty, Renderer);
if (Game.Settings.Server.Dedicated)
{
while (true)
{
Game.Settings.Server.Map = WidgetUtils.ChooseInitialMap(Game.Settings.Server.Map);
Game.Settings.Save();
Game.CreateServer(new ServerSettings(Game.Settings.Server));
while(true)
{
System.Threading.Thread.Sleep(100);
if((server.State == Server.ServerState.GameStarted)
&& (server.conns.Count<=1))
{
Console.WriteLine("No one is playing, shutting down...");
server.Shutdown();
break;
}
}
if (Game.Settings.Server.DedicatedLoop)
{
Console.WriteLine("Starting a new server instance...");
continue;
}
else
break;
}
System.Environment.Exit(0);
}
else
{
modData.LoadScreen.StartGame();
Settings.Save();
}
}
public static void LoadShellMap()
{
StartGame(ChooseShellmap(), true);
}
static string ChooseShellmap()
{
var shellmaps =  modData.AvailableMaps
.Where(m => m.Value.UseAsShellmap);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs" startline="84" endline="92">
<![CDATA[
}
EnumerateMaps();
}
void EnumerateMaps()
{
var maps = Game.modData.AvailableMaps
.Where(kv => kv.Value.Selectable)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="670" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\ActorInfo.cs" startline="112" endline="121">
<![CDATA[
static List<Type> PrerequisitesOf(ITraitInfo info)
{
return info
.GetType()
.GetInterfaces()
.Where( t => t.IsGenericType && t.GetGenericTypeDefinition() == typeof( Requires<> ) )
.Select( t => t.GetGenericArguments()[ 0 ] )
.ToList();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\ActorInfo.cs" startline="120" endline="126">
<![CDATA[
.ToList();
}
public IEnumerable<Pair<string, Type>> GetInitKeys()
{
var inits = Traits.WithInterface<ITraitInfo>().SelectMany(
t => t.GetType().GetInterfaces()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="671" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="672" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="673" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="114" endline="129">
<![CDATA[
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget() { IsVisible = () => Visible; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="674" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="675" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="26" endline="52">
<![CDATA[
public readonly string Name = "Unnamed Bot";
public readonly int SquadSize = 8;
public readonly int AssignRolesInterval = 20;
public readonly int RushInterval = 600;
public readonly int AttackForceInterval = 30;
public readonly string RallypointTestBuilding = "fact";		// temporary hack to maintain previous rallypoint behavior.
public readonly string[] UnitQueues = { "Vehicle", "Infantry", "Plane", "Ship", "Aircraft" };
public readonly bool ShouldRepairBuildings = true;
string IBotInfo.Name { get { return this.Name; } }
[FieldLoader.LoadUsing("LoadUnits")]
public readonly Dictionary<string, float> UnitsToBuild = null;
[FieldLoader.LoadUsing("LoadBuildings")]
public readonly Dictionary<string, float> BuildingFractions = null;
[FieldLoader.LoadUsing("LoadUnitsCommonNames")]
public readonly Dictionary<string, string[]> UnitsCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingsCommonNames")]
public readonly Dictionary<string, string[]> BuildingCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingLimits")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="676" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="677" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="678" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="679" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="680" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="46">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="25" endline="44">
<![CDATA[
public readonly int Speed = 1;
public readonly int Arm = 0;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly bool Shadow = true;
public readonly bool Proximity = false;
public readonly string Trail = null;
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Rate of Turning")]
public readonly int ROT = 5;
[Desc("Explode when following the target longer than this.")]
public readonly int RangeLimit = 0;
public readonly bool TurboBoost = false;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
public readonly bool Jammable = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="681" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="27" endline="68">
<![CDATA[
public string Name = "OpenRA Game";
public int ListenPort = 1234;
public int ExternalPort = 1234;
public bool AdvertiseOnline = true;
public string MasterServer = "http
public bool DiscoverNatDevices = false; // Allow users to disable NAT discovery if problems occur
public bool AllowPortForward = true; // let the user disable it even if compatible devices are found
public bool NatDeviceAvailable = false; // internal check if discovery succeeded
public int NatDiscoveryTimeout = 1000; // ms to search for UPnP enabled NATs
public bool VerboseNatDiscovery = false; // print very detailed logs for debugging
public bool AllowCheats = false;
public string Map = null;
public string[] Ban = null;
public int TimeOut = 0;
public bool Dedicated = false;
public bool DedicatedLoop = true;
public bool LockBots = false;
public bool AllowVersionMismatch = false;
public ServerSettings() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="32" endline="82">
<![CDATA[
public string ValueFormat = "{0}";
public string XAxisValueFormat = "{0}";
public string YAxisValueFormat = "{0}";
public int XAxisSize = 10;
public int YAxisSize = 10;
public string XAxisLabel = "";
public string YAxisLabel = "";
public bool DisplayFirstYAxisValue = false;
public string LabelFont;
public string AxisFont;
public LineGraphWidget()
{
GetValueFormat = () => ValueFormat;
GetXAxisValueFormat = () => XAxisValueFormat;
GetYAxisValueFormat = () => YAxisValueFormat;
GetXAxisSize = () => XAxisSize;
GetYAxisSize = () => YAxisSize;
GetXAxisLabel = () => XAxisLabel;
GetYAxisLabel = () => YAxisLabel;
GetDisplayFirstYAxisValue = () => DisplayFirstYAxisValue;
GetLabelFont = () => LabelFont;
GetAxisFont = () => AxisFont;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="682" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="683" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="684" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="685" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="686" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="687" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="688" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="689" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="690" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="691" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="692" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="693" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="694" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="695" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="696" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="697" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="698" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="699" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="700" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="701" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="702" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="703" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="704" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="705" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="706" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="707" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="708" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="709" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="710" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="711" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="712" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="713" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="714" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="715" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="716" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="717" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="718" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="69" endline="79">
<![CDATA[
}
public class DebugSettings
{
public bool BotDebug = false;
public bool PerfText = false;
public bool PerfGraph = false;
public float LongTickThreshold = 0.001f;
public bool SanityCheckUnsyncedCode = false;
public int Samples = 25;
public bool IgnoreVersionMismatch = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="719" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="720" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="721" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="722" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="723" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="724" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="725" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="22" endline="39">
<![CDATA[
public int ScrollbarWidth = 24;
public float ScrollVelocity = 4f;
public int ItemSpacing = 2;
public int ButtonDepth = ChromeMetrics.Get<int>("ButtonDepth");
public string Background = "scrollpanel-bg";
public int ContentHeight = 0;
public ILayout Layout;
protected float ListOffset = 0;
protected bool UpPressed = false;
protected bool DownPressed = false;
protected bool ThumbPressed = false;
protected Rectangle upButtonRect;
protected Rectangle downButtonRect;
protected Rectangle backgroundRect;
protected Rectangle scrollbarRect;
protected Rectangle thumbRect;
public ScrollPanelWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="726" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="727" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="728" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="729" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="730" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="731" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="732" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="733" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="734" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="735" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="736" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="737" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="738" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="739" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="80" endline="94">
<![CDATA[
}
public class GraphicSettings
{
public string Renderer = "Gl";
public WindowMode Mode = WindowMode.PseudoFullscreen;
public int2 FullscreenSize = new int2(0,0);
public int2 WindowedSize = new int2(1024, 768);
public bool PixelDouble = false;
public bool CapFramerate = false;
public int MaxFramerate = 60;
public int BatchSize = 8192;
public int NumTempBuffers = 8;
public int SheetSize = 2048;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="740" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="741" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="742" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="743" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="744" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="745" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="746" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="747" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="748" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="749" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="750" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="751" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="752" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="753" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="754" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="755" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="756" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="757" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="758" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="759" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="760" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="761" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="762" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="763" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="764" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="765" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="766" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="767" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="768" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="769" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="770" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="95" endline="107">
<![CDATA[
}
public class SoundSettings
{
public float SoundVolume = 0.5f;
public float MusicVolume = 0.5f;
public float VideoVolume = 0.5f;
public bool Shuffle = false;
public bool Repeat = false;
public bool MapMusic = true;
public string Engine = "AL";
public SoundCashTicks SoundCashTickType = SoundCashTicks.Extreme;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="771" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="772" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="773" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="774" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="775" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="776" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="76" endline="113">
<![CDATA[
if (onCancel != null)
fullscreenMask.OnMouseDown += _ => onCancel();
Ui.Root.AddChild(fullscreenMask);
var oldBounds = panel.Bounds;
panel.Bounds = new Rectangle(RenderOrigin.X, RenderOrigin.Y + Bounds.Height, oldBounds.Width, oldBounds.Height);
Ui.Root.AddChild(panel);
}
public void ShowDropDown<T>(string panelTemplate, int height, IEnumerable<T> options, Func<T, ScrollItemWidget, ScrollItemWidget> setupItem)
{
var substitutions = new Dictionary<string,int>() {{ "DROPDOWN_WIDTH", Bounds.Width }};
var panel = (ScrollPanelWidget)Ui.LoadWidget(panelTemplate, null, new WidgetArgs()
{{ "substitutions", substitutions }});
var itemTemplate = panel.Get<ScrollItemWidget>("TEMPLATE");
panel.RemoveChildren();
foreach (var option in options)
{
var o = option;
var item = setupItem(o, itemTemplate);
var onClick = item.OnClick;
item.OnClick = () => { onClick(); RemovePanel(); };
panel.AddChild(item);
}
panel.Bounds.Height = Math.Min(height, panel.ContentHeight);
AttachPanel(panel);
}
}
public class MaskWidget
{
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="777" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="778" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="779" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="780" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="781" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="782" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="783" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="784" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="785" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="786" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="787" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="788" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="789" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="790" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="791" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="792" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="793" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="794" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="795" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="796" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="797" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="798" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="799" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="800" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="801" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="108" endline="114">
<![CDATA[
}
public class PlayerSettings
{
public string Name = "Newbie";
public HSLColor Color = new HSLColor(75, 255, 180);
public string LastServer = "localhost
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="802" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="803" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="804" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="805" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="114" endline="129">
<![CDATA[
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget() { IsVisible = () => Visible; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="806" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="22" endline="39">
<![CDATA[
public int ScrollbarWidth = 24;
public float ScrollVelocity = 4f;
public int ItemSpacing = 2;
public int ButtonDepth = ChromeMetrics.Get<int>("ButtonDepth");
public string Background = "scrollpanel-bg";
public int ContentHeight = 0;
public ILayout Layout;
protected float ListOffset = 0;
protected bool UpPressed = false;
protected bool DownPressed = false;
protected bool ThumbPressed = false;
protected Rectangle upButtonRect;
protected Rectangle downButtonRect;
protected Rectangle backgroundRect;
protected Rectangle scrollbarRect;
protected Rectangle thumbRect;
public ScrollPanelWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="807" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="808" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="809" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="810" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="811" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="812" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="813" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="25" endline="44">
<![CDATA[
public readonly int Speed = 1;
public readonly int Arm = 0;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly bool Shadow = true;
public readonly bool Proximity = false;
public readonly string Trail = null;
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Rate of Turning")]
public readonly int ROT = 5;
[Desc("Explode when following the target longer than this.")]
public readonly int RangeLimit = 0;
public readonly bool TurboBoost = false;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
public readonly bool Jammable = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="814" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="815" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="816" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="817" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="115" endline="135">
<![CDATA[
}
public class GameSettings
{
public string[] Mods = { "ra" };
public bool TeamChatToggle = false;
public bool ShowShellmap = true;
public bool ViewportEdgeScroll = true;
public MouseScrollType MouseScroll = MouseScrollType.Standard;
public float ViewportEdgeScrollStep = 10f;
public bool UseClassicMouseStyle = false;
public int Timestep = 40;
public string ConnectTo = "";
public bool AllowDownloading = true;
public string MapRepository = "http
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorMixerWidget.cs" startline="24" endline="38">
<![CDATA[
public float[] SRange = {0.2f, 1.0f};
public float[] VRange = {0.2f, 1.0f};
public event Action OnChange = () => {};
float H, S, V;
Bitmap frontBitmap, swapBitmap, backBitmap;
Sprite mixerSprite;
bool isMoving;
bool updateFront, updateBack;
object syncWorker = new object();
Thread workerThread;
bool workerAlive;
public ColorMixerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="818" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="819" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="114" endline="129">
<![CDATA[
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget() { IsVisible = () => Visible; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="820" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="22" endline="39">
<![CDATA[
public int ScrollbarWidth = 24;
public float ScrollVelocity = 4f;
public int ItemSpacing = 2;
public int ButtonDepth = ChromeMetrics.Get<int>("ButtonDepth");
public string Background = "scrollpanel-bg";
public int ContentHeight = 0;
public ILayout Layout;
protected float ListOffset = 0;
protected bool UpPressed = false;
protected bool DownPressed = false;
protected bool ThumbPressed = false;
protected Rectangle upButtonRect;
protected Rectangle downButtonRect;
protected Rectangle backgroundRect;
protected Rectangle scrollbarRect;
protected Rectangle thumbRect;
public ScrollPanelWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="821" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="822" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="26" endline="52">
<![CDATA[
public readonly string Name = "Unnamed Bot";
public readonly int SquadSize = 8;
public readonly int AssignRolesInterval = 20;
public readonly int RushInterval = 600;
public readonly int AttackForceInterval = 30;
public readonly string RallypointTestBuilding = "fact";		// temporary hack to maintain previous rallypoint behavior.
public readonly string[] UnitQueues = { "Vehicle", "Infantry", "Plane", "Ship", "Aircraft" };
public readonly bool ShouldRepairBuildings = true;
string IBotInfo.Name { get { return this.Name; } }
[FieldLoader.LoadUsing("LoadUnits")]
public readonly Dictionary<string, float> UnitsToBuild = null;
[FieldLoader.LoadUsing("LoadBuildings")]
public readonly Dictionary<string, float> BuildingFractions = null;
[FieldLoader.LoadUsing("LoadUnitsCommonNames")]
public readonly Dictionary<string, string[]> UnitsCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingsCommonNames")]
public readonly Dictionary<string, string[]> BuildingCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingLimits")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="823" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="824" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="825" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="826" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="827" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="828" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="829" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="25" endline="44">
<![CDATA[
public readonly int Speed = 1;
public readonly int Arm = 0;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly bool Shadow = true;
public readonly bool Proximity = false;
public readonly string Trail = null;
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Rate of Turning")]
public readonly int ROT = 5;
[Desc("Explode when following the target longer than this.")]
public readonly int RangeLimit = 0;
public readonly bool TurboBoost = false;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
public readonly bool Jammable = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="830" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="831" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\Settings.cs" startline="136" endline="155">
<![CDATA[
}
public class KeySettings
{
public string CycleBaseKey = "backspace";
public string ToLastEventKey = "space";
public string ToSelectionKey = "home";
public string PauseKey = "f9";
public string SellKey = "f10";
public string PowerDownKey = "f11";
public string RepairKey = "f12";
public string AttackMoveKey = "a";
public string StopKey = "s";
public string ScatterKey = "x";
public string DeployKey = "f";
public string StanceCycleKey = "z";
public string CycleTabsKey = "tab";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="832" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\SoundInfo.cs" startline="51" endline="62">
<![CDATA[
}
}
public class SoundPool
{
readonly string[] clips;
readonly List<string> liveclips = new List<string>();
public SoundPool(params string[] clips)
{
this.clips = clips;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Support\PerfHistory.cs" startline="104" endline="115">
<![CDATA[
}
}
public class PerfSample
{
readonly Stopwatch sw = new Stopwatch();
readonly string Item;
public PerfSample(string item)
{
Item = item;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="833" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="834" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="835" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="836" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="837" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="838" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="839" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\GameRules\WeaponInfo.cs" startline="73" endline="95">
<![CDATA[
}
}
public enum DamageModel
{
Normal,								// classic RA damage model
PerCell,							// like RA's "nuke damage"
}
public class ProjectileArgs
{
public WeaponInfo weapon;
public Actor firedBy;
public PPos src;
public int srcAltitude;
public int facing;
public Target target;
public PPos dest;
public int destAltitude;
public float firepowerModifier = 1.0f;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="840" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\AnimationWithOffset.cs" startline="27" endline="33">
<![CDATA[
public AnimationWithOffset(Animation a, Func<WorldRenderer, float2> o, Func<bool> d)
{
this.Animation = a;
this.OffsetFunc = o;
this.DisableFunc = d;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\WorldRenderer.cs" startline="25" endline="30">
<![CDATA[
public PaletteReference(string name, int index, Palette palette)
{
Name = name;
Index = index;
Palette = palette;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="841" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\AnimationWithOffset.cs" startline="27" endline="33">
<![CDATA[
public AnimationWithOffset(Animation a, Func<WorldRenderer, float2> o, Func<bool> d)
{
this.Animation = a;
this.OffsetFunc = o;
this.DisableFunc = d;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="105" endline="185">
<![CDATA[
var scale = 200 / Math.Max(5000, (float)Math.Ceiling(maxValue / 1000) * 1000);
var xStep = width / xAxisSize;
var yStep = height / yAxisSize;
var pointCount = GetSeries().First().Points.Count();
var pointStart = Math.Max(0, pointCount - xAxisSize);
var pointEnd = Math.Max(pointCount, xAxisSize);
var keyOffset = 0;
foreach (var series in GetSeries())
{
var key = series.Key;
var color = series.Color;
var points = series.Points;
if (points.Any())
{
points = points.Reverse().Take(xAxisSize).Reverse();
var scaledData = points.Select(d => d * scale);
var x = 0;
scaledData.Aggregate((a, b) =>
{
Game.Renderer.LineRenderer.DrawLine(
origin + new float2(x, -a),
origin + new float2(x + xStep, -b),
color, color);
x += xStep;
return b;
});
var value = points.Last();
if (value != 0)
{
tiny.DrawText(GetValueFormat().F(value), origin + new float2(x, -value * scale - 2), color);
}
}
tiny.DrawText(key, new float2(rect.Left, rect.Top) + new float2(5, 10 * keyOffset + 3), color);
keyOffset++;
}
for (int n = pointStart, x = 0; n <= pointEnd; n++, x += xStep)
{
Game.Renderer.LineRenderer.DrawLine(origin + new float2(x, 0), origin + new float2(x, -5), Color.White, Color.White);
tiny.DrawText(GetXAxisValueFormat().F(n), origin + new float2(x, 2), Color.White);
}
bold.DrawText(GetXAxisLabel(), origin + new float2(width / 2, 20), Color.White);
for (var y = (GetDisplayFirstYAxisValue() ? 0
{
var yValue = y / scale;
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width - 5, -y), origin + new float2(width, -y), Color.White, Color.White);
tiny.DrawText(GetYAxisValueFormat().F(yValue), origin + new float2(width + 2, -y), Color.White);
}
bold.DrawText(GetYAxisLabel(), origin + new float2(width + 40, -(height / 2)), Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(width, 0), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(0, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width, 0), origin + new float2(width, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(0, -height), origin + new float2(width, -height), Color.White, Color.White);
}
public override Widget Clone()
{
return new LineGraphWidget(this);
}
}
public class LineGraphSeries
{
public string Key;
public Color Color;
public IEnumerable<float> Points;
public LineGraphSeries(string key, Color color, IEnumerable<float> points)
{
Key = key;
Color = color;
Points = points;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="842" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\AnimationWithOffset.cs" startline="27" endline="33">
<![CDATA[
public AnimationWithOffset(Animation a, Func<WorldRenderer, float2> o, Func<bool> d)
{
this.Animation = a;
this.OffsetFunc = o;
this.DisableFunc = d;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="23" endline="28">
<![CDATA[
public Teleport(Actor chronosphere, CPos destination, bool killCargo)
{
this.chronosphere = chronosphere;
this.destination = destination;
this.killCargo = killCargo;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="843" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\AnimationWithOffset.cs" startline="27" endline="33">
<![CDATA[
public AnimationWithOffset(Animation a, Func<WorldRenderer, float2> o, Func<bool> d)
{
this.Animation = a;
this.OffsetFunc = o;
this.DisableFunc = d;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="23" endline="28">
<![CDATA[
public Objective(ObjectiveType type, string text, ObjectiveStatus status)
{
Type = type;
Text = text;
Status = status;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="844" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\AnimationWithOffset.cs" startline="27" endline="33">
<![CDATA[
public AnimationWithOffset(Animation a, Func<WorldRenderer, float2> o, Func<bool> d)
{
this.Animation = a;
this.OffsetFunc = o;
this.DisableFunc = d;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="32" endline="41">
<![CDATA[
public ProximityCapturableInfo Info;
public Actor Self;
public ProximityCapturable(Actor self, ProximityCapturableInfo info)
{
Info = info;
Self = self;
OriginalOwner = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="845" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\HardwarePalette.cs" startline="37" endline="44">
<![CDATA[
public Palette GetPalette(string name)
{
Palette ret;
if (!palettes.TryGetValue(name,out ret))
throw new InvalidOperationException("Palette `{0}` does not exist".F(name));
return ret;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\HardwarePalette.cs" startline="45" endline="52">
<![CDATA[
public int GetPaletteIndex(string name)
{
int ret;
if (!indices.TryGetValue(name,out ret))
throw new InvalidOperationException("Palette `{0}` does not exist".F(name));
return ret;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="846" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\LineRenderer.cs" startline="18" endline="31">
<![CDATA[
public float LineWidth = 1f;
static float2 offset = new float2(0.5f,0.5f);
Renderer renderer;
IShader shader;
Vertex[] vertices = new Vertex[ Renderer.TempBufferSize ];
int nv = 0;
public LineRenderer( Renderer renderer, IShader shader )
{
this.renderer = renderer;
this.shader = shader;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\SpriteRenderer.cs" startline="21" endline="29">
<![CDATA[
Vertex[] vertices = new Vertex[Renderer.TempBufferSize];
Sheet currentSheet = null;
int nv = 0;
public SpriteRenderer(Renderer renderer, IShader shader)
{
this.renderer = renderer;
this.shader = shader;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="847" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\LineRenderer.cs" startline="80" endline="86">
<![CDATA[
public void SetViewportParams(Size screen, float zoom, float2 scroll)
{
shader.SetVec("Scroll", (int)scroll.X, (int)scroll.Y);
shader.SetVec("r1", zoom*2f/screen.Width, -zoom*2f/screen.Height);
shader.SetVec("r2", -1, 1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\SpriteRenderer.cs" startline="94" endline="100">
<![CDATA[
public void SetViewportParams(Size screen, float zoom, float2 scroll)
{
shader.SetVec("Scroll", (int)scroll.X, (int)scroll.Y);
shader.SetVec("r1", zoom*2f/screen.Width, -zoom*2f/screen.Height);
shader.SetVec("r2", -1, 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="848" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\WorldRenderer.cs" startline="25" endline="30">
<![CDATA[
public PaletteReference(string name, int index, Palette palette)
{
Name = name;
Index = index;
Palette = palette;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="105" endline="185">
<![CDATA[
var scale = 200 / Math.Max(5000, (float)Math.Ceiling(maxValue / 1000) * 1000);
var xStep = width / xAxisSize;
var yStep = height / yAxisSize;
var pointCount = GetSeries().First().Points.Count();
var pointStart = Math.Max(0, pointCount - xAxisSize);
var pointEnd = Math.Max(pointCount, xAxisSize);
var keyOffset = 0;
foreach (var series in GetSeries())
{
var key = series.Key;
var color = series.Color;
var points = series.Points;
if (points.Any())
{
points = points.Reverse().Take(xAxisSize).Reverse();
var scaledData = points.Select(d => d * scale);
var x = 0;
scaledData.Aggregate((a, b) =>
{
Game.Renderer.LineRenderer.DrawLine(
origin + new float2(x, -a),
origin + new float2(x + xStep, -b),
color, color);
x += xStep;
return b;
});
var value = points.Last();
if (value != 0)
{
tiny.DrawText(GetValueFormat().F(value), origin + new float2(x, -value * scale - 2), color);
}
}
tiny.DrawText(key, new float2(rect.Left, rect.Top) + new float2(5, 10 * keyOffset + 3), color);
keyOffset++;
}
for (int n = pointStart, x = 0; n <= pointEnd; n++, x += xStep)
{
Game.Renderer.LineRenderer.DrawLine(origin + new float2(x, 0), origin + new float2(x, -5), Color.White, Color.White);
tiny.DrawText(GetXAxisValueFormat().F(n), origin + new float2(x, 2), Color.White);
}
bold.DrawText(GetXAxisLabel(), origin + new float2(width / 2, 20), Color.White);
for (var y = (GetDisplayFirstYAxisValue() ? 0
{
var yValue = y / scale;
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width - 5, -y), origin + new float2(width, -y), Color.White, Color.White);
tiny.DrawText(GetYAxisValueFormat().F(yValue), origin + new float2(width + 2, -y), Color.White);
}
bold.DrawText(GetYAxisLabel(), origin + new float2(width + 40, -(height / 2)), Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(width, 0), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(0, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width, 0), origin + new float2(width, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(0, -height), origin + new float2(width, -height), Color.White, Color.White);
}
public override Widget Clone()
{
return new LineGraphWidget(this);
}
}
public class LineGraphSeries
{
public string Key;
public Color Color;
public IEnumerable<float> Points;
public LineGraphSeries(string key, Color color, IEnumerable<float> points)
{
Key = key;
Color = color;
Points = points;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="849" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\WorldRenderer.cs" startline="25" endline="30">
<![CDATA[
public PaletteReference(string name, int index, Palette palette)
{
Name = name;
Index = index;
Palette = palette;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="23" endline="28">
<![CDATA[
public Teleport(Actor chronosphere, CPos destination, bool killCargo)
{
this.chronosphere = chronosphere;
this.destination = destination;
this.killCargo = killCargo;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="850" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\WorldRenderer.cs" startline="25" endline="30">
<![CDATA[
public PaletteReference(string name, int index, Palette palette)
{
Name = name;
Index = index;
Palette = palette;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="23" endline="28">
<![CDATA[
public Objective(ObjectiveType type, string text, ObjectiveStatus status)
{
Type = type;
Text = text;
Status = status;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="851" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Graphics\WorldRenderer.cs" startline="25" endline="30">
<![CDATA[
public PaletteReference(string name, int index, Palette palette)
{
Name = name;
Index = index;
Palette = palette;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="32" endline="41">
<![CDATA[
public ProximityCapturableInfo Info;
public Actor Self;
public ProximityCapturable(Actor self, ProximityCapturableInfo info)
{
Info = info;
Self = self;
OriginalOwner = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="852" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="54" endline="61">
<![CDATA[
public CVec Clamp(Rectangle r)
{
return new CVec(
Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top))
);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="45" endline="50">
<![CDATA[
public CPos Clamp(Rectangle r)
{
return new CPos(Math.Min(r.Right, Math.Max(X, r.Left)),
Math.Min(r.Bottom, Math.Max(Y, r.Top)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="853" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CVec.cs" startline="64" endline="72">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CVec o = (CVec)obj;
return o == this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\CPos.cs" startline="53" endline="61">
<![CDATA[
public override bool Equals(object obj)
{
if (obj == null)
return false;
CPos o = (CPos)obj;
return o == this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="854" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="855" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="856" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="857" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="858" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="859" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="860" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="861" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="862" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="863" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="864" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="865" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="36" endline="74">
<![CDATA[
public string Type = "Conquest";
public string Description;
public string Author;
public string Tileset;
public string[] Difficulties;
[FieldLoader.Ignore] public Lazy<Dictionary<string, ActorReference>> Actors;
public int PlayerCount { get { return Players.Count(p => p.Value.Playable); } }
public int2[] GetSpawnPoints()
{
return Actors.Value.Values
.Where(a => a.Type == "mpspawn")
.Select(a => a.InitDict.Get<LocationInit>().value)
.ToArray();
}
public Rectangle Bounds;
[FieldLoader.Ignore] public Dictionary<string, PlayerReference> Players = new Dictionary<string, PlayerReference>();
[FieldLoader.Ignore] public Lazy<List<SmudgeReference>> Smudges;
[FieldLoader.Ignore] public List<MiniYamlNode> Rules = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Sequences = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Weapons = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Voices = new List<MiniYamlNode>();
[FieldLoader.Ignore] public List<MiniYamlNode> Notifications = new List<MiniYamlNode>();
[FieldLoader.Ignore] public byte TileFormat = 1;
public int2 MapSize;
[FieldLoader.Ignore] public Lazy<TileReference<ushort, byte>[,]> MapTiles;
[FieldLoader.Ignore] public Lazy<TileReference<byte, byte>[,]> MapResources;
[FieldLoader.Ignore] public string [,] CustomTerrain;
public Map() {}	/* doesn't really produce a valid map, but enough for loading a mod */
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="866" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Map.cs" startline="390" endline="422">
<![CDATA[
if (!Players.ContainsKey("Neutral"))
Players.Add("Neutral", new PlayerReference
{
Name = "Neutral",
Race = firstRace,
OwnsWorld = true,
NonCombatant = true
});
var numSpawns = GetSpawnPoints().Length;
for (var index = 0; index < numSpawns; index++)
{
if (Players.ContainsKey("Multi{0}".F(index)))
continue;
var p = new PlayerReference
{
Name = "Multi{0}".F(index),
Race = "Random",
Playable = true,
DefaultStartingUnits = true,
Enemies = new[] { "Creeps" }
};
Players.Add(p.Name, p);
}
Players.Add("Creeps", new PlayerReference
{
Name = "Creeps",
Race = firstRace,
NonCombatant = true,
Enemies = Players.Where(p => p.Value.Playable).Select(p => p.Key).ToArray()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs" startline="84" endline="92">
<![CDATA[
}
EnumerateMaps();
}
void EnumerateMaps()
{
var maps = Game.modData.AvailableMaps
.Where(kv => kv.Value.Selectable)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="867" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\Connection.cs" startline="56" endline="65">
<![CDATA[
}
public virtual void Send( int frame, List<byte[]> orders )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
foreach( var o in orders )
ms.Write( o );
foreach( var o in orders )
ms.Write( o );
Send( ms.ToArray() );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\Connection.cs" startline="66" endline="74">
<![CDATA[
public virtual void SendImmediate( List<byte[]> orders )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( (int)0 ) );
foreach( var o in orders )
ms.Write( o );
foreach( var o in orders )
ms.Write( o );
Send( ms.ToArray() );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="868" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\Connection.cs" startline="75" endline="82">
<![CDATA[
public virtual void SendSync( int frame, byte[] syncData )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
ms.Write( syncData );
Send( ms.ToArray() );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\Connection.cs" startline="159" endline="168">
<![CDATA[
List<byte[]> queuedSyncPackets = new List<byte[]>();
public override void SendSync( int frame, byte[] syncData )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
ms.Write( syncData );
queuedSyncPackets.Add( ms.ToArray() );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="869" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\Connection.cs" startline="75" endline="82">
<![CDATA[
public virtual void SendSync( int frame, byte[] syncData )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
ms.Write( syncData );
Send( ms.ToArray() );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\ReplayConnection.cs" startline="32" endline="39">
<![CDATA[
public void SendSync( int frame, byte[] syncData )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
ms.Write( syncData );
sync.Add( ms.ToArray() );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="870" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\Connection.cs" startline="159" endline="168">
<![CDATA[
List<byte[]> queuedSyncPackets = new List<byte[]>();
public override void SendSync( int frame, byte[] syncData )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
ms.Write( syncData );
queuedSyncPackets.Add( ms.ToArray() );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\ReplayConnection.cs" startline="32" endline="39">
<![CDATA[
public void SendSync( int frame, byte[] syncData )
{
var ms = new MemoryStream();
ms.Write( BitConverter.GetBytes( frame ) );
ms.Write( syncData );
sync.Add( ms.ToArray() );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="871" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="872" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="873" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="874" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="875" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="876" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\TooltipContainerWidget.cs" startline="24" endline="32">
<![CDATA[
public int2 CursorOffset = new int2(0, 20);
public Action BeforeRender = Nothing;
public int TooltipDelay = 5;
Widget tooltip;
public TooltipContainerWidget()
{
IsVisible = () => Viewport.TicksSinceLastMove >= TooltipDelay;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="877" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="878" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="879" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="880" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="881" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="882" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="883" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="884" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="885" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="886" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="887" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="888" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="889" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="890" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="891" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="892" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="893" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="894" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="20" endline="27">
<![CDATA[
public readonly int Id = 0;
public readonly string Name = null;
public readonly string Address = null;
public readonly int State = 0;
public readonly int Players = 0;
public readonly string Map = null;
public readonly string[] Mods = { };
public readonly int TTL = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="895" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\GameServer.cs" startline="28" endline="34">
<![CDATA[
public Dictionary<string, string> UsefulMods
{
get
{
return Mods
.Where(v => v.Contains('@'))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Server.cs" startline="214" endline="239">
<![CDATA[
};
DispatchOrdersToClient(newConn, 0, 0, new ServerOrder("HandshakeRequest", request.Serialize()).Serialize());
}
catch (Exception) { DropClient(newConn); }
}
void ValidateClient(Connection newConn, string data)
{
try
{
if (State == ServerState.GameStarted)
{
Log.Write("server", "Rejected connection from {0}; game is already started.",
newConn.socket.RemoteEndPoint);
SendOrderTo(newConn, "ServerError", "The game has already started");
DropClient(newConn);
return;
}
var handshake = HandshakeResponse.Deserialize(data);
var client = handshake.Client;
var mods = handshake.Mods;
var validMod = mods.All(m => m.Contains('@')) && //valid format
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="896" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Orders\GenericSelectTarget.cs" startline="25" endline="31">
<![CDATA[
public GenericSelectTarget(IEnumerable<Actor> subjects, string order, string cursor, MouseButton button)
{
this.subjects = subjects;
this.order = order;
this.cursor = cursor;
expectedButton = button;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerManager.cs" startline="202" endline="208">
<![CDATA[
public SelectGenericPowerTarget(string order, SupportPowerManager manager, string cursor, MouseButton button)
{
this.manager = manager;
this.order = order;
this.cursor = cursor;
expectedButton = button;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="897" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Orders\GenericSelectTarget.cs" startline="50" endline="56">
<![CDATA[
public IEnumerable<Order> Order(World world, CPos xy, MouseInput mi)
{
if (mi.Button != expectedButton)
world.CancelInputMode();
return OrderInner(world, xy, mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="29" endline="36">
<![CDATA[
public IEnumerable<Order> Order(World world, CPos xy, MouseInput mi)
{
if (mi.Button == MouseButton.Right)
world.CancelInputMode();
return OrderInner(world, xy, mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="898" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Orders\GenericSelectTarget.cs" startline="50" endline="56">
<![CDATA[
public IEnumerable<Order> Order(World world, CPos xy, MouseInput mi)
{
if (mi.Button != expectedButton)
world.CancelInputMode();
return OrderInner(world, xy, mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\RepairOrderGenerator.cs" startline="22" endline="27">
<![CDATA[
{
if (mi.Button == MouseButton.Right)
world.CancelInputMode();
return OrderInner(world, xy, mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="899" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="900" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="76" endline="113">
<![CDATA[
if (onCancel != null)
fullscreenMask.OnMouseDown += _ => onCancel();
Ui.Root.AddChild(fullscreenMask);
var oldBounds = panel.Bounds;
panel.Bounds = new Rectangle(RenderOrigin.X, RenderOrigin.Y + Bounds.Height, oldBounds.Width, oldBounds.Height);
Ui.Root.AddChild(panel);
}
public void ShowDropDown<T>(string panelTemplate, int height, IEnumerable<T> options, Func<T, ScrollItemWidget, ScrollItemWidget> setupItem)
{
var substitutions = new Dictionary<string,int>() {{ "DROPDOWN_WIDTH", Bounds.Width }};
var panel = (ScrollPanelWidget)Ui.LoadWidget(panelTemplate, null, new WidgetArgs()
{{ "substitutions", substitutions }});
var itemTemplate = panel.Get<ScrollItemWidget>("TEMPLATE");
panel.RemoveChildren();
foreach (var option in options)
{
var o = option;
var item = setupItem(o, itemTemplate);
var onClick = item.OnClick;
item.OnClick = () => { onClick(); RemovePanel(); };
panel.AddChild(item);
}
panel.Bounds.Height = Math.Min(height, panel.ContentHeight);
AttachPanel(panel);
}
}
public class MaskWidget
{
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="901" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="902" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="903" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="904" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="905" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Selection.cs" startline="20" endline="65">
<![CDATA[
List<Actor> actors = new List<Actor>();
public void Add(World w, Actor a)
{
actors.Add(a);
foreach (var ns in w.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public bool Contains(Actor a)
{
return actors.AsEnumerable().Contains(a);
}
public void Combine(World world, IEnumerable<Actor> newSelection, bool isCombine, bool isClick)
{
var oldSelection = actors.AsEnumerable();
if (isClick)
{
var adjNewSelection = newSelection.Take(1);	/* TODO
actors = (isCombine ? oldSelection.SymmetricDifference(adjNewSelection)
}
else
actors = (isCombine ? oldSelection.Union(newSelection)
var voicedUnit = actors.FirstOrDefault(a => a.Owner == world.LocalPlayer && a.IsInWorld && a.HasVoice());
if (voicedUnit != null)
Sound.PlayVoice("Select", voicedUnit, voicedUnit.Owner.Country.Race);
foreach (var ns in world.WorldActor.TraitsImplementing<INotifySelection>())
ns.SelectionChanged();
}
public IEnumerable<Actor> Actors { get { return actors; } }
public void Clear() { actors = new List<Actor>(); }
public void Tick(World world)
{
actors.RemoveAll(a => !a.IsInWorld);
foreach (var cg in controlGroups.Values)
cg.RemoveAll(a => a.Destroyed);		// note
}
Cache<int, List<Actor>> controlGroups = new Cache<int, List<Actor>>(_ => new List<Actor>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="906" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="907" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="908" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="909" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="910" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="911" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="912" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="913" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="914" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="915" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="916" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="917" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="918" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="919" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="920" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="921" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="922" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="923" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="924" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="925" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="926" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="927" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="928" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="929" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="930" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="931" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="932" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="933" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="934" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="935" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="936" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="937" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="938" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="939" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\Connection.cs" startline="23" endline="27">
<![CDATA[
public List<byte> data = new List<byte>();
public ReceiveState State = ReceiveState.Header;
public int ExpectLength = 8;
public int Frame = 0;
public int MostRecentFrame = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="940" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="941" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="942" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="943" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="944" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="945" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="946" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="947" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="948" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="949" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="950" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="951" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="952" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="953" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="954" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="955" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="956" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="957" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="958" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Server\ServerOrder.cs" startline="21" endline="25">
<![CDATA[
public ServerOrder(string name, string data)
{
Name = name;
Data = data;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="959" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Sound.cs" startline="98" endline="103">
<![CDATA[
public static void PlayVideo()
{
if (video != null)
soundEngine.PauseSound(video, false);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Sound.cs" startline="104" endline="109">
<![CDATA[
public static void PauseVideo()
{
if (video != null)
soundEngine.PauseSound(video, true);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="960" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Sound.cs" startline="157" endline="164">
<![CDATA[
public static void PlayMusic()
{
if (music == null)
return;
MusicPlaying = true;
soundEngine.PauseSound(music, false);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Sound.cs" startline="180" endline="188">
<![CDATA[
public static void PauseMusic()
{
if (music == null)
return;
MusicPlaying = false;
soundEngine.PauseSound(music, true);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="961" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Sound.cs" startline="221" endline="226">
<![CDATA[
set
{
Game.Settings.Sound.MusicVolume = value;
if (music != null)
music.Volume = value;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Sound.cs" startline="232" endline="237">
<![CDATA[
set
{
Game.Settings.Sound.VideoVolume = value;
if (video != null)
video.Volume = value;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="962" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Support\PerfHistory.cs" startline="104" endline="115">
<![CDATA[
}
}
public class PerfSample
{
readonly Stopwatch sw = new Stopwatch();
readonly string Item;
public PerfSample(string item)
{
Item = item;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="963" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="68" endline="73">
<![CDATA[
public T Get<T>( Actor actor )
{
CheckDestroyed(actor);
return ( (TraitContainer<T>)InnerGet( typeof( T ) ) ).Get( actor.ActorID );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="74" endline="79">
<![CDATA[
public T GetOrDefault<T>( Actor actor )
{
CheckDestroyed(actor);
return ( (TraitContainer<T>)InnerGet( typeof( T ) ) ).GetOrDefault( actor.ActorID );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="964" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="68" endline="73">
<![CDATA[
public T Get<T>( Actor actor )
{
CheckDestroyed(actor);
return ( (TraitContainer<T>)InnerGet( typeof( T ) ) ).Get( actor.ActorID );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="80" endline="85">
<![CDATA[
public IEnumerable<T> WithInterface<T>( Actor actor )
{
CheckDestroyed(actor);
return ( (TraitContainer<T>)InnerGet( typeof( T ) ) ).GetMultiple( actor.ActorID );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="965" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="74" endline="79">
<![CDATA[
public T GetOrDefault<T>( Actor actor )
{
CheckDestroyed(actor);
return ( (TraitContainer<T>)InnerGet( typeof( T ) ) ).GetOrDefault( actor.ActorID );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\TraitDictionary.cs" startline="80" endline="85">
<![CDATA[
public IEnumerable<T> WithInterface<T>( Actor actor )
{
CheckDestroyed(actor);
return ( (TraitContainer<T>)InnerGet( typeof( T ) ) ).GetMultiple( actor.ActorID );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="966" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="967" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="968" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="969" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="970" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="971" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="972" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="973" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="974" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="975" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="976" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="977" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="978" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="979" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="980" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="981" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="982" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="983" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="984" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="985" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="986" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="987" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="988" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="989" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="990" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="991" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="992" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="993" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="994" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="995" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="996" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="997" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="998" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="999" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1000" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1001" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1002" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1003" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1004" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1005" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1006" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1007" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\CreatesShroud.cs" startline="18" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new CreatesShroud(this); }
}
public class CreatesShroud
{
CreatesShroudInfo Info;
[Sync] CPos previousLocation;
Shroud.ActorVisibility v;
public CreatesShroud(CreatesShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1008" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1009" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1010" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1011" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1012" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1013" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1014" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1015" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1016" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1017" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1018" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1019" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1020" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1021" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1022" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1023" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1024" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1025" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\DrawLineToTarget.cs" startline="21" endline="33">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new DrawLineToTarget(init.self, this); }
}
public class DrawLineToTarget
{
Actor self;
DrawLineToTargetInfo Info;
List<Target> targets;
Color c;
int lifetime;
public DrawLineToTarget(Actor self, DrawLineToTargetInfo info) { this.self = self; this.Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1026" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1027" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1028" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1029" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1030" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1031" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Health.cs" startline="162" endline="167">
<![CDATA[
}
public class HealthInit
{
[FieldFromYamlKey] public readonly float value = 1f;
public HealthInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1032" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1033" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1034" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1035" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1036" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1037" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1038" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1039" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1040" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1041" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1042" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1043" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1044" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1045" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1046" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1047" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1048" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1049" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1050" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1051" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1052" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1053" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1054" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1055" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1056" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1057" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1058" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1059" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1060" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1061" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1062" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1063" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1064" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="17" endline="21">
<![CDATA[
public int Cash = 20000;
public bool FastBuild = false;
public bool FastCharge = false;
public bool DisableShroud = false;
public bool PathDebug = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1065" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="22" endline="53">
<![CDATA[
public bool UnlimitedPower;
public bool BuildAnywhere;
public bool ShowMuzzles;
public object Create (ActorInitializer init) { return new DeveloperMode(this); }
}
public class DeveloperMode
{
DeveloperModeInfo Info;
[Sync] public bool FastCharge;
[Sync] public bool AllTech;
[Sync] public bool FastBuild;
[Sync] public bool DisableShroud;
[Sync] public bool PathDebug;
[Sync] public bool UnlimitedPower;
[Sync] public bool BuildAnywhere;
public bool ShowMuzzles;
public DeveloperMode(DeveloperModeInfo info)
{
Info = info;
FastBuild = info.FastBuild;
FastCharge = info.FastCharge;
DisableShroud = info.DisableShroud;
PathDebug = info.PathDebug;
UnlimitedPower = info.UnlimitedPower;
BuildAnywhere = info.BuildAnywhere;
ShowMuzzles = info.ShowMuzzles;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1066" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="22" endline="53">
<![CDATA[
public bool UnlimitedPower;
public bool BuildAnywhere;
public bool ShowMuzzles;
public object Create (ActorInitializer init) { return new DeveloperMode(this); }
}
public class DeveloperMode
{
DeveloperModeInfo Info;
[Sync] public bool FastCharge;
[Sync] public bool AllTech;
[Sync] public bool FastBuild;
[Sync] public bool DisableShroud;
[Sync] public bool PathDebug;
[Sync] public bool UnlimitedPower;
[Sync] public bool BuildAnywhere;
public bool ShowMuzzles;
public DeveloperMode(DeveloperModeInfo info)
{
Info = info;
FastBuild = info.FastBuild;
FastCharge = info.FastCharge;
DisableShroud = info.DisableShroud;
PathDebug = info.PathDebug;
UnlimitedPower = info.UnlimitedPower;
BuildAnywhere = info.BuildAnywhere;
ShowMuzzles = info.ShowMuzzles;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1067" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="22" endline="53">
<![CDATA[
public bool UnlimitedPower;
public bool BuildAnywhere;
public bool ShowMuzzles;
public object Create (ActorInitializer init) { return new DeveloperMode(this); }
}
public class DeveloperMode
{
DeveloperModeInfo Info;
[Sync] public bool FastCharge;
[Sync] public bool AllTech;
[Sync] public bool FastBuild;
[Sync] public bool DisableShroud;
[Sync] public bool PathDebug;
[Sync] public bool UnlimitedPower;
[Sync] public bool BuildAnywhere;
public bool ShowMuzzles;
public DeveloperMode(DeveloperModeInfo info)
{
Info = info;
FastBuild = info.FastBuild;
FastCharge = info.FastCharge;
DisableShroud = info.DisableShroud;
PathDebug = info.PathDebug;
UnlimitedPower = info.UnlimitedPower;
BuildAnywhere = info.BuildAnywhere;
ShowMuzzles = info.ShowMuzzles;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ShpImageWidget.cs" startline="18" endline="48">
<![CDATA[
public string Image = "";
public int Frame = 0;
public string Palette = "chrome";
public Func<string> GetImage;
public Func<int> GetFrame;
public Func<string> GetPalette;
readonly WorldRenderer worldRenderer;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
protected ShpImageWidget(ShpImageWidget other)
{
Image = other.Image;
Frame = other.Frame;
Palette = other.Palette;
GetImage = other.GetImage;
GetFrame = other.GetFrame;
GetPalette = other.GetPalette;
worldRenderer = other.worldRenderer;
}
public override Widget Clone() { return new ShpImageWidget(this); }
Sprite sprite = null;
string cachedImage = null;
int cachedFrame = -1;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1068" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="22" endline="53">
<![CDATA[
public bool UnlimitedPower;
public bool BuildAnywhere;
public bool ShowMuzzles;
public object Create (ActorInitializer init) { return new DeveloperMode(this); }
}
public class DeveloperMode
{
DeveloperModeInfo Info;
[Sync] public bool FastCharge;
[Sync] public bool AllTech;
[Sync] public bool FastBuild;
[Sync] public bool DisableShroud;
[Sync] public bool PathDebug;
[Sync] public bool UnlimitedPower;
[Sync] public bool BuildAnywhere;
public bool ShowMuzzles;
public DeveloperMode(DeveloperModeInfo info)
{
Info = info;
FastBuild = info.FastBuild;
FastCharge = info.FastCharge;
DisableShroud = info.DisableShroud;
PathDebug = info.PathDebug;
UnlimitedPower = info.UnlimitedPower;
BuildAnywhere = info.BuildAnywhere;
ShowMuzzles = info.ShowMuzzles;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="34" endline="43">
<![CDATA[
protected ClientTooltipRegionWidget(ClientTooltipRegionWidget other)
{
Template = other.Template;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
orderManager = other.orderManager;
clientIndex = other.clientIndex;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1069" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="22" endline="53">
<![CDATA[
public bool UnlimitedPower;
public bool BuildAnywhere;
public bool ShowMuzzles;
public object Create (ActorInitializer init) { return new DeveloperMode(this); }
}
public class DeveloperMode
{
DeveloperModeInfo Info;
[Sync] public bool FastCharge;
[Sync] public bool AllTech;
[Sync] public bool FastBuild;
[Sync] public bool DisableShroud;
[Sync] public bool PathDebug;
[Sync] public bool UnlimitedPower;
[Sync] public bool BuildAnywhere;
public bool ShowMuzzles;
public DeveloperMode(DeveloperModeInfo info)
{
Info = info;
FastBuild = info.FastBuild;
FastCharge = info.FastCharge;
DisableShroud = info.DisableShroud;
PathDebug = info.PathDebug;
UnlimitedPower = info.UnlimitedPower;
BuildAnywhere = info.BuildAnywhere;
ShowMuzzles = info.ShowMuzzles;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1070" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\DeveloperMode.cs" startline="22" endline="53">
<![CDATA[
public bool UnlimitedPower;
public bool BuildAnywhere;
public bool ShowMuzzles;
public object Create (ActorInitializer init) { return new DeveloperMode(this); }
}
public class DeveloperMode
{
DeveloperModeInfo Info;
[Sync] public bool FastCharge;
[Sync] public bool AllTech;
[Sync] public bool FastBuild;
[Sync] public bool DisableShroud;
[Sync] public bool PathDebug;
[Sync] public bool UnlimitedPower;
[Sync] public bool BuildAnywhere;
public bool ShowMuzzles;
public DeveloperMode(DeveloperModeInfo info)
{
Info = info;
FastBuild = info.FastBuild;
FastCharge = info.FastCharge;
DisableShroud = info.DisableShroud;
PathDebug = info.PathDebug;
UnlimitedPower = info.UnlimitedPower;
BuildAnywhere = info.BuildAnywhere;
ShowMuzzles = info.ShowMuzzles;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1071" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="22" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayerResources(init.self, this); }
}
public class DebugResourceCashInfo
{
public object Create(ActorInitializer init) { return new DebugResourceCash(init.self); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="68" endline="82">
<![CDATA[
}
public class AircraftInfo
{
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
public virtual object Create( ActorInitializer init ) { return new Aircraft( init , this ); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1072" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="22" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayerResources(init.self, this); }
}
public class DebugResourceCashInfo
{
public object Create(ActorInitializer init) { return new DebugResourceCash(init.self); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="136" endline="148">
<![CDATA[
.Where(a => self.Owner.Shroud.IsTargetable(a))
.ClosestTo( self.CenterLocation );
}
}
}
[Desc("Will not get automatically targeted by enemy (like walls)")]
class AutoTargetIgnoreInfo
class AutoTargetIgnore { }
public class DebugRetiliateAgainstAggressorInfo
{
public object Create(ActorInitializer init) { return new DebugRetiliateAgainstAggressor(init.self); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1073" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="22" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayerResources(init.self, this); }
}
public class DebugResourceCashInfo
{
public object Create(ActorInitializer init) { return new DebugResourceCash(init.self); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="31" endline="456">
<![CDATA[
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
Actor[] townAttackers;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies1, allies2);
}
public void Tick(Actor self)
{
if (allies1.WinState != WinState.Undefined) return;
if (world.FrameNumber == 1)
InsertSpies();
if (frameInfiltrated != -1)
{
if (world.FrameNumber == frameInfiltrated + 100)
{
Sound.Play("aarrivs1.aud");
Game.MoveViewport(reinforcementsUnloadPoint.Location.ToFloat2());
world.AddFrameEndTask(w => SendReinforcements());
}
if (world.FrameNumber == frameInfiltrated + 200)
{
Sound.Play("timergo1.aud");
destroyBaseTimer = new CountdownTimer(destroyBaseTicks, OnDestroyBaseTimerExpired, true);
destroyBaseTimerWidget = new CountdownTimerWidget(destroyBaseTimer, "Secure lab in
Ui.Root.AddChild(destroyBaseTimerWidget);
}
if (world.FrameNumber >= frameInfiltrated + 200)
destroyBaseTimer.Tick();
if (world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead())
{
bridgeTank.QueueActivity(new Attack(Target.FromPos(bridge.CenterLocation), 4));
attackingBridge = true;
}
if (attackingBridge && bridge.IsDead())
{
if (!bridgeTank.IsDead())
bridgeTank.CancelActivity();
attackingBridge = false;
}
if (world.FrameNumber == frameInfiltrated + 1500 * 6)
foreach (var attacker in townAttackers.Where(a => !a.IsDead() && a.IsInWorld))
{
attacker.CancelActivity();
attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker, new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10, -15), 3)));
}
}
if (attackingTown)
{
foreach (var attacker in townAttackers.Where(u => u.IsIdle && !u.IsDead() && u.IsInWorld))
{
var enemies = world.Actors.Where(u => u.Owner == creeps && u.HasTrait<ITargetable>()
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>() && !u.HasTrait<Bridge>()) || u.HasTrait<Mobile>()) && !u.IsDead() && u.IsInWorld);
var enemy = enemies.OrderBy(u => (attacker.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker, new Attack(Target.FromActor(enemy), 3)));
else
{
attackingTown = false;
break;
}
}
}
foreach (var patrol in patrols)
patrol.DoPatrol();
MissionUtils.CapOre(soviets);
BaseGuardTick();
if (allies1Spy.IsDead() || (allies2Spy != null && allies2Spy.IsDead()))
{
objectives[InfiltrateID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("{0} spy was killed.".F(allies1 != allies2 ? "A"
}
else if (lab.IsDead())
MissionFailed("The Soviet research laboratory was destroyed.");
else if (!world.Actors.Any(a => (a.Owner == allies1 || a.Owner == allies2) && !a.IsDead()
&& (a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>()))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The remaining Allied forces in the area have been wiped out.");
}
else if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed)
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
MissionAccomplished("The Soviet research laboratory has been secured successfully.");
}
if (world.FrameNumber == nextCivilianMove)
{
var civilians = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && a.Owner == creeps && a.HasTrait<Mobile>());
if (civilians.Any())
{
var civilian = civilians.Random(world.SharedRandom);
civilian.Trait<Mobile>().Nudge(civilian, civilian, true);
nextCivilianMove += world.SharedRandom.Next(1, 75);
}
}
}
bool SovietBaseDestroyed()
{
return !world.Actors.Any(a => a.Owner == soviets && a.IsInWorld && !a.IsDead()
&& a.HasTrait<Building>() && !a.HasTrait<Wall>() && !a.HasTrait<Allies04TrivialBuilding>() && a != lab);
}
void OnDestroyBaseTimerExpired(CountdownTimer t)
{
if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed) return;
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The Soviet research laboratory was not secured in time.");
}
void BaseGuardTick()
{
if (baseGuardTicks <= 0 || baseGuard.IsDead() || !baseGuard.IsInWorld) return;
if (hijackTruck.Location == baseGuardTruckPos.Location)
{
if (--baseGuardTicks <= 0)
baseGuard.QueueActivity(new Move.Move(baseGuardMovePos.Location));
}
else
baseGuardTicks = 100;
}
void OnLabInfiltrated(Actor spy)
{
if (spy == allies1Spy) allies1SpyInfiltratedLab = true;
else if (spy == allies2Spy) allies2SpyInfiltratedLab = true;
if (allies1SpyInfiltratedLab && (allies2SpyInfiltratedLab || allies2Spy == null))
{
objectives[InfiltrateID].Status = ObjectiveStatus.Completed;
objectives[DestroyID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
frameInfiltrated = world.FrameNumber;
foreach (var actor in world.Actors.Where(a => !a.IsDead() && a.HasTrait<Allies04TransformOnLabInfiltrate>()))
actor.QueueActivity(false, new Transform(actor, actor.Info.Traits.Get<Allies04TransformOnLabInfiltrateInfo>().ToActor) { SkipMakeAnims = true });
}
}
void SendReinforcements()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(reinforcementsEntryPoint.Location)
});
lst.Trait<Cargo>().Load(lst, world.CreateActor(false, "mcv", new TypeDictionary { new OwnerInit(allies1) }));
if (allies1 != allies2)
lst.Trait<Cargo>().Load(lst, world.CreateActor(false, "mcv", new TypeDictionary { new OwnerInit(allies2) }));
lst.QueueActivity(new Move.Move(reinforcementsUnloadPoint.Location));
lst.QueueActivity(new Wait(10));
lst.QueueActivity(new CallFunc(() =>
{
allies1.PlayerActor.Trait<PlayerResources>().GiveCash(allies1 == allies2 ? 5000
if (allies1 != allies2)
allies2.PlayerActor.Trait<PlayerResources>().GiveCash(2500);
}));
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(reinforcementsEntryPoint.Location));
self.QueueActivity(new RemoveSelf());
}));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
class Patrol
{
Actor[] actors;
CPos[] points;
int pointIndex;
World world;
public Patrol(World world, string[] actorNames, Player owner, CPos[] points, int pointIndex)
{
this.world = world;
this.points = points;
this.pointIndex = pointIndex;
var td = new TypeDictionary { new OwnerInit(owner), new LocationInit(points[pointIndex]) };
actors = actorNames.Select(a => world.CreateActor(a, td)).ToArray();
}
public void DoPatrol()
{
if (actors.Any(a => a.IsDead() || !a.IsIdle || !a.IsInWorld)) return;
pointIndex = (pointIndex + 1) % points.Length;
foreach (var actor in actors.Where(a => !a.IsDead() && a.IsInWorld))
{
actor.QueueActivity(new Wait(world.SharedRandom.Next(50, 75)));
actor.QueueActivity(new AttackMove.AttackMoveActivity(actor, new Move.Move(points[pointIndex], 0)));
}
}
}
void InsertSpies()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(spyReinforcementsEntryPoint.Location)
});
allies1Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies1) });
lst.Trait<Cargo>().Load(lst, allies1Spy);
if (allies1 != allies2)
{
allies2Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies2) });
lst.Trait<Cargo>().Load(lst, allies2Spy);
}
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(spyReinforcementsExitPoint.Location));
self.QueueActivity(new RemoveSelf());
}));
lst.QueueActivity(new Move.Move(spyReinforcementsUnloadPoint.Location));
lst.QueueActivity(new Wait(10));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
void SetupSubStances()
{
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == soviets && !a.IsDead() && a.HasTrait<TargetableSubmarine>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
allies2 = w.Players.SingleOrDefault(p => p.InternalName == "Allies2");
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
creeps = w.Players.Single(p => p.InternalName == "Creeps");
objectives[InfiltrateID].Text = Infiltrate.F(allies1 != allies2 ? "spies"
destroyBaseTicks = difficulty == "Hard" ? 1500 * 25
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
spyReinforcementsEntryPoint = actors["SpyReinforcementsEntryPoint"];
spyReinforcementsUnloadPoint = actors["SpyReinforcementsUnloadPoint"];
spyReinforcementsExitPoint = actors["SpyReinforcementsExitPoint"];
hijackTruck = actors["HijackTruck"];
baseGuard = actors["BaseGuard"];
baseGuardMovePos = actors["BaseGuardMovePos"];
baseGuardTruckPos = actors["BaseGuardTruckPos"];
patrolPoints1 = new[]
{
actors["PatrolPoint11"].Location,
actors["PatrolPoint12"].Location,
actors["PatrolPoint13"].Location,
actors["PatrolPoint14"].Location,
actors["PatrolPoint15"].Location
};
patrolPoints2 = patrolPoints1;
patrolPoints3 = new[]
{
actors["PatrolPoint21"].Location,
actors["PatrolPoint22"].Location,
actors["PatrolPoint23"].Location,
actors["PatrolPoint24"].Location,
actors["PatrolPoint25"].Location
};
patrolPoints4 = new[]
{
actors["PatrolPoint31"].Location,
actors["PatrolPoint32"].Location,
actors["PatrolPoint33"].Location,
actors["PatrolPoint34"].Location
};
patrolPoints5 = new[]
{
actors["PatrolPoint41"].Location,
actors["PatrolPoint42"].Location,
actors["PatrolPoint43"].Location,
actors["PatrolPoint44"].Location,
actors["PatrolPoint45"].Location
};
lab = actors["Lab"];
lab.AddTrait(new InfiltrateAction(OnLabInfiltrated));
lab.AddTrait(new TransformedAction(self => lab = self));
reinforcementsEntryPoint = actors["ReinforcementsEntryPoint"];
reinforcementsUnloadPoint = actors["ReinforcementsUnloadPoint"];
patrols = new List<Patrol>
{
new Patrol(world, new[] { "e1", "e1", "e1", "e1", "e1" }, soviets, patrolPoints1, 0),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints2, 2),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints4, 0),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints5, 0),
};
if (difficulty == "Hard")
patrols.Add(new Patrol(world, new[] { "e1", "e1", "dog.patrol" }, soviets, patrolPoints3, 0));
bridgeTank = actors["BridgeTank"];
bridgeAttackPoint = actors["BridgeAttackPoint"];
bridge = world.Actors
.Where(a => a.HasTrait<Bridge>() && !a.IsDead())
.OrderBy(a => (a.Location - bridgeAttackPoint.Location).LengthSquared)
.FirstOrDefault();
var ta1 = actors["TownAttacker1"];
var ta2 = actors["TownAttacker2"];
var ta3 = actors["TownAttacker3"];
var ta4 = actors["TownAttacker4"];
var ta5 = actors["TownAttacker5"];
var ta6 = actors["TownAttacker6"];
var ta7 = actors["TownAttacker7"];
townAttackers = new[] { ta1, ta2, ta3, ta4, ta5, ta6, ta7 };
OnObjectivesUpdated(false);
SetupSubStances();
Game.MoveViewport(spyReinforcementsEntryPoint.Location.ToFloat2());
MissionUtils.PlayMissionMusic();
}
}
class Allies04HijackableInfo
{
public object Create(ActorInitializer init) { return new Allies04Hijackable(init.self); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1074" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1075" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1076" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1077" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1078" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1079" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1080" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1081" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1082" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1083" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1084" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1085" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1086" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1087" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1088" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1089" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1090" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1091" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1092" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1093" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1094" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1095" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1096" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1097" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1098" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1099" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1100" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1101" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1102" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1103" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1104" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1105" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1106" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1107" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1108" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="29" endline="34">
<![CDATA[
}
public class DebugResourceCash
{
readonly PlayerResources pr;
public DebugResourceCash(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1109" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1110" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1111" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1112" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1113" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1114" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1115" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1116" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1117" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1118" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1119" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1120" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1121" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1122" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1123" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1124" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1125" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1126" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1127" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1128" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1129" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1130" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1131" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1132" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1133" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1134" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1135" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1136" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1137" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1138" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1139" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1140" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1141" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1142" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="41" endline="46">
<![CDATA[
}
public class DebugResourceOre
{
readonly PlayerResources pr;
public DebugResourceOre(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1143" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1144" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1145" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1146" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1147" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1148" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1149" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1150" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1151" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1152" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1153" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1154" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1155" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1156" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1157" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1158" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1159" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1160" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1161" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1162" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1163" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1164" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1165" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1166" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1167" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1168" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1169" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1170" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1171" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1172" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1173" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1174" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1175" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="53" endline="58">
<![CDATA[
}
public class DebugResourceOreCapacity
{
readonly PlayerResources pr;
public DebugResourceOreCapacity(Actor self) { pr = self.Trait<PlayerResources>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1176" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Player\PlayerResources.cs" startline="60" endline="76">
<![CDATA[
}
public class PlayerResources
{
readonly Player Owner;
int AdviceInterval;
int cashtickallowed = 0;
public PlayerResources(Actor self, PlayerResourcesInfo info)
{
Owner = self.Owner;
Cash = info.InitialCash;
Ore = info.InitialOre;
AdviceInterval = info.AdviceInterval;
}
[Sync] public int Cash;
[Sync] public int Ore;
[Sync] public int OreCapacity;
public int DisplayCash;
public int DisplayOre;
public bool AlertSilo;
public int Earned;
public int Spent;
public bool CanGiveOre(int amount)
{
return Ore + amount <= OreCapacity;
}
public void GiveOre(int num)
{
Ore += num;
Earned += num;
if (Ore > OreCapacity)
{
nextSiloAdviceTime = 0;
Earned -= Ore - OreCapacity;
Ore = OreCapacity;
}
}
public bool TakeOre(int num)
{
if (Ore < num) return false;
Ore -= num;
Spent += num;
return true;
}
public void GiveCash(int num)
{
Cash += num;
Earned += num;
}
public bool TakeCash(int num)
{
if (Cash + Ore < num) return false;
Ore -= num;
Spent += num;
if (Ore < 0)
{
Cash += Ore;
Ore = 0;
}
return true;
}
const float displayCashFracPerFrame = .07f;
const int displayCashDeltaPerFrame = 37;
int nextSiloAdviceTime = 0;
public PlayerResources(Actor self, PlayerResourcesInfo info)
{
Owner = self.Owner;
Cash = info.InitialCash;
Ore = info.InitialOre;
AdviceInterval = info.AdviceInterval;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1177" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1178" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1179" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1180" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1181" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1182" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1183" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1184" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1185" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1186" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1187" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1188" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1189" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1190" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1191" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1192" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1193" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1194" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1195" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1196" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1197" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1198" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="21" endline="33">
<![CDATA[
[Desc("Defaults to the actor name.")]
public readonly string Image = null;
[Desc("custom palette name")]
public readonly string Palette = null;
[Desc("custom PlayerColorPalette
public readonly string PlayerPalette = "player";
[Desc("Change the sprite image size.")]
public readonly float Scale = 1f;
[Desc("Number of facings for gameplay calculations. -1 indiciates auto-detection from sequence")]
public readonly int QuantizedFacings = -1;
public readonly WAngle CameraPitch = WAngle.FromDegrees(40);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1199" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="125" endline="130">
<![CDATA[
public virtual void Tick(Actor self)
{
foreach (var a in anims.Values)
a.Animation.Tick();
foreach (var a in anims.Values)
a.Animation.Tick();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\WithMuzzleFlash.cs" startline="70" endline="73">
<![CDATA[
{
foreach (var a in muzzleFlashes.Values)
a.Animation.Tick();
foreach (var a in muzzleFlashes.Values)
a.Animation.Tick();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1200" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Render\RenderSimple.cs" startline="125" endline="130">
<![CDATA[
public virtual void Tick(Actor self)
{
foreach (var a in anims.Values)
a.Animation.Tick();
foreach (var a in anims.Values)
a.Animation.Tick();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerManager.cs" startline="83" endline="88">
<![CDATA[
public void Tick(Actor self)
{
foreach(var power in Powers.Values)
power.Tick();
foreach(var power in Powers.Values)
power.Tick();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1201" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1202" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1203" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1204" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1205" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1206" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1207" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1208" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1209" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1210" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1211" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1212" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1213" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1214" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1215" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1216" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1217" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1218" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1219" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1220" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1221" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1222" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1223" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1224" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1225" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1226" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1227" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1228" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1229" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1230" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1231" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1232" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1233" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1234" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1235" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1236" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1237" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1238" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\RevealsShroud.cs" startline="16" endline="27">
<![CDATA[
public object Create(ActorInitializer init) { return new RevealsShroud(this); }
}
public class RevealsShroud
{
RevealsShroudInfo Info;
[Sync] CPos previousLocation;
public RevealsShroud(RevealsShroudInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1239" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1240" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1241" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1242" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1243" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1244" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1245" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1246" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1247" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1248" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1249" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1250" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1251" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1252" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1253" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1254" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1255" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\Selectable.cs" startline="23" endline="36">
<![CDATA[
public object Create(ActorInitializer init) { return new Selectable(init.self, this); }
}
public class Selectable
{
public SelectableInfo Info;
Actor self;
public Selectable(Actor self, SelectableInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1256" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1257" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1258" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1259" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1260" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1261" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1262" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1263" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1264" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1265" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1266" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1267" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1268" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1269" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1270" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1271" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1272" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1273" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1274" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1275" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1276" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1277" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1278" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1279" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1280" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1281" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1282" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1283" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1284" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1285" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1286" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1287" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1288" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="19" endline="27">
<![CDATA[
[Desc("The name of the palette to base off.")]
public readonly string BasePalette = null;
[Desc("The prefix for the resulting player palettes")]
public readonly string BaseName = "player";
[Desc("Remap these indices to player colors.")]
public readonly int[] RemapIndex = {};
[Desc("Luminosity range to span.")]
public readonly float Ramp = 0.05f;
[Desc("Allow palette modifiers to change the palette.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1289" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1290" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1291" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1292" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1293" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1294" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1295" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1296" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1297" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1298" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1299" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1300" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1301" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1302" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1303" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1304" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\PlayerColorPalette.cs" startline="28" endline="42">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerColorPalette(init.self.Owner, this); }
}
public class PlayerColorPalette
{
readonly Player owner;
readonly PlayerColorPaletteInfo info;
public PlayerColorPalette(Player owner, PlayerColorPaletteInfo info)
{
this.owner = owner;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1305" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1306" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1307" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1308" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1309" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1310" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1311" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1312" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1313" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1314" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1315" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1316" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1317" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1318" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1319" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="17" endline="31">
<![CDATA[
public readonly string[] SpriteNames = { };
public readonly string Palette = "terrain";
public readonly int ResourceType = 1;
public readonly int ValuePerUnit = 0;
public readonly string Name = null;
public readonly string TerrainType = "Ore";
public readonly string[] AllowedTerrainTypes = { };
public readonly bool AllowUnderActors = false;
public Sprite[][] Sprites;
public PaletteReference PaletteRef;
public PipType PipColor = PipType.Yellow;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1320" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1321" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1322" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1323" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1324" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1325" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1326" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1327" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1328" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1329" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1330" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1331" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1332" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1333" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1334" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1335" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1336" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1337" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1338" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1339" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1340" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1341" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1342" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1343" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1344" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1345" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1346" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1347" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1348" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1349" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1350" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1351" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1352" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1353" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1354" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1355" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1356" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Traits\World\ResourceType.cs" startline="32" endline="42">
<![CDATA[
public object Create(ActorInitializer init) { return new ResourceType(this); }
}
public class ResourceType
{
public ResourceTypeInfo info;
public ResourceType(ResourceTypeInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1357" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="114" endline="129">
<![CDATA[
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget() { IsVisible = () => Visible; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\CheckboxWidget.cs" startline="20" endline="31">
<![CDATA[
public string CheckType = "checked";
public Func<string> GetCheckType;
public Func<bool> IsChecked = () => false;
public int BaseLine = 1;
public int CheckOffset = 2;
public bool HasPressedState = ChromeMetrics.Get<bool>("CheckboxPressedState");
public CheckboxWidget()
{
GetCheckType = () => CheckType;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1358" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="114" endline="129">
<![CDATA[
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget() { IsVisible = () => Visible; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="28">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1359" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="114" endline="129">
<![CDATA[
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget() { IsVisible = () => Visible; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="22" endline="39">
<![CDATA[
public int ScrollbarWidth = 24;
public float ScrollVelocity = 4f;
public int ItemSpacing = 2;
public int ButtonDepth = ChromeMetrics.Get<int>("ButtonDepth");
public string Background = "scrollpanel-bg";
public int ContentHeight = 0;
public ILayout Layout;
protected float ListOffset = 0;
protected bool UpPressed = false;
protected bool DownPressed = false;
protected bool ThumbPressed = false;
protected Rectangle upButtonRect;
protected Rectangle downButtonRect;
protected Rectangle backgroundRect;
protected Rectangle scrollbarRect;
protected Rectangle thumbRect;
public ScrollPanelWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1360" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1361" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="76" endline="113">
<![CDATA[
if (onCancel != null)
fullscreenMask.OnMouseDown += _ => onCancel();
Ui.Root.AddChild(fullscreenMask);
var oldBounds = panel.Bounds;
panel.Bounds = new Rectangle(RenderOrigin.X, RenderOrigin.Y + Bounds.Height, oldBounds.Width, oldBounds.Height);
Ui.Root.AddChild(panel);
}
public void ShowDropDown<T>(string panelTemplate, int height, IEnumerable<T> options, Func<T, ScrollItemWidget, ScrollItemWidget> setupItem)
{
var substitutions = new Dictionary<string,int>() {{ "DROPDOWN_WIDTH", Bounds.Width }};
var panel = (ScrollPanelWidget)Ui.LoadWidget(panelTemplate, null, new WidgetArgs()
{{ "substitutions", substitutions }});
var itemTemplate = panel.Get<ScrollItemWidget>("TEMPLATE");
panel.RemoveChildren();
foreach (var option in options)
{
var o = option;
var item = setupItem(o, itemTemplate);
var onClick = item.OnClick;
item.OnClick = () => { onClick(); RemovePanel(); };
panel.AddChild(item);
}
panel.Bounds.Height = Math.Min(height, panel.ContentHeight);
AttachPanel(panel);
}
}
public class MaskWidget
{
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1362" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1363" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1364" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1365" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1366" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1367" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1368" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1369" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1370" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1371" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1372" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1373" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1374" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1375" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1376" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1377" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1378" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="26">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1379" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1380" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1381" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1382" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1383" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1384" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\BackgroundWidget.cs" startline="17" endline="63">
<![CDATA[
public readonly string Background = "dialog";
public readonly bool ClickThrough = false;
public readonly bool Draggable = false;
public override void Draw()
{
WidgetUtils.DrawPanel(Background, RenderBounds);
}
public BackgroundWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1385" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="21" endline="60">
<![CDATA[
public Func<ButtonWidget, string> GetKey = _ => null;
public string Key
{
get { return GetKey(this); }
set { GetKey = _ => value; }
}
public string Text = "";
public bool Depressed = false;
public int VisualHeight = ChromeMetrics.Get<int>("ButtonDepth");
public string Font = ChromeMetrics.Get<string>("ButtonFont");
public bool Disabled = false;
public bool Highlighted = false;
public Func<string> GetText;
public Func<bool> IsDisabled;
public Func<bool> IsHighlighted;
public Action<MouseInput> OnMouseDown = _ => {};
public Action<MouseInput> OnMouseUp = _ => {};
public readonly string TooltipTemplate = "BUTTON_TOOLTIP";
public readonly string TooltipText;
public readonly string TooltipContainer;
Lazy<TooltipContainerWidget> tooltipContainer;
public Action OnClick = () => {};
public Action OnDoubleClick = () => {};
public Action<KeyInput> OnKeyPress = _ => {};
public ButtonWidget()
{
GetText = () => { return Text; };
OnMouseUp = _ => OnClick();
OnKeyPress = _ => OnClick();
IsDisabled = () => Disabled;
IsHighlighted = () => Highlighted;
tooltipContainer = Lazy.New(() =>
Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="32" endline="56">
<![CDATA[
public string ValueFormat = "{0}";
public string XAxisValueFormat = "{0}";
public string YAxisValueFormat = "{0}";
public int XAxisSize = 10;
public int YAxisSize = 10;
public string XAxisLabel = "";
public string YAxisLabel = "";
public bool DisplayFirstYAxisValue = false;
public string LabelFont;
public string AxisFont;
public LineGraphWidget()
{
GetValueFormat = () => ValueFormat;
GetXAxisValueFormat = () => XAxisValueFormat;
GetYAxisValueFormat = () => YAxisValueFormat;
GetXAxisSize = () => XAxisSize;
GetYAxisSize = () => YAxisSize;
GetXAxisLabel = () => XAxisLabel;
GetYAxisLabel = () => YAxisLabel;
GetDisplayFirstYAxisValue = () => DisplayFirstYAxisValue;
GetLabelFont = () => LabelFont;
GetAxisFont = () => AxisFont;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1386" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="85" endline="90">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Depressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="74" endline="79">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Keyboard = ScrollDirection.None;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1387" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="85" endline="90">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Depressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="102" endline="107">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Keyboard = ScrollDirection.None;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1388" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="85" endline="90">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Depressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="210" endline="215">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
leftPressed = rightPressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1389" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="153" endline="159">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "button", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="65" endline="70">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1390" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="153" endline="159">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "button", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="52" endline="58">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.SetTooltip(Template, new WidgetArgs() {{"orderManager", orderManager}, {"clientIndex", clientIndex}});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1391" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="153" endline="159">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "button", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "world", world }, { "wic", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1392" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="153" endline="159">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "button", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="91" endline="97">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer != null)
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1393" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="153" endline="159">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "button", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="140" endline="146">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1394" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="153" endline="159">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "button", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
Func<string> getText = () => TooltipFormat.F(GetUsed(), GetProvided());
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "getText", getText }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1395" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="160" endline="165">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="71" endline="76">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1396" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="160" endline="165">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="59" endline="65">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1397" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="160" endline="165">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1398" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="160" endline="165">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="98" endline="103">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer != null)
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1399" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="160" endline="165">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="147" endline="152">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1400" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="160" endline="165">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1401" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="78" endline="83">
<![CDATA[
TooltipTemplate = other.TooltipTemplate;
TooltipText = other.TooltipText;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() =>
Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="27" endline="37">
<![CDATA[
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1402" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="78" endline="83">
<![CDATA[
TooltipTemplate = other.TooltipTemplate;
TooltipText = other.TooltipText;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() =>
Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="27" endline="49">
<![CDATA[
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1403" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ButtonWidget.cs" startline="78" endline="83">
<![CDATA[
TooltipTemplate = other.TooltipTemplate;
TooltipText = other.TooltipText;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() =>
Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="33" endline="40">
<![CDATA[
}
protected ClientTooltipRegionWidget(ClientTooltipRegionWidget other)
{
Template = other.Template;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1404" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1405" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1406" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1407" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1408" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1409" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1410" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1411" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1412" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1413" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1414" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1415" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1416" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1417" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1418" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1419" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1420" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1421" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1422" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1423" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1424" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1425" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1426" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1427" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1428" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1429" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatDisplayWidget.cs" startline="19" endline="30">
<![CDATA[
public readonly int RemoveTime = 0;
public readonly bool UseContrast = false;
const int logLength = 9;
public string Notification = "";
public bool DrawBackground = true;
int ticksUntilRemove = 0;
internal List<ChatLine> recentLines = new List<ChatLine>();
public ChatDisplayWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1430" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1431" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1432" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1433" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1434" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1435" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1436" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1437" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1438" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1439" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1440" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1441" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ChatEntryWidget.cs" startline="21" endline="32">
<![CDATA[
string content = "";
bool composing = false;
bool teamChat = false;
public readonly bool UseContrast = false;
readonly OrderManager orderManager;
[ObjectCreator.UseCtor]
internal ChatEntryWidget(   OrderManager orderManager )
{
this.orderManager = orderManager;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1442" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\CheckboxWidget.cs" startline="20" endline="42">
<![CDATA[
public string CheckType = "checked";
public Func<string> GetCheckType;
public Func<bool> IsChecked = () => false;
public int BaseLine = 1;
public int CheckOffset = 2;
public bool HasPressedState = ChromeMetrics.Get<bool>("CheckboxPressedState");
public CheckboxWidget()
{
GetCheckType = () => CheckType;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ShpImageWidget.cs" startline="18" endline="48">
<![CDATA[
public string Image = "";
public int Frame = 0;
public string Palette = "chrome";
public Func<string> GetImage;
public Func<int> GetFrame;
public Func<string> GetPalette;
readonly WorldRenderer worldRenderer;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
protected ShpImageWidget(ShpImageWidget other)
{
Image = other.Image;
Frame = other.Frame;
Palette = other.Palette;
GetImage = other.GetImage;
GetFrame = other.GetFrame;
GetPalette = other.GetPalette;
worldRenderer = other.worldRenderer;
}
public override Widget Clone() { return new ShpImageWidget(this); }
Sprite sprite = null;
string cachedImage = null;
int cachedFrame = -1;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1443" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\CheckboxWidget.cs" startline="20" endline="42">
<![CDATA[
public string CheckType = "checked";
public Func<string> GetCheckType;
public Func<bool> IsChecked = () => false;
public int BaseLine = 1;
public int CheckOffset = 2;
public bool HasPressedState = ChromeMetrics.Get<bool>("CheckboxPressedState");
public CheckboxWidget()
{
GetCheckType = () => CheckType;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="41">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1444" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="76" endline="113">
<![CDATA[
if (onCancel != null)
fullscreenMask.OnMouseDown += _ => onCancel();
Ui.Root.AddChild(fullscreenMask);
var oldBounds = panel.Bounds;
panel.Bounds = new Rectangle(RenderOrigin.X, RenderOrigin.Y + Bounds.Height, oldBounds.Width, oldBounds.Height);
Ui.Root.AddChild(panel);
}
public void ShowDropDown<T>(string panelTemplate, int height, IEnumerable<T> options, Func<T, ScrollItemWidget, ScrollItemWidget> setupItem)
{
var substitutions = new Dictionary<string,int>() {{ "DROPDOWN_WIDTH", Bounds.Width }};
var panel = (ScrollPanelWidget)Ui.LoadWidget(panelTemplate, null, new WidgetArgs()
{{ "substitutions", substitutions }});
var itemTemplate = panel.Get<ScrollItemWidget>("TEMPLATE");
panel.RemoveChildren();
foreach (var option in options)
{
var o = option;
var item = setupItem(o, itemTemplate);
var onClick = item.OnClick;
item.OnClick = () => { onClick(); RemovePanel(); };
panel.AddChild(item);
}
panel.Bounds.Height = Math.Min(height, panel.ContentHeight);
AttachPanel(panel);
}
}
public class MaskWidget
{
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1445" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="76" endline="113">
<![CDATA[
if (onCancel != null)
fullscreenMask.OnMouseDown += _ => onCancel();
Ui.Root.AddChild(fullscreenMask);
var oldBounds = panel.Bounds;
panel.Bounds = new Rectangle(RenderOrigin.X, RenderOrigin.Y + Bounds.Height, oldBounds.Width, oldBounds.Height);
Ui.Root.AddChild(panel);
}
public void ShowDropDown<T>(string panelTemplate, int height, IEnumerable<T> options, Func<T, ScrollItemWidget, ScrollItemWidget> setupItem)
{
var substitutions = new Dictionary<string,int>() {{ "DROPDOWN_WIDTH", Bounds.Width }};
var panel = (ScrollPanelWidget)Ui.LoadWidget(panelTemplate, null, new WidgetArgs()
{{ "substitutions", substitutions }});
var itemTemplate = panel.Get<ScrollItemWidget>("TEMPLATE");
panel.RemoveChildren();
foreach (var option in options)
{
var o = option;
var item = setupItem(o, itemTemplate);
var onClick = item.OnClick;
item.OnClick = () => { onClick(); RemovePanel(); };
panel.AddChild(item);
}
panel.Bounds.Height = Math.Min(height, panel.ContentHeight);
AttachPanel(panel);
}
}
public class MaskWidget
{
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="25" endline="400">
<![CDATA[
public static Widget SelectedWidget;
public static Widget MouseOverWidget;
public static void CloseWindow()
{
if (WindowList.Count > 0)
Root.RemoveChild(WindowList.Pop());
if (WindowList.Count > 0)
Root.AddChild(WindowList.Peek());
}
public static Widget OpenWindow(string id)
{
return OpenWindow(id, new WidgetArgs());
}
public static Widget OpenWindow(string id, WidgetArgs args)
{
var window = Game.modData.WidgetLoader.LoadWidget(args, Root, id);
if (WindowList.Count > 0)
Root.RemoveChild(WindowList.Peek());
WindowList.Push(window);
return window;
}
public static Widget LoadWidget(string id, Widget parent, WidgetArgs args)
{
return Game.modData.WidgetLoader.LoadWidget(args, parent, id);
}
public static void Tick() { Root.TickOuter(); }
public static void Draw() { Root.DrawOuter(); }
public static bool HandleInput(MouseInput mi)
{
var wasMouseOver = MouseOverWidget;
if (mi.Event == MouseInputEvent.Move)
MouseOverWidget = null;
bool handled = false;
if (SelectedWidget != null && SelectedWidget.HandleMouseInputOuter(mi))
handled = true;
if (!handled && Root.HandleMouseInputOuter(mi))
handled = true;
if (mi.Event == MouseInputEvent.Move)
{
Viewport.LastMousePos = mi.Location;
Viewport.TicksSinceLastMove = 0;
}
if (wasMouseOver != MouseOverWidget)
{
if (wasMouseOver != null)
wasMouseOver.MouseExited();
if (MouseOverWidget != null)
MouseOverWidget.MouseEntered();
}
return handled;
}
public static bool HandleKeyPress(KeyInput e)
{
if (SelectedWidget != null)
return SelectedWidget.HandleKeyPressOuter(e);
if (Root.HandleKeyPressOuter(e))
return true;
return false;
}
public static void ResetAll()
{
Root.RemoveChildren();
while (WindowList.Count > 0)
CloseWindow();
}
}
public abstract class Widget
{
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget(Widget widget)
{
Id = widget.Id;
X = widget.X;
Y = widget.Y;
Width = widget.Width;
Height = widget.Height;
Logic = widget.Logic;
Visible = widget.Visible;
Bounds = widget.Bounds;
Parent = widget.Parent;
IsVisible = widget.IsVisible;
IgnoreChildMouseOver = widget.IgnoreChildMouseOver;
foreach (var child in widget.Children)
AddChild(child.Clone());
}
public virtual Widget Clone()
{
throw new InvalidOperationException("Widget type `{0}` is not cloneable.".F(GetType().Name));
}
public virtual int2 RenderOrigin
{
get
{
var offset = (Parent == null) ? int2.Zero
return new int2(Bounds.X, Bounds.Y) + offset;
}
}
public virtual int2 ChildOrigin { get { return RenderOrigin; } }
public virtual Rectangle RenderBounds
{
get
{
var ro = RenderOrigin;
return new Rectangle(ro.X, ro.Y, Bounds.Width, Bounds.Height);
}
}
public virtual void Initialize(WidgetArgs args)
{
var parentBounds = (Parent == null)
? new Rectangle(0, 0, Game.viewport.Width, Game.viewport.Height)
var substitutions = args.ContainsKey("substitutions") ?
new Dictionary<string, int>((Dictionary<string, int>)args["substitutions"])
new Dictionary<string, int>();
substitutions.Add("WINDOW_RIGHT", Game.viewport.Width);
substitutions.Add("WINDOW_BOTTOM", Game.viewport.Height);
substitutions.Add("PARENT_RIGHT", parentBounds.Width);
substitutions.Add("PARENT_LEFT", parentBounds.Left);
substitutions.Add("PARENT_TOP", parentBounds.Top);
substitutions.Add("PARENT_BOTTOM", parentBounds.Height);
int width = Evaluator.Evaluate(Width, substitutions);
int height = Evaluator.Evaluate(Height, substitutions);
substitutions.Add("WIDTH", width);
substitutions.Add("HEIGHT", height);
Bounds = new Rectangle(Evaluator.Evaluate(X, substitutions),
Evaluator.Evaluate(Y, substitutions),
width,
height);
}
public void PostInit(WidgetArgs args)
{
if (Logic == null)
return;
args["widget"] = this;
LogicObject = Game.modData.ObjectCreator.CreateObject<object>(Logic, args);
args.Remove("widget");
}
public virtual Rectangle EventBounds { get { return RenderBounds; } }
public virtual Rectangle GetEventBounds()
{
return Children
.Where(c => c.IsVisible())
.Select(c => c.GetEventBounds())
.Aggregate(EventBounds, Rectangle.Union);
}
public bool Focused { get { return Ui.SelectedWidget == this; } }
public virtual bool TakeFocus(MouseInput mi)
{
if (Focused)
return true;
if (Ui.SelectedWidget != null && !Ui.SelectedWidget.LoseFocus(mi))
return false;
Ui.SelectedWidget = this;
return true;
}
public virtual bool LoseFocus(MouseInput mi)
{
return LoseFocus();
}
public virtual bool LoseFocus()
{
if (Ui.SelectedWidget == this)
Ui.SelectedWidget = null;
return true;
}
public virtual string GetCursor(int2 pos) { return "default"; }
public string GetCursorOuter(int2 pos)
{
if (!(IsVisible() && GetEventBounds().Contains(pos)))
return null;
foreach (var child in Children.OfType<Widget>().Reverse())
{
var cc = child.GetCursorOuter(pos);
if (cc != null)
return cc;
}
return EventBounds.Contains(pos) ? GetCursor(pos)
}
public virtual void MouseEntered() {}
public virtual void MouseExited() {}
public virtual bool HandleMouseInput(MouseInput mi) { return false; }
public bool HandleMouseInputOuter(MouseInput mi)
{
if (!(Focused || (IsVisible() && GetEventBounds().Contains(mi.Location))))
return false;
var oldMouseOver = Ui.MouseOverWidget;
foreach (var child in Children.OfType<Widget>().Reverse())
if (child.HandleMouseInputOuter(mi))
return true;
if (IgnoreChildMouseOver)
Ui.MouseOverWidget = oldMouseOver;
if (mi.Event == MouseInputEvent.Move && Ui.MouseOverWidget == null && !IgnoreMouseOver)
Ui.MouseOverWidget = this;
return HandleMouseInput(mi);
}
public virtual bool HandleKeyPress(KeyInput e) { return false; }
public virtual bool HandleKeyPressOuter(KeyInput e)
{
if (!IsVisible())
return false;
foreach (var child in Children.OfType<Widget>().Reverse())
if (child.HandleKeyPressOuter(e))
return true;
var handled = HandleKeyPress(e);
return handled;
}
public virtual void Draw() {}
public virtual void DrawOuter()
{
if (IsVisible())
{
Draw();
foreach (var child in Children)
child.DrawOuter();
}
}
public virtual void Tick() {}
public virtual void TickOuter()
{
if (IsVisible())
{
Tick();
foreach (var child in Children)
child.TickOuter();
}
}
public virtual void AddChild(Widget child)
{
child.Parent = this;
Children.Add(child);
}
public virtual void RemoveChild(Widget child)
{
Children.Remove(child);
child.Removed();
}
public virtual void RemoveChildren()
{
while (Children.Count > 0)
RemoveChild(Children[Children.Count-1]);
}
public virtual void Removed()
{
foreach (var c in Children.OfType<Widget>().Reverse())
c.Removed();
}
public Widget GetOrNull(string id)
{
if (this.Id == id)
return this;
foreach (var child in Children)
{
var w = child.GetOrNull(id);
if (w != null)
return w;
}
return null;
}
public T GetOrNull<T>(string id) where T
{
return (T) GetOrNull(id);
}
public T Get<T>(string id) where T
{
var t = GetOrNull<T>(id);
if (t == null)
throw new InvalidOperationException(
"Widget {0} has no child {1} of type {2}".F(
Id, id, typeof(T).Name));
return t;
}
public Widget Get(string id) { return Get<Widget>(id); }
}
public class ContainerWidget
{
public ContainerWidget()
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1446" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1447" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1448" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1449" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1450" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1451" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\DropDownButtonWidget.cs" startline="112" endline="118">
<![CDATA[
public event Action<MouseInput> OnMouseDown = _ => {};
public MaskWidget()
public MaskWidget(MaskWidget other)
{
OnMouseDown = other.OnMouseDown;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1452" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="28">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\TooltipContainerWidget.cs" startline="24" endline="32">
<![CDATA[
public int2 CursorOffset = new int2(0, 20);
public Action BeforeRender = Nothing;
public int TooltipDelay = 5;
Widget tooltip;
public TooltipContainerWidget()
{
IsVisible = () => Viewport.TicksSinceLastMove >= TooltipDelay;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1453" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1454" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\CanPowerDown.cs" startline="23" endline="31">
<![CDATA[
[Sync] bool disabled = false;
int normalPower = 0;
PowerManager PowerManager;
public CanPowerDown(ActorInitializer init)
{
PowerManager = init.self.Owner.PlayerActor.Trait<PowerManager>();
normalPower = init.self.Info.Traits.Get<BuildingInfo>().Power;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1455" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1456" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ImageWidget.cs" startline="18" endline="37">
<![CDATA[
public string ImageCollection = "";
public string ImageName = "";
public Func<string> GetImageName;
public Func<string> GetImageCollection;
public ImageWidget()
{
GetImageName = () => ImageName;
GetImageCollection = () => ImageCollection;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1457" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LabelWidget.cs" startline="22" endline="40">
<![CDATA[
public string Text = null;
public TextAlign Align = TextAlign.Left;
public TextVAlign VAlign = TextVAlign.Middle;
public string Font = "Regular";
public Color Color = Color.White;
public bool Contrast = false;
public Color ContrastColor = Color.Black;
public bool WordWrap = false;
public Func<string> GetText;
public Func<Color> GetColor;
public Func<Color> GetContrastColor;
public LabelWidget()
{
GetText = () => Text;
GetColor = () => Color;
GetContrastColor = () => ContrastColor;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs" startline="20" endline="32">
<![CDATA[
public Func<bool> Enabled = () => true;
public Func<bool> Pressed = () => false;
public string Image, Description, LongDesc = "";
public Func<string> GetImage, GetDescription, GetLongDesc;
public OrderButtonWidget()
{
GetImage = () => Enabled() ? Pressed() ? "pressed"
GetDescription = () => Key != null ? "{0} ({1})".F(Description, Key.ToUpper())
GetLongDesc = () => LongDesc;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1458" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="105" endline="185">
<![CDATA[
var scale = 200 / Math.Max(5000, (float)Math.Ceiling(maxValue / 1000) * 1000);
var xStep = width / xAxisSize;
var yStep = height / yAxisSize;
var pointCount = GetSeries().First().Points.Count();
var pointStart = Math.Max(0, pointCount - xAxisSize);
var pointEnd = Math.Max(pointCount, xAxisSize);
var keyOffset = 0;
foreach (var series in GetSeries())
{
var key = series.Key;
var color = series.Color;
var points = series.Points;
if (points.Any())
{
points = points.Reverse().Take(xAxisSize).Reverse();
var scaledData = points.Select(d => d * scale);
var x = 0;
scaledData.Aggregate((a, b) =>
{
Game.Renderer.LineRenderer.DrawLine(
origin + new float2(x, -a),
origin + new float2(x + xStep, -b),
color, color);
x += xStep;
return b;
});
var value = points.Last();
if (value != 0)
{
tiny.DrawText(GetValueFormat().F(value), origin + new float2(x, -value * scale - 2), color);
}
}
tiny.DrawText(key, new float2(rect.Left, rect.Top) + new float2(5, 10 * keyOffset + 3), color);
keyOffset++;
}
for (int n = pointStart, x = 0; n <= pointEnd; n++, x += xStep)
{
Game.Renderer.LineRenderer.DrawLine(origin + new float2(x, 0), origin + new float2(x, -5), Color.White, Color.White);
tiny.DrawText(GetXAxisValueFormat().F(n), origin + new float2(x, 2), Color.White);
}
bold.DrawText(GetXAxisLabel(), origin + new float2(width / 2, 20), Color.White);
for (var y = (GetDisplayFirstYAxisValue() ? 0
{
var yValue = y / scale;
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width - 5, -y), origin + new float2(width, -y), Color.White, Color.White);
tiny.DrawText(GetYAxisValueFormat().F(yValue), origin + new float2(width + 2, -y), Color.White);
}
bold.DrawText(GetYAxisLabel(), origin + new float2(width + 40, -(height / 2)), Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(width, 0), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(0, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width, 0), origin + new float2(width, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(0, -height), origin + new float2(width, -height), Color.White, Color.White);
}
public override Widget Clone()
{
return new LineGraphWidget(this);
}
}
public class LineGraphSeries
{
public string Key;
public Color Color;
public IEnumerable<float> Points;
public LineGraphSeries(string key, Color color, IEnumerable<float> points)
{
Key = key;
Color = color;
Points = points;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="23" endline="28">
<![CDATA[
public Teleport(Actor chronosphere, CPos destination, bool killCargo)
{
this.chronosphere = chronosphere;
this.destination = destination;
this.killCargo = killCargo;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1459" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="105" endline="185">
<![CDATA[
var scale = 200 / Math.Max(5000, (float)Math.Ceiling(maxValue / 1000) * 1000);
var xStep = width / xAxisSize;
var yStep = height / yAxisSize;
var pointCount = GetSeries().First().Points.Count();
var pointStart = Math.Max(0, pointCount - xAxisSize);
var pointEnd = Math.Max(pointCount, xAxisSize);
var keyOffset = 0;
foreach (var series in GetSeries())
{
var key = series.Key;
var color = series.Color;
var points = series.Points;
if (points.Any())
{
points = points.Reverse().Take(xAxisSize).Reverse();
var scaledData = points.Select(d => d * scale);
var x = 0;
scaledData.Aggregate((a, b) =>
{
Game.Renderer.LineRenderer.DrawLine(
origin + new float2(x, -a),
origin + new float2(x + xStep, -b),
color, color);
x += xStep;
return b;
});
var value = points.Last();
if (value != 0)
{
tiny.DrawText(GetValueFormat().F(value), origin + new float2(x, -value * scale - 2), color);
}
}
tiny.DrawText(key, new float2(rect.Left, rect.Top) + new float2(5, 10 * keyOffset + 3), color);
keyOffset++;
}
for (int n = pointStart, x = 0; n <= pointEnd; n++, x += xStep)
{
Game.Renderer.LineRenderer.DrawLine(origin + new float2(x, 0), origin + new float2(x, -5), Color.White, Color.White);
tiny.DrawText(GetXAxisValueFormat().F(n), origin + new float2(x, 2), Color.White);
}
bold.DrawText(GetXAxisLabel(), origin + new float2(width / 2, 20), Color.White);
for (var y = (GetDisplayFirstYAxisValue() ? 0
{
var yValue = y / scale;
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width - 5, -y), origin + new float2(width, -y), Color.White, Color.White);
tiny.DrawText(GetYAxisValueFormat().F(yValue), origin + new float2(width + 2, -y), Color.White);
}
bold.DrawText(GetYAxisLabel(), origin + new float2(width + 40, -(height / 2)), Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(width, 0), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(0, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width, 0), origin + new float2(width, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(0, -height), origin + new float2(width, -height), Color.White, Color.White);
}
public override Widget Clone()
{
return new LineGraphWidget(this);
}
}
public class LineGraphSeries
{
public string Key;
public Color Color;
public IEnumerable<float> Points;
public LineGraphSeries(string key, Color color, IEnumerable<float> points)
{
Key = key;
Color = color;
Points = points;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="23" endline="28">
<![CDATA[
public Objective(ObjectiveType type, string text, ObjectiveStatus status)
{
Type = type;
Text = text;
Status = status;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1460" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\LineGraphWidget.cs" startline="105" endline="185">
<![CDATA[
var scale = 200 / Math.Max(5000, (float)Math.Ceiling(maxValue / 1000) * 1000);
var xStep = width / xAxisSize;
var yStep = height / yAxisSize;
var pointCount = GetSeries().First().Points.Count();
var pointStart = Math.Max(0, pointCount - xAxisSize);
var pointEnd = Math.Max(pointCount, xAxisSize);
var keyOffset = 0;
foreach (var series in GetSeries())
{
var key = series.Key;
var color = series.Color;
var points = series.Points;
if (points.Any())
{
points = points.Reverse().Take(xAxisSize).Reverse();
var scaledData = points.Select(d => d * scale);
var x = 0;
scaledData.Aggregate((a, b) =>
{
Game.Renderer.LineRenderer.DrawLine(
origin + new float2(x, -a),
origin + new float2(x + xStep, -b),
color, color);
x += xStep;
return b;
});
var value = points.Last();
if (value != 0)
{
tiny.DrawText(GetValueFormat().F(value), origin + new float2(x, -value * scale - 2), color);
}
}
tiny.DrawText(key, new float2(rect.Left, rect.Top) + new float2(5, 10 * keyOffset + 3), color);
keyOffset++;
}
for (int n = pointStart, x = 0; n <= pointEnd; n++, x += xStep)
{
Game.Renderer.LineRenderer.DrawLine(origin + new float2(x, 0), origin + new float2(x, -5), Color.White, Color.White);
tiny.DrawText(GetXAxisValueFormat().F(n), origin + new float2(x, 2), Color.White);
}
bold.DrawText(GetXAxisLabel(), origin + new float2(width / 2, 20), Color.White);
for (var y = (GetDisplayFirstYAxisValue() ? 0
{
var yValue = y / scale;
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width - 5, -y), origin + new float2(width, -y), Color.White, Color.White);
tiny.DrawText(GetYAxisValueFormat().F(yValue), origin + new float2(width + 2, -y), Color.White);
}
bold.DrawText(GetYAxisLabel(), origin + new float2(width + 40, -(height / 2)), Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(width, 0), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin, origin + new float2(0, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(width, 0), origin + new float2(width, -height), Color.White, Color.White);
Game.Renderer.LineRenderer.DrawLine(origin + new float2(0, -height), origin + new float2(width, -height), Color.White, Color.White);
}
public override Widget Clone()
{
return new LineGraphWidget(this);
}
}
public class LineGraphSeries
{
public string Key;
public Color Color;
public IEnumerable<float> Points;
public LineGraphSeries(string key, Color color, IEnumerable<float> points)
{
Key = key;
Color = color;
Points = points;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="32" endline="41">
<![CDATA[
public ProximityCapturableInfo Info;
public Actor Self;
public ProximityCapturable(Actor self, ProximityCapturableInfo info)
{
Info = info;
Self = self;
OriginalOwner = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1461" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="24" endline="50">
<![CDATA[
public Func<Map> Map = () => null;
public Func<Dictionary<int2, Session.Client>> SpawnClients = () => new Dictionary<int2, Session.Client>();
public Action<MouseInput> OnMouseDown = _ => {};
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
}
protected MapPreviewWidget(MapPreviewWidget other)
{
lastMap = other.lastMap;
Map = other.Map;
SpawnClients = other.SpawnClients;
ShowSpawnPoints = other.ShowSpawnPoints;
TooltipTemplate = other.TooltipTemplate;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
}
public override Widget Clone() { return new MapPreviewWidget(this); }
public override bool HandleMouseInput(MouseInput mi)
{
if (IgnoreMouseInput)
return base.HandleMouseInput(mi);
if (mi.Event != MouseInputEvent.Down)
return false;
OnMouseDown(mi);
return true;
}
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
public int2 ConvertToPreview(int2 point)
{
var map = Map();
return new int2(MapRect.X + (int)(PreviewScale*(point.X - map.Bounds.Left)) , MapRect.Y + (int)(PreviewScale*(point.Y - map.Bounds.Top)));
}
Sheet mapChooserSheet;
Sprite mapChooserSprite;
Map lastMap;
Rectangle MapRect;
float PreviewScale = 0;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="41">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1462" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="65" endline="70">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="52" endline="58">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.SetTooltip(Template, new WidgetArgs() {{"orderManager", orderManager}, {"clientIndex", clientIndex}});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1463" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="65" endline="70">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "world", world }, { "wic", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1464" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="65" endline="70">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="91" endline="97">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer != null)
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1465" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="65" endline="70">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="140" endline="146">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1466" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="65" endline="70">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "preview", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
Func<string> getText = () => TooltipFormat.F(GetUsed(), GetProvided());
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "getText", getText }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1467" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="71" endline="76">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="59" endline="65">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1468" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="71" endline="76">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1469" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="71" endline="76">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="98" endline="103">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer != null)
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1470" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="71" endline="76">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="147" endline="152">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1471" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="71" endline="76">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1472" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="27" endline="37">
<![CDATA[
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="27" endline="49">
<![CDATA[
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1473" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="27" endline="37">
<![CDATA[
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="33" endline="40">
<![CDATA[
}
protected ClientTooltipRegionWidget(ClientTooltipRegionWidget other)
{
Template = other.Template;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1474" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\MapPreviewWidget.cs" startline="27" endline="49">
<![CDATA[
public bool IgnoreMouseInput = false;
public bool ShowSpawnPoints = true;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "SPAWN_TOOLTIP";
Lazy<TooltipContainerWidget> tooltipContainer;
public int TooltipSpawnIndex = -1;
public MapPreviewWidget()
{
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="33" endline="40">
<![CDATA[
}
protected ClientTooltipRegionWidget(ClientTooltipRegionWidget other)
{
Template = other.Template;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1475" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1476" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1477" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1478" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1479" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1480" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1481" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1482" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1483" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1484" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1485" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1486" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1487" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1488" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1489" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1490" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1491" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1492" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1493" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1494" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1495" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1496" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1497" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1498" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1499" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1500" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1501" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="25">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1502" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1503" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1504" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1505" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1506" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1507" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1508" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1509" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1510" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ProgressBarWidget.cs" startline="18" endline="30">
<![CDATA[
public int Percentage = 0;
public bool Indeterminate = false;
float offset = 0f;
float tickStep = 0.04f;
public ProgressBarWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1511" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollItemWidget.cs" startline="36" endline="25">
<![CDATA[
public Func<bool> IsSelected = () => false;
public ScrollItemWidget()
{
IsVisible = () => false;
VisualHeight = 0;
IgnoreChildMouseOver = true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1512" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollItemWidget.cs" startline="58" endline="64">
<![CDATA[
public static ScrollItemWidget Setup(ScrollItemWidget template, Func<bool> isSelected, Action onClick, Action onDoubleClick)
{
var w = Setup(template, isSelected, onClick);
w.OnDoubleClick = onDoubleClick;
return w;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollItemWidget.cs" startline="65" endline="71">
<![CDATA[
public static ScrollItemWidget Setup(string key, ScrollItemWidget template, Func<bool> isSelected, Action onClick)
{
var w = Setup(template, isSelected, onClick);
w.ItemKey = key;
return w;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1513" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="22" endline="39">
<![CDATA[
public int ScrollbarWidth = 24;
public float ScrollVelocity = 4f;
public int ItemSpacing = 2;
public int ButtonDepth = ChromeMetrics.Get<int>("ButtonDepth");
public string Background = "scrollpanel-bg";
public int ContentHeight = 0;
public ILayout Layout;
protected float ListOffset = 0;
protected bool UpPressed = false;
protected bool DownPressed = false;
protected bool ThumbPressed = false;
protected Rectangle upButtonRect;
protected Rectangle downButtonRect;
protected Rectangle backgroundRect;
protected Rectangle scrollbarRect;
protected Rectangle thumbRect;
public ScrollPanelWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1514" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="130" endline="135">
<![CDATA[
void Scroll(int direction)
{
ListOffset += direction*ScrollVelocity;
ListOffset = Math.Min(0,Math.Max(Bounds.Height - ContentHeight, ListOffset));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="172" endline="177">
<![CDATA[
void Scroll(int direction)
{
ListOffset += direction*ScrollVelocity;
ListOffset = Math.Min(0,Math.Max(Bounds.Width - rightButtonRect.Width - leftButtonRect.Width - ContentWidth, ListOffset));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1515" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="165" endline="170">
<![CDATA[
public override void Tick ()
{
if (UpPressed) Scroll(1);
if (DownPressed) Scroll(-1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="204" endline="209">
<![CDATA[
public override void Tick()
{
if (leftPressed) Scroll(1);
if (rightPressed) Scroll(-1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1516" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ScrollPanelWidget.cs" startline="171" endline="176">
<![CDATA[
public override bool LoseFocus (MouseInput mi)
{
UpPressed = DownPressed = ThumbPressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="210" endline="215">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
leftPressed = rightPressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1517" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ShpImageWidget.cs" startline="18" endline="48">
<![CDATA[
public string Image = "";
public int Frame = 0;
public string Palette = "chrome";
public Func<string> GetImage;
public Func<int> GetFrame;
public Func<string> GetPalette;
readonly WorldRenderer worldRenderer;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
protected ShpImageWidget(ShpImageWidget other)
{
Image = other.Image;
Frame = other.Frame;
Palette = other.Palette;
GetImage = other.GetImage;
GetFrame = other.GetFrame;
GetPalette = other.GetPalette;
worldRenderer = other.worldRenderer;
}
public override Widget Clone() { return new ShpImageWidget(this); }
Sprite sprite = null;
string cachedImage = null;
int cachedFrame = -1;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="41">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1518" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ShpImageWidget.cs" startline="18" endline="48">
<![CDATA[
public string Image = "";
public int Frame = 0;
public string Palette = "chrome";
public Func<string> GetImage;
public Func<int> GetFrame;
public Func<string> GetPalette;
readonly WorldRenderer worldRenderer;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
protected ShpImageWidget(ShpImageWidget other)
{
Image = other.Image;
Frame = other.Frame;
Palette = other.Palette;
GetImage = other.GetImage;
GetFrame = other.GetFrame;
GetPalette = other.GetPalette;
worldRenderer = other.worldRenderer;
}
public override Widget Clone() { return new ShpImageWidget(this); }
Sprite sprite = null;
string cachedImage = null;
int cachedFrame = -1;
[ObjectCreator.UseCtor]
public ShpImageWidget(  WorldRenderer worldRenderer)
{
GetImage = () => { return Image; };
GetFrame = () => { return Frame; };
GetPalette = () => { return Palette; };
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorMixerWidget.cs" startline="24" endline="46">
<![CDATA[
public float[] SRange = {0.2f, 1.0f};
public float[] VRange = {0.2f, 1.0f};
public event Action OnChange = () => {};
float H, S, V;
Bitmap frontBitmap, swapBitmap, backBitmap;
Sprite mixerSprite;
bool isMoving;
bool updateFront, updateBack;
object syncWorker = new object();
Thread workerThread;
bool workerAlive;
public ColorMixerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1519" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\SliderWidget.cs" startline="19" endline="30">
<![CDATA[
public Func<bool> IsDisabled = () => false;
public event Action<float> OnChange = _ => {};
public int Ticks = 0;
public int TrackHeight = 5;
public float MinimumValue = 0;
public float MaximumValue = 1;
public float Value = 0;
protected bool isMoving = false;
public SliderWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs" startline="20" endline="32">
<![CDATA[
public Func<bool> Enabled = () => true;
public Func<bool> Pressed = () => false;
public string Image, Description, LongDesc = "";
public Func<string> GetImage, GetDescription, GetLongDesc;
public OrderButtonWidget()
{
GetImage = () => Enabled() ? Pressed() ? "pressed"
GetDescription = () => Key != null ? "{0} ({1})".F(Description, Key.ToUpper())
GetLongDesc = () => LongDesc;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1520" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1521" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1522" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1523" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1524" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1525" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1526" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1527" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1528" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1529" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1530" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="26">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1531" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1532" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1533" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1534" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1535" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1536" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1537" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1538" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1539" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="20" endline="28">
<![CDATA[
public int EdgeScrollThreshold = 15;
public int EdgeCornerScrollThreshold = 35;
ScrollDirection Keyboard;
ScrollDirection Edge;
public ViewportScrollControllerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1540" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="29" endline="44">
<![CDATA[
public override bool HandleMouseInput(MouseInput mi)
{
var scrolltype = Game.Settings.Game.MouseScroll;
if (scrolltype == MouseScrollType.Disabled)
return false;
if (mi.Event == MouseInputEvent.Move &&
(mi.Button == MouseButton.Middle || mi.Button == (MouseButton.Left | MouseButton.Right)))
{
var d = scrolltype == MouseScrollType.Inverted ? -1
Game.viewport.Scroll((Viewport.LastMousePos - mi.Location) * d);
return true;
}
return false;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="83" endline="95">
<![CDATA[
public override bool HandleMouseInput(MouseInput mi)
{
var scrolltype = Game.Settings.Game.MouseScroll;
if (scrolltype != OpenRA.GameRules.MouseScrollType.Disabled && mi.Event == MouseInputEvent.Move &&
(mi.Button == MouseButton.Middle || mi.Button == (MouseButton.Left | MouseButton.Right)))
{
var d = scrolltype == OpenRA.GameRules.MouseScrollType.Inverted ? -1
Game.viewport.Scroll((Viewport.LastMousePos - mi.Location) * d);
}
return base.HandleMouseInput(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1541" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="74" endline="79">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Keyboard = ScrollDirection.None;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="102" endline="107">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Keyboard = ScrollDirection.None;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1542" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="74" endline="79">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Keyboard = ScrollDirection.None;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="210" endline="215">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
leftPressed = rightPressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1543" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ViewportScrollControllerWidget.cs" startline="80" endline="91">
<![CDATA[
public override bool HandleKeyPress(KeyInput e)
{
switch (e.KeyName)
{
case "up"
case "down"
case "left"
case "right"
}
return false;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="108" endline="119">
<![CDATA[
public override bool HandleKeyPress(KeyInput e)
{
switch (e.KeyName)
{
case "up"
case "down"
case "left"
case "right"
}
return base.HandleKeyPress(e);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1544" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1545" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1546" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1547" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1548" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1549" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1550" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1551" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1552" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1553" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1554" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\VqaPlayerWidget.cs" startline="21" endline="39">
<![CDATA[
VqaReader video = null;
string cachedVideo;
float invLength;
float2 videoOrigin, videoSize;
uint[,] overlay;
bool stopped;
bool paused;
Action OnComplete;
public bool Paused { get { return paused; } }
readonly World world;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
public bool DrawOverlay = true;
[ObjectCreator.UseCtor]
public VqaPlayerWidget(   World world )
{
this.world = world;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1555" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="25" endline="400">
<![CDATA[
public static Widget SelectedWidget;
public static Widget MouseOverWidget;
public static void CloseWindow()
{
if (WindowList.Count > 0)
Root.RemoveChild(WindowList.Pop());
if (WindowList.Count > 0)
Root.AddChild(WindowList.Peek());
}
public static Widget OpenWindow(string id)
{
return OpenWindow(id, new WidgetArgs());
}
public static Widget OpenWindow(string id, WidgetArgs args)
{
var window = Game.modData.WidgetLoader.LoadWidget(args, Root, id);
if (WindowList.Count > 0)
Root.RemoveChild(WindowList.Peek());
WindowList.Push(window);
return window;
}
public static Widget LoadWidget(string id, Widget parent, WidgetArgs args)
{
return Game.modData.WidgetLoader.LoadWidget(args, parent, id);
}
public static void Tick() { Root.TickOuter(); }
public static void Draw() { Root.DrawOuter(); }
public static bool HandleInput(MouseInput mi)
{
var wasMouseOver = MouseOverWidget;
if (mi.Event == MouseInputEvent.Move)
MouseOverWidget = null;
bool handled = false;
if (SelectedWidget != null && SelectedWidget.HandleMouseInputOuter(mi))
handled = true;
if (!handled && Root.HandleMouseInputOuter(mi))
handled = true;
if (mi.Event == MouseInputEvent.Move)
{
Viewport.LastMousePos = mi.Location;
Viewport.TicksSinceLastMove = 0;
}
if (wasMouseOver != MouseOverWidget)
{
if (wasMouseOver != null)
wasMouseOver.MouseExited();
if (MouseOverWidget != null)
MouseOverWidget.MouseEntered();
}
return handled;
}
public static bool HandleKeyPress(KeyInput e)
{
if (SelectedWidget != null)
return SelectedWidget.HandleKeyPressOuter(e);
if (Root.HandleKeyPressOuter(e))
return true;
return false;
}
public static void ResetAll()
{
Root.RemoveChildren();
while (WindowList.Count > 0)
CloseWindow();
}
}
public abstract class Widget
{
public string Id = null;
public string X = "0";
public string Y = "0";
public string Width = "0";
public string Height = "0";
public string Logic = null;
public object LogicObject { get; private set; }
public bool Visible = true;
public bool IgnoreMouseOver;
public bool IgnoreChildMouseOver;
public Rectangle Bounds;
public Widget Parent = null;
public Func<bool> IsVisible;
public Widget() { IsVisible = () => Visible; }
public readonly List<Widget> Children = new List<Widget>();
public Widget(Widget widget)
{
Id = widget.Id;
X = widget.X;
Y = widget.Y;
Width = widget.Width;
Height = widget.Height;
Logic = widget.Logic;
Visible = widget.Visible;
Bounds = widget.Bounds;
Parent = widget.Parent;
IsVisible = widget.IsVisible;
IgnoreChildMouseOver = widget.IgnoreChildMouseOver;
foreach (var child in widget.Children)
AddChild(child.Clone());
}
public virtual Widget Clone()
{
throw new InvalidOperationException("Widget type `{0}` is not cloneable.".F(GetType().Name));
}
public virtual int2 RenderOrigin
{
get
{
var offset = (Parent == null) ? int2.Zero
return new int2(Bounds.X, Bounds.Y) + offset;
}
}
public virtual int2 ChildOrigin { get { return RenderOrigin; } }
public virtual Rectangle RenderBounds
{
get
{
var ro = RenderOrigin;
return new Rectangle(ro.X, ro.Y, Bounds.Width, Bounds.Height);
}
}
public virtual void Initialize(WidgetArgs args)
{
var parentBounds = (Parent == null)
? new Rectangle(0, 0, Game.viewport.Width, Game.viewport.Height)
var substitutions = args.ContainsKey("substitutions") ?
new Dictionary<string, int>((Dictionary<string, int>)args["substitutions"])
new Dictionary<string, int>();
substitutions.Add("WINDOW_RIGHT", Game.viewport.Width);
substitutions.Add("WINDOW_BOTTOM", Game.viewport.Height);
substitutions.Add("PARENT_RIGHT", parentBounds.Width);
substitutions.Add("PARENT_LEFT", parentBounds.Left);
substitutions.Add("PARENT_TOP", parentBounds.Top);
substitutions.Add("PARENT_BOTTOM", parentBounds.Height);
int width = Evaluator.Evaluate(Width, substitutions);
int height = Evaluator.Evaluate(Height, substitutions);
substitutions.Add("WIDTH", width);
substitutions.Add("HEIGHT", height);
Bounds = new Rectangle(Evaluator.Evaluate(X, substitutions),
Evaluator.Evaluate(Y, substitutions),
width,
height);
}
public void PostInit(WidgetArgs args)
{
if (Logic == null)
return;
args["widget"] = this;
LogicObject = Game.modData.ObjectCreator.CreateObject<object>(Logic, args);
args.Remove("widget");
}
public virtual Rectangle EventBounds { get { return RenderBounds; } }
public virtual Rectangle GetEventBounds()
{
return Children
.Where(c => c.IsVisible())
.Select(c => c.GetEventBounds())
.Aggregate(EventBounds, Rectangle.Union);
}
public bool Focused { get { return Ui.SelectedWidget == this; } }
public virtual bool TakeFocus(MouseInput mi)
{
if (Focused)
return true;
if (Ui.SelectedWidget != null && !Ui.SelectedWidget.LoseFocus(mi))
return false;
Ui.SelectedWidget = this;
return true;
}
public virtual bool LoseFocus(MouseInput mi)
{
return LoseFocus();
}
public virtual bool LoseFocus()
{
if (Ui.SelectedWidget == this)
Ui.SelectedWidget = null;
return true;
}
public virtual string GetCursor(int2 pos) { return "default"; }
public string GetCursorOuter(int2 pos)
{
if (!(IsVisible() && GetEventBounds().Contains(pos)))
return null;
foreach (var child in Children.OfType<Widget>().Reverse())
{
var cc = child.GetCursorOuter(pos);
if (cc != null)
return cc;
}
return EventBounds.Contains(pos) ? GetCursor(pos)
}
public virtual void MouseEntered() {}
public virtual void MouseExited() {}
public virtual bool HandleMouseInput(MouseInput mi) { return false; }
public bool HandleMouseInputOuter(MouseInput mi)
{
if (!(Focused || (IsVisible() && GetEventBounds().Contains(mi.Location))))
return false;
var oldMouseOver = Ui.MouseOverWidget;
foreach (var child in Children.OfType<Widget>().Reverse())
if (child.HandleMouseInputOuter(mi))
return true;
if (IgnoreChildMouseOver)
Ui.MouseOverWidget = oldMouseOver;
if (mi.Event == MouseInputEvent.Move && Ui.MouseOverWidget == null && !IgnoreMouseOver)
Ui.MouseOverWidget = this;
return HandleMouseInput(mi);
}
public virtual bool HandleKeyPress(KeyInput e) { return false; }
public virtual bool HandleKeyPressOuter(KeyInput e)
{
if (!IsVisible())
return false;
foreach (var child in Children.OfType<Widget>().Reverse())
if (child.HandleKeyPressOuter(e))
return true;
var handled = HandleKeyPress(e);
return handled;
}
public virtual void Draw() {}
public virtual void DrawOuter()
{
if (IsVisible())
{
Draw();
foreach (var child in Children)
child.DrawOuter();
}
}
public virtual void Tick() {}
public virtual void TickOuter()
{
if (IsVisible())
{
Tick();
foreach (var child in Children)
child.TickOuter();
}
}
public virtual void AddChild(Widget child)
{
child.Parent = this;
Children.Add(child);
}
public virtual void RemoveChild(Widget child)
{
Children.Remove(child);
child.Removed();
}
public virtual void RemoveChildren()
{
while (Children.Count > 0)
RemoveChild(Children[Children.Count-1]);
}
public virtual void Removed()
{
foreach (var c in Children.OfType<Widget>().Reverse())
c.Removed();
}
public Widget GetOrNull(string id)
{
if (this.Id == id)
return this;
foreach (var child in Children)
{
var w = child.GetOrNull(id);
if (w != null)
return w;
}
return null;
}
public T GetOrNull<T>(string id) where T
{
return (T) GetOrNull(id);
}
public T Get<T>(string id) where T
{
var t = GetOrNull<T>(id);
if (t == null)
throw new InvalidOperationException(
"Widget {0} has no child {1} of type {2}".F(
Id, id, typeof(T).Name));
return t;
}
public Widget Get(string id) { return Get<Widget>(id); }
}
public class ContainerWidget
{
public ContainerWidget()
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1556" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1557" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs" startline="22" endline="30">
<![CDATA[
bool Initialised = false;
readonly World world;
[ObjectCreator.UseCtor]
public StrategicProgressWidget(World world)
{
IsVisible = () => true;
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1558" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\Widget.cs" startline="401" endline="402">
<![CDATA[
public ContainerWidget(ContainerWidget other)
public override string GetCursor(int2 pos) { return null; }
public override Widget Clone() { return new ContainerWidget(this); }
public Func<KeyInput, bool> OnKeyPress = _ => false;
public ContainerWidget(ContainerWidget other)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1559" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WidgetUtils.cs" startline="217" endline="222">
<![CDATA[
public static string ActiveModVersion()
{
var mod = Game.modData.Manifest.Mods[0];
return Mod.AllMods[mod].Version;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WidgetUtils.cs" startline="223" endline="228">
<![CDATA[
public static string ActiveModTitle()
{
var mod = Game.modData.Manifest.Mods[0];
return Mod.AllMods[mod].Title;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1560" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1561" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1562" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1563" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1564" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1565" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1566" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1567" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1568" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1569" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1570" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1571" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1572" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1573" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1574" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\WorldInteractionControllerWidget.cs" startline="27" endline="32">
<![CDATA[
[ObjectCreator.UseCtor]
public WorldInteractionControllerWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1575" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\TooltipContainerWidget.cs" startline="24" endline="32">
<![CDATA[
public int2 CursorOffset = new int2(0, 20);
public Action BeforeRender = Nothing;
public int TooltipDelay = 5;
Widget tooltip;
public TooltipContainerWidget()
{
IsVisible = () => Viewport.TicksSinceLastMove >= TooltipDelay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1576" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\UPnP.cs" startline="115" endline="129">
<![CDATA[
public static void ForwardPort()
{
try
{
var mapping = new Mapping(Protocol.Tcp, Game.Settings.Server.ExternalPort, Game.Settings.Server.ListenPort);
NatDevice.CreatePortMap(mapping);
Log.Write("server", "Create port mapping
}
catch (Exception e)
{
Log.Write("server", "Can not forward ports via UPnP
Game.Settings.Server.AllowPortForward = false;
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Network\UPnP.cs" startline="130" endline="144">
<![CDATA[
public static void RemovePortforward()
{
try
{
var mapping = new Mapping(Protocol.Tcp, Game.Settings.Server.ExternalPort, Game.Settings.Server.ListenPort);
NatDevice.DeletePortMap(mapping);
Log.Write("server", "Remove port mapping
}
catch (Exception e)
{
Log.Write("server", "Can not remove UPnP portforwarding rules
Game.Settings.Server.AllowPortForward = false;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1577" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="34" endline="43">
<![CDATA[
protected ClientTooltipRegionWidget(ClientTooltipRegionWidget other)
{
Template = other.Template;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
orderManager = other.orderManager;
clientIndex = other.clientIndex;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1578" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="34" endline="43">
<![CDATA[
protected ClientTooltipRegionWidget(ClientTooltipRegionWidget other)
{
Template = other.Template;
TooltipContainer = other.TooltipContainer;
tooltipContainer = Lazy.New(() => Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
orderManager = other.orderManager;
clientIndex = other.clientIndex;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1579" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="52" endline="58">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.SetTooltip(Template, new WidgetArgs() {{"orderManager", orderManager}, {"clientIndex", clientIndex}});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "world", world }, { "wic", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1580" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="52" endline="58">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.SetTooltip(Template, new WidgetArgs() {{"orderManager", orderManager}, {"clientIndex", clientIndex}});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="91" endline="97">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer != null)
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1581" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="52" endline="58">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.SetTooltip(Template, new WidgetArgs() {{"orderManager", orderManager}, {"clientIndex", clientIndex}});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="140" endline="146">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1582" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="52" endline="58">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.SetTooltip(Template, new WidgetArgs() {{"orderManager", orderManager}, {"clientIndex", clientIndex}});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
Func<string> getText = () => TooltipFormat.F(GetUsed(), GetProvided());
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "getText", getText }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1583" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="59" endline="65">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1584" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="59" endline="65">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="98" endline="103">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer != null)
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1585" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="59" endline="65">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="147" endline="152">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1586" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Game\Widgets\ClientTooltipRegionWidget.cs" startline="59" endline="65">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null)
return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1587" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Activities\HarvesterDockSequence.cs" startline="41" endline="70">
<![CDATA[
public override Activity Tick(Actor self)
{
switch (state)
{
case State.Wait
return this;
case State.Turn
state = State.DragIn;
return Util.SequenceActivities(new Turn(112), this);
case State.DragIn
state = State.Dock;
return Util.SequenceActivities(new Drag(startDock, endDock, 12), this);
case State.Dock
ru.PlayCustomAnimation(self, "dock", () => {ru.PlayCustomAnimRepeating(self, "dock-loop"); state = State.Loop;});
state = State.Wait;
return this;
case State.Loop
if (!proc.IsInWorld || proc.IsDead() || harv.TickUnload(self, proc))
state = State.Undock;
return this;
case State.Undock
ru.PlayCustomAnimBackwards(self, "dock", () => state = State.DragOut);
state = State.Wait;
return this;
case State.DragOut
return Util.SequenceActivities(new Drag(endDock, startDock, 12), NextActivity);
}
throw new InvalidOperationException("Invalid harvester dock state");
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\RAHarvesterDockSequence.cs" startline="37" endline="65">
<![CDATA[
public override Activity Tick(Actor self)
{
switch (state)
{
case State.Wait
return this;
case State.Turn
state = State.Dock;
return Util.SequenceActivities(new Turn(angle), this);
case State.Dock
ru.PlayCustomAnimation(self, "dock", () => {ru.PlayCustomAnimRepeating(self, "dock-loop"); state = State.Loop;});
state = State.Wait;
return this;
case State.Loop
if (!proc.IsInWorld || proc.IsDead() || harv.TickUnload(self, proc))
state = State.Undock;
return this;
case State.Undock
ru.PlayCustomAnimBackwards(self, "dock", () => state = State.Complete);
state = State.Wait;
return this;
case State.Complete
harv.LastLinkedProc = harv.LinkedProc;
harv.LinkProc(self, null);
return NextActivity;
}
throw new InvalidOperationException("Invalid harvester dock state");
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1588" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="125" endline="141">
<![CDATA[
void TestAndContinue()
{
Ui.ResetAll();
if (!FileSystem.Exists(Info["TestFile"]))
{
var args = new WidgetArgs()
{
{ "continueLoading", () => TestAndContinue() },
{ "installData", Info }
};
Ui.LoadWidget(Info["InstallerBackgroundWidget"], Ui.Root, args);
Ui.OpenWindow(Info["InstallerMenuWidget"], args);
}
else
Game.LoadShellMap();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\D2kLoadScreen.cs" startline="75" endline="93">
<![CDATA[
void TestAndContinue()
{
Ui.ResetAll();
if (!FileSystem.Exists(Info["TestFile"]))
{
var args = new WidgetArgs()
{
{ "continueLoading", () => TestAndContinue() },
{ "installData", Info }
};
Ui.OpenWindow(Info["InstallerMenuWidget"], args);
}
else
{
Ui.ResetAll();
Game.LoadShellMap();
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1589" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="125" endline="141">
<![CDATA[
void TestAndContinue()
{
Ui.ResetAll();
if (!FileSystem.Exists(Info["TestFile"]))
{
var args = new WidgetArgs()
{
{ "continueLoading", () => TestAndContinue() },
{ "installData", Info }
};
Ui.LoadWidget(Info["InstallerBackgroundWidget"], Ui.Root, args);
Ui.OpenWindow(Info["InstallerMenuWidget"], args);
}
else
Game.LoadShellMap();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RALoadScreen.cs" startline="79" endline="94">
<![CDATA[
void TestAndContinue()
{
Ui.ResetAll();
if (!FileSystem.Exists(Info["TestFile"]))
{
var args = new WidgetArgs()
{
{ "continueLoading", () => TestAndContinue() },
{ "installData", Info }
};
Ui.OpenWindow(Info["InstallerMenuWidget"], args);
}
else
Game.LoadShellMap();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1590" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1591" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1592" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1593" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1594" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1595" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncLoadScreen.cs" startline="23" endline="30">
<![CDATA[
Stopwatch loadTimer = new Stopwatch();
Sprite[] ss;
int loadTick;
float2 nodPos, gdiPos, evaPos;
Sprite nodLogo, gdiLogo, evaLogo, brightBlock, dimBlock;
Rectangle Bounds;
Renderer r;
NullInputHandler nih = new NullInputHandler();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1596" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1597" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1598" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1599" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1600" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1601" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1602" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1603" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1604" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\CncMenuPaletteEffect.cs" startline="22" endline="35">
<![CDATA[
public object Create(ActorInitializer init) { return new CncMenuPaletteEffect(this); }
}
public class CncMenuPaletteEffect
{
public enum EffectType { None, Black, Desaturated }
public readonly CncMenuPaletteEffectInfo Info;
int remainingFrames;
EffectType from = EffectType.Black;
EffectType to = EffectType.Black;
public CncMenuPaletteEffect(CncMenuPaletteEffectInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1605" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Effects\IonCannon.cs" startline="25" endline="31">
<![CDATA[
public IonCannon(Actor firedBy, World world, CPos location)
{
this.firedBy = firedBy;
target = Target.FromCell(location);
anim = new Animation("ionsfx");
anim.PlayThen("idle", () => Finish(world));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Explosion.cs" startline="24" endline="31">
<![CDATA[
public Explosion(World world, PPos pixelPos, string style, bool isWater, int altitude)
{
this.pos = pixelPos;
this.altitude = altitude;
anim = new Animation("explosion");
anim.PlayThen(style,
() => world.AddFrameEndTask(w => w.Remove(this)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1606" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="24" endline="29">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ioncannon", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="59" endline="64">
<![CDATA[
public virtual IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ability", MouseButton.Left);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1607" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="24" endline="29">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ioncannon", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs" startline="33" endline="38">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1608" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="24" endline="29">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ioncannon", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\IronCurtainPower.cs" startline="32" endline="36">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1609" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="24" endline="29">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ioncannon", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\NukePower.cs" startline="29" endline="33">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "nuke", MouseButton.Left);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1610" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="30" endline="38">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.Play(Info.LaunchSound, order.TargetLocation.ToPPos());
w.Add(new IonCannon(self, w, order.TargetLocation));
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderInfantry.cs" startline="129" endline="138">
<![CDATA[
public void SpawnCorpse(Actor self, string sequence)
{
self.World.AddFrameEndTask(w =>
{
if (!self.Destroyed)
w.Add(new Corpse(w, self.CenterLocation.ToFloat2(), GetImage(self),
sequence, Info.PlayerPalette+self.Owner.InternalName));
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1611" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="30" endline="38">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.Play(Info.LaunchSound, order.TargetLocation.ToPPos());
w.Add(new IonCannon(self, w, order.TargetLocation));
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="33" endline="69">
<![CDATA[
public override void Activate(Actor self, Order order)
{
var startPos = self.World.ChooseRandomEdgeCell();
self.World.AddFrameEndTask(w =>
{
var info = (Info as AirstrikePowerInfo);
var flare = info.FlareType != null ? w.CreateActor(info.FlareType, new TypeDictionary
{
new LocationInit( order.TargetLocation ),
new OwnerInit( self.Owner ),
})
if (flare != null)
{
flare.QueueActivity(new Wait(info.FlareTime));
flare.QueueActivity(new RemoveSelf());
}
var a = w.CreateActor(info.UnitType, new TypeDictionary
{
new LocationInit( startPos ),
new OwnerInit( self.Owner ),
new FacingInit( Util.GetFacing(order.TargetLocation - startPos, 0) ),
new AltitudeInit( Rules.Info[info.UnitType].Traits.Get<PlaneInfo>().CruiseAltitude ),
});
a.Trait<CarpetBomb>().SetTarget(order.TargetLocation);
a.CancelActivity();
a.QueueActivity(Fly.ToCell(order.TargetLocation));
if (flare != null)
a.QueueActivity(new CallFunc(() => flare.Destroy()));
a.QueueActivity(new FlyOffMap());
a.QueueActivity(new RemoveSelf());
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1612" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\IonCannonPower.cs" startline="30" endline="38">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.Play(Info.LaunchSound, order.TargetLocation.ToPPos());
w.Add(new IonCannon(self, w, order.TargetLocation));
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1613" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\CncShellmapScript.cs" startline="28" endline="36">
<![CDATA[
{
var b = w.Map.Bounds;
ViewportOrigin = new CPos(b.Left + b.Width/2, b.Top + b.Height/2);
Game.MoveViewport(ViewportOrigin.ToFloat2());
Actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
SetViewport();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs" startline="27" endline="34">
<![CDATA[
{
var b = w.Map.Bounds;
ViewportOrigin = new CPos(b.Left + b.Width/2, b.Top + b.Height/2);
Game.MoveViewport(ViewportOrigin.ToFloat2());
Actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
Sound.SoundVolumeModifier = 0.25f;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1614" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Gdi01Script.cs" startline="46" endline="57">
<![CDATA[
public void OnVictory(World w)
{
Action afterFMV = () =>
{
Players["GoodGuy"].WinState = WinState.Won;
started = false;
Sound.StopMusic();
Sound.PlayToPlayer(Players["GoodGuy"], "accom1.aud");
};
Game.RunAfterDelay(0, () => Media.PlayFMVFullscreen(w, "consyard.vqa", afterFMV));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Gdi01Script.cs" startline="58" endline="69">
<![CDATA[
public void OnLose(World w)
{
Action afterFMV = () =>
{
Players["GoodGuy"].WinState = WinState.Lost;
started = false;
Sound.StopMusic();
Sound.PlayToPlayer(Players["GoodGuy"], "fail1.aud");
};
Game.RunAfterDelay(0, () => Media.PlayFMVFullscreen(w, "gameover.vqa", afterFMV));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1615" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Gdi01Script.cs" startline="42" endline="54">
<![CDATA[
};
Game.RunAfterDelay(0, () => Media.PlayFMVFullscreen(w, "gdi1.vqa", () =>
Media.PlayFMVFullscreen(w, "landing.vqa", afterFMV)));
}
public void OnVictory(World w)
{
Action afterFMV = () =>
{
Players["GoodGuy"].WinState = WinState.Won;
started = false;
Sound.StopMusic();
Sound.PlayToPlayer(Players["GoodGuy"], "accom1.aud");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Gdi01Script.cs" startline="55" endline="66">
<![CDATA[
};
Game.RunAfterDelay(0, () => Media.PlayFMVFullscreen(w, "consyard.vqa", afterFMV));
}
public void OnLose(World w)
{
Action afterFMV = () =>
{
Players["GoodGuy"].WinState = WinState.Lost;
started = false;
Sound.StopMusic();
Sound.PlayToPlayer(Players["GoodGuy"], "fail1.aud");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1616" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="154" endline="160">
<![CDATA[
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="161" endline="167">
<![CDATA[
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1617" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="176" endline="214">
<![CDATA[
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
nod = w.Players.Single(p => p.InternalName == "NOD");
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
nikoomba = actors["Nikoomba"];
vil01 = actors["Vil01"];
vil02 = actors["Vil02"];
vil03 = actors["Vil03"];
vil04 = actors["Vil04"];
vil05 = actors["Vil05"];
vil06 = actors["Vil06"];
vil07 = actors["Vil07"];
vil08 = actors["Vil08"];
vil09 = actors["Vil09"];
vil10 = actors["Vil10"];
vil11 = actors["Vil11"];
vil12 = actors["Vil12"];
vil13 = actors["Vil13"];
civ01 = actors["Civ01"];
civ02 = actors["Civ02"];
civ03 = actors["Civ03"];
civ04 = actors["Civ04"];
civ05 = actors["Civ05"];
civ06 = actors["Civ06"];
civ07 = actors["Civ07"];
nr1 = actors["NODReinforceNthA"];
nr2 = actors["NODReinforceNthB"];
gr1 = actors["GDIReinforceNth"];
Game.MoveViewport(nr1.Location.ToFloat2());
Action afterFMV = () =>
{
Sound.PlayMusic(Rules.Music["aoi"]);
};
Game.RunAfterDelay(0, () => Media.PlayFMVFullscreen(w, "nod1pre.vqa", () =>
Media.PlayFMVFullscreen(w, "nod1.vqa", afterFMV)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="304" endline="347">
<![CDATA[
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
greece = w.Players.Single(p => p.InternalName == "Greece");
ussr = w.Players.Single(p => p.InternalName == "USSR");
badGuy = w.Players.Single(p => p.InternalName == "BadGuy");
turkey = w.Players.Single(p => p.InternalName == "Turkey");
greece.PlayerActor.Trait<PlayerResources>().Cash = 0;
ussr.PlayerActor.Trait<PlayerResources>().Cash = 2000;
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
startEntryPoint = actors["StartEntryPoint"];
startMovePoint = actors["StartMovePoint"];
startBridgeEndPoint = actors["StartBridgeEndPoint"];
alliedBaseTopLeft = actors["AlliedBaseTopLeft"];
alliedBaseBottomRight = actors["AlliedBaseBottomRight"];
alliedBaseEntryPoint = actors["AlliedBaseEntryPoint"];
alliedBaseMovePoint = actors["AlliedBaseMovePoint"];
demitriChurch = actors["DemitriChurch"];
demitriChurchSpawnPoint = actors["DemitriChurchSpawnPoint"];
demitriTriggerAreaCenter = actors["DemitriTriggerAreaCenter"];
demitriLZ = actors["DemitriLZ"];
hospital = actors["Hospital"];
hospitalCivilianSpawnPoint = actors["HospitalCivilianSpawnPoint"];
hospitalSuperTankPoint = actors["HospitalSuperTankPoint"];
superTanks = actors.Values.Where(a => a.Info.Name == "5tnk" && a.Owner == turkey).ToArray();
provingGroundsCameraPoint = actors["ProvingGroundsCameraPoint"];
world.CreateActor("camera", greece, provingGroundsCameraPoint.Location, null);
superTankDome = actors["SuperTankDome"];
superTankDome.AddTrait(new InfiltrateAction(OnSuperTankDomeInfiltrated));
superTankDome.AddTrait(new TransformedAction(self => superTankDome = self));
Game.MoveViewport(startEntryPoint.Location.ToFloat2());
MissionUtils.PlayMissionMusic();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1618" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1619" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1620" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1621" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1622" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1623" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1624" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1625" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1626" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1627" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1628" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1629" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Missions\Nod01Script.cs" startline="153" endline="180">
<![CDATA[
}
void NODReinforceNthA()
{
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
nr1 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr1.Location) });
}
void NODReinforceNthB()
{
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
nr2 = world.CreateActor(true, NRName, new TypeDictionary { new OwnerInit(nod), new LocationInit(nr2.Location) });
}
void GDIReinforceNth()
{
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
gr1 = world.CreateActor(true, GRName2, new TypeDictionary { new OwnerInit(gdi), new LocationInit(gr1.Location) });
}
public void WorldLoaded(World w)
{
world = w;
gdi = w.Players.Single(p => p.InternalName == "GDI");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1630" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1631" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1632" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1633" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1634" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1635" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1636" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1637" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1638" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1639" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1640" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1641" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1642" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1643" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1644" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1645" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1646" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1647" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1648" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1649" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1650" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1651" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1652" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1653" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1654" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1655" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1656" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1657" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1658" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1659" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1660" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1661" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1662" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1663" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1664" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1665" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\PoisonedByTiberium.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new PoisonedByTiberium(this); }
}
class PoisonedByTiberium
{
PoisonedByTiberiumInfo info;
[Sync] int poisonTicks;
public PoisonedByTiberium(PoisonedByTiberiumInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1666" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "world", world }, { "wic", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="91" endline="97">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer != null)
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1667" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "world", world }, { "wic", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="140" endline="146">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1668" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "world", world }, { "wic", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
Func<string> getText = () => TooltipFormat.F(GetUsed(), GetProvided());
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "getText", getText }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1669" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="98" endline="103">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer != null)
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1670" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="147" endline="152">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1671" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1672" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\CncWorldInteractionControllerWidget.cs" startline="102" endline="107">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
Keyboard = ScrollDirection.None;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="210" endline="215">
<![CDATA[
public override bool LoseFocus(MouseInput mi)
{
leftPressed = rightPressed = false;
return base.LoseFocus(mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1673" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncIngameChromeLogic.cs" startline="29" endline="34">
<![CDATA[
void UnregisterEvents()
{
Game.AddChatLine -= AddChatLine;
Game.BeforeGameStart -= UnregisterEvents;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\IngameChatLogic.cs" startline="95" endline="100">
<![CDATA[
void UnregisterEvents()
{
Game.AddChatLine -= AddChatLine;
Game.BeforeGameStart -= UnregisterEvents;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1674" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="53" endline="63">
<![CDATA[
public static bool IsValidDisk(string diskRoot)
{
var files = new string[][] {
new [] { diskRoot, "CONQUER.MIX" },
new [] { diskRoot, "DESERT.MIX" },
new [] { diskRoot, "INSTALL", "SETUP.Z" },
};
return files.All(f => File.Exists(f.Aggregate(Path.Combine)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="50" endline="59">
<![CDATA[
public static bool IsValidDisk(string diskRoot)
{
var files = new string[][] {
new [] { diskRoot, "music", "ambush.aud" },
new [] { diskRoot, "setup", "setup.z" },
};
return files.All(f => File.Exists(f.Aggregate(Path.Combine)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1675" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="64" endline="76">
<![CDATA[
void CheckForDisk()
{
var path = InstallUtils.GetMountedDisk(IsValidDisk);
if (path != null)
Install(path);
else
{
insertDiskContainer.IsVisible = () => true;
installingContainer.IsVisible = () => false;
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="60" endline="72">
<![CDATA[
void CheckForDisk()
{
var path = InstallUtils.GetMountedDisk(IsValidDisk);
if (path != null)
Install(path);
else
{
insertDiskContainer.IsVisible = () => true;
installingContainer.IsVisible = () => false;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1676" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="64" endline="76">
<![CDATA[
void CheckForDisk()
{
var path = InstallUtils.GetMountedDisk(IsValidDisk);
if (path != null)
Install(path);
else
{
insertDiskContainer.IsVisible = () => true;
installingContainer.IsVisible = () => false;
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="48" endline="63">
<![CDATA[
void CheckForDisk()
{
Func<string, bool> ValidDiskFilter = diskRoot => File.Exists(diskRoot+Path.DirectorySeparatorChar+"MAIN.MIX") &&
File.Exists(new string[] { diskRoot, "INSTALL", "REDALERT.MIX" }.Aggregate(Path.Combine));
var path = InstallUtils.GetMountedDisk(ValidDiskFilter);
if (path != null)
Install(path);
else
{
insertDiskContainer.IsVisible = () => true;
installingContainer.IsVisible = () => false;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1677" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="77" endline="126">
<![CDATA[
void Install(string source)
{
backButton.IsDisabled = () => true;
retryButton.IsDisabled = () => true;
insertDiskContainer.IsVisible = () => false;
installingContainer.IsVisible = () => true;
var dest = new string[] { Platform.SupportDir, "Content", "cnc" }.Aggregate(Path.Combine);
var extractPackage = "INSTALL/SETUP.Z";
var installCounter = 0;
var installTotal = filesToExtract.Count() + filesToExtract.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Error
backButton.IsDisabled = () => false;
retryButton.IsDisabled = () => false;
}));
new Thread( _ =>
{
try
{
if (!InstallUtils.CopyFiles(source, filesToCopy, dest, onProgress, onError))
return;
if (!InstallUtils.ExtractFromPackage(source, extractPackage, filesToExtract, dest, onProgress, onError))
return;
Game.RunAfterTick(() =>
{
Ui.CloseWindow();
afterInstall();
});
}
catch
{
onError("Installation failed");
}
}) { IsBackground = true }.Start();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="64" endline="118">
<![CDATA[
void Install(string source)
{
backButton.IsDisabled = () => true;
retryButton.IsDisabled = () => true;
insertDiskContainer.IsVisible = () => false;
installingContainer.IsVisible = () => true;
var dest = new string[] { Platform.SupportDir, "Content", "ra" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "INSTALL/REDALERT.MIX" };
var extractPackage = "MAIN.MIX";
var extractFiles = new string[] { "conquer.mix", "russian.mix", "allies.mix", "sounds.mix",
"scores.mix", "snow.mix", "interior.mix", "temperat.mix" };
var installCounter = 0;
var installTotal = copyFiles.Count() + extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Error
backButton.IsDisabled = () => false;
retryButton.IsDisabled = () => false;
}));
var t = new Thread( _ =>
{
try
{
if (!InstallUtils.CopyFiles(source, copyFiles, dest, onProgress, onError))
return;
if (!InstallUtils.ExtractFromPackage(source, extractPackage, extractFiles, dest, onProgress, onError))
return;
Game.RunAfterTick(() =>
{
Ui.CloseWindow();
continueLoading();
});
}
catch
{
onError("Installation failed");
}
}) { IsBackground = true };
t.Start();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1678" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="84" endline="98">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "cnc" }.Aggregate(Path.Combine);
var extractPackage = "INSTALL/SETUP.Z";
var installCounter = 0;
var installTotal = filesToExtract.Count() + filesToExtract.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kExtractGameFilesLogic.cs" startline="58" endline="698">
<![CDATA[
var PathToDataR8 = Path.Combine(Platform.SupportDir, "Content/d2k/DATA.R8");
var PathToPalette = "mods/d2k/bits/d2k.pal";
var PathToSHPs = Path.Combine(Platform.SupportDir, "Content/d2k/SHPs");
var PathToTilesets = Path.Combine(Platform.SupportDir, "Content/d2k/Tilesets");
var ExtractGameFiles = new string[][]
{
new string[] {"--r8", PathToDataR8, PathToPalette, "0", "2", Path.Combine(PathToSHPs, "overlay")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3", "3", Path.Combine(PathToSHPs, "repairing")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4", "4", Path.Combine(PathToSHPs, "black")},
new string[] {"--r8", PathToDataR8, PathToPalette, "5", "8", Path.Combine(PathToSHPs, "selectionedges")},
new string[] {"--r8", PathToDataR8, PathToPalette, "9", "9", Path.Combine(PathToSHPs, "bar1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "10", "10", Path.Combine(PathToSHPs, "bar2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "11", "11", Path.Combine(PathToSHPs, "bar3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "12", "12", Path.Combine(PathToSHPs, "bar4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "13", "13", Path.Combine(PathToSHPs, "bar5")},
new string[] {"--r8", PathToDataR8, PathToPalette, "14", "14", Path.Combine(PathToSHPs, "bar6")},
new string[] {"--r8", PathToDataR8, PathToPalette, "15", "16", Path.Combine(PathToSHPs, "dots")},
new string[] {"--r8", PathToDataR8, PathToPalette, "17", "26", Path.Combine(PathToSHPs, "numbers")},
new string[] {"--r8", PathToDataR8, PathToPalette, "27", "37", Path.Combine(PathToSHPs, "credits")},
new string[] {"--r8", PathToDataR8, PathToPalette, "40", "101", Path.Combine(PathToSHPs, "d2kshadow")},
new string[] {"--r8", PathToDataR8, PathToPalette, "102", "105", Path.Combine(PathToSHPs, "crates")},
new string[] {"--r8", PathToDataR8, PathToPalette, "107", "109", Path.Combine(PathToSHPs, "spicebloom")},
new string[] {"--r8", PathToDataR8, PathToPalette, "110", "111", Path.Combine(PathToSHPs, "stars")},
new string[] {"--r8", PathToDataR8, PathToPalette, "112", "113", Path.Combine(PathToSHPs, "greenuparrow")},
new string[] {"--r8", PathToDataR8, PathToPalette, "114", "129", Path.Combine(PathToSHPs, "rockcrater1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "130", "145", Path.Combine(PathToSHPs, "rockcrater2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "146", "161", Path.Combine(PathToSHPs, "sandcrater1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "162", "177", Path.Combine(PathToSHPs, "sandcrater2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "178", "193", Path.Combine(PathToSHPs, "unknown")},
new string[] {"--r8", PathToDataR8, PathToPalette, "194", "205", Path.Combine(PathToSHPs, "unknown2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "206", "381", Path.Combine(PathToSHPs, "rifle"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "382", "457", Path.Combine(PathToSHPs, "rifledeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "458", "633", Path.Combine(PathToSHPs, "bazooka"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "634", "693", Path.Combine(PathToSHPs, "bazookadeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "694", "869", Path.Combine(PathToSHPs, "fremen"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "870", "929", Path.Combine(PathToSHPs, "fremendeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "930", "1105", Path.Combine(PathToSHPs, "sardaukar"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1106", "1165", Path.Combine(PathToSHPs, "sardaukardeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1166", "1341", Path.Combine(PathToSHPs, "engineer"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1342", "1401", Path.Combine(PathToSHPs, "engineerdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1402", "1457", Path.Combine(PathToSHPs, "thumper"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1458", "1462", Path.Combine(PathToSHPs, "thumping"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1463", "1542", Path.Combine(PathToSHPs, "thumper2"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1543", "1602", Path.Combine(PathToSHPs, "thumperdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1603", "1634", Path.Combine(PathToSHPs, "missiletank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1635", "1666", Path.Combine(PathToSHPs, "trike"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1667", "1698", Path.Combine(PathToSHPs, "quad"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1699", "1730", Path.Combine(PathToSHPs, "harvester"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1731", "1762", Path.Combine(PathToSHPs, "combata"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1763", "1794", Path.Combine(PathToSHPs, "siegetank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1795", "1826", Path.Combine(PathToSHPs, "dmcv"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1827", "1858", Path.Combine(PathToSHPs, "sonictank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1859", "1890", Path.Combine(PathToSHPs, "combataturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1891", "1922", Path.Combine(PathToSHPs, "siegeturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1923", "1954", Path.Combine(PathToSHPs, "carryall"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1955", "2050", Path.Combine(PathToSHPs, "orni"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2051", "2082", Path.Combine(PathToSHPs, "combath"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2083", "2114", Path.Combine(PathToSHPs, "devast"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2115", "2146", Path.Combine(PathToSHPs, "combathturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2147", "2148", Path.Combine(PathToSHPs, "deathhandmissile")},
new string[] {"--r8", PathToDataR8, PathToPalette, "2149", "2324", Path.Combine(PathToSHPs, "saboteur"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2325", "2388", Path.Combine(PathToSHPs, "saboteurdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2389", "2420", Path.Combine(PathToSHPs, "deviatortank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2421", "2452", Path.Combine(PathToSHPs, "raider"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2453", "2484", Path.Combine(PathToSHPs, "combato"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2485", "2516", Path.Combine(PathToSHPs, "combatoturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2517", "2517", Path.Combine(PathToSHPs, "frigate"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2518", "2520", Path.Combine(PathToSHPs, "heavya"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2521", "2522", Path.Combine(PathToSHPs, "radara"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2523", "2524", Path.Combine(PathToSHPs, "pwra"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2525", "2526", Path.Combine(PathToSHPs, "barra"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2527", "2558", Path.Combine(PathToSHPs, "walla"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2559", "2560", Path.Combine(PathToSHPs, "conyarda"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2561", "2563", Path.Combine(PathToSHPs, "refa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2564", "2565", Path.Combine(PathToSHPs, "hightecha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2566", "2570", Path.Combine(PathToSHPs, "siloa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2571", "2572", Path.Combine(PathToSHPs, "repaira"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2573", "2588", Path.Combine(PathToSHPs, "guntowera"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2589", "2620", Path.Combine(PathToSHPs, "gunturreta"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2621", "2636", Path.Combine(PathToSHPs, "rockettowera"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2637", "2668", Path.Combine(PathToSHPs, "rocketturreta"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2669", "2670", Path.Combine(PathToSHPs, "researcha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2671", "2672", Path.Combine(PathToSHPs, "starporta"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2673", "2675", Path.Combine(PathToSHPs, "lighta"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2676", "2677", Path.Combine(PathToSHPs, "palacea"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2678", "2680", Path.Combine(PathToSHPs, "heavyh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2681", "2682", Path.Combine(PathToSHPs, "radarh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2683", "2684", Path.Combine(PathToSHPs, "pwrh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2685", "2686", Path.Combine(PathToSHPs, "barrh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2687", "2718", Path.Combine(PathToSHPs, "wallh"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2719", "2720", Path.Combine(PathToSHPs, "conyardh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2721", "2723", Path.Combine(PathToSHPs, "refh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2724", "2725", Path.Combine(PathToSHPs, "hightechh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2726", "2730", Path.Combine(PathToSHPs, "siloh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2731", "2732", Path.Combine(PathToSHPs, "repairh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2733", "2748", Path.Combine(PathToSHPs, "guntowerh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2749", "2780", Path.Combine(PathToSHPs, "gunturreth"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2781", "2796", Path.Combine(PathToSHPs, "rockettowerh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2797", "2828", Path.Combine(PathToSHPs, "rocketturreth"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2829", "2830", Path.Combine(PathToSHPs, "researchh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2831", "2832", Path.Combine(PathToSHPs, "starporth"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2833", "2835", Path.Combine(PathToSHPs, "lighth"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2836", "2837", Path.Combine(PathToSHPs, "palaceh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2838", "2840", Path.Combine(PathToSHPs, "heavyo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2841", "2842", Path.Combine(PathToSHPs, "radaro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2843", "2844", Path.Combine(PathToSHPs, "pwro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2845", "2846", Path.Combine(PathToSHPs, "barro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2847", "2878", Path.Combine(PathToSHPs, "wallo"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2879", "2880", Path.Combine(PathToSHPs, "conyardo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2881", "2883", Path.Combine(PathToSHPs, "refo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2884", "2885", Path.Combine(PathToSHPs, "hightecho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2886", "2890", Path.Combine(PathToSHPs, "siloo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2891", "2892", Path.Combine(PathToSHPs, "repairo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2893", "2908", Path.Combine(PathToSHPs, "guntowero"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2909", "2940", Path.Combine(PathToSHPs, "gunturreto"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2941", "2956", Path.Combine(PathToSHPs, "rockettowero"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2957", "2988", Path.Combine(PathToSHPs, "rocketturreto"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2989", "2990", Path.Combine(PathToSHPs, "researcho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2991", "2992", Path.Combine(PathToSHPs, "starporto"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2993", "2995", Path.Combine(PathToSHPs, "lighto"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2996", "2997", Path.Combine(PathToSHPs, "palaceo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2998", "2998", Path.Combine(PathToSHPs, "sietch"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2999", "3000", Path.Combine(PathToSHPs, "starportc"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3001", "3003", Path.Combine(PathToSHPs, "heavyc"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3004", "3005", Path.Combine(PathToSHPs, "palacec"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3006", "3007", Path.Combine(PathToSHPs, "conyardh2"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3008", "3013", Path.Combine(PathToSHPs, "plates")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3014", "3014", Path.Combine(PathToSHPs, "unknown3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3015", "3078", Path.Combine(PathToSHPs, "rpg"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3079", "3087", Path.Combine(PathToSHPs, "unknown4"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3088", "3247", Path.Combine(PathToSHPs, "missile"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3248", "3279", Path.Combine(PathToSHPs, "doubleblast"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3280", "3283", Path.Combine(PathToSHPs, "bombs"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3284", "3287", Path.Combine(PathToSHPs, "unknown6"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3288", "3289", Path.Combine(PathToSHPs, "unknown7"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3290", "3303", Path.Combine(PathToSHPs, "unknown8"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3304", "3305", Path.Combine(PathToSHPs, "unknown9"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3306", "3369", Path.Combine(PathToSHPs, "missile2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3370", "3380", Path.Combine(PathToSHPs, "unload"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3381", "3385", Path.Combine(PathToSHPs, "harvest"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3386", "3389", Path.Combine(PathToSHPs, "miniboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3390", "3402", Path.Combine(PathToSHPs, "mediboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3403", "3417", Path.Combine(PathToSHPs, "mediboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3418", "3420", Path.Combine(PathToSHPs, "minifire"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3421", "3428", Path.Combine(PathToSHPs, "miniboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3429", "3432", Path.Combine(PathToSHPs, "minibooms"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3433", "3447", Path.Combine(PathToSHPs, "bigboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3448", "3470", Path.Combine(PathToSHPs, "bigboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3471", "3493", Path.Combine(PathToSHPs, "bigboom3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3494", "3501", Path.Combine(PathToSHPs, "unknown10"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3502", "3509", Path.Combine(PathToSHPs, "unknown11"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3510", "3511", Path.Combine(PathToSHPs, "unknown12"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3512", "3530", Path.Combine(PathToSHPs, "movingsand"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3531", "3534", Path.Combine(PathToSHPs, "unknown13"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3535", "3539", Path.Combine(PathToSHPs, "unknown14"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3540", "3543", Path.Combine(PathToSHPs, "unknown15"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3544", "3548", Path.Combine(PathToSHPs, "unknown16"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3549", "3564", Path.Combine(PathToSHPs, "wormjaw"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3565", "3585", Path.Combine(PathToSHPs, "wormdust"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3586", "3600", Path.Combine(PathToSHPs, "wormsigns1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3601", "3610", Path.Combine(PathToSHPs, "wormsigns2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3611", "3615", Path.Combine(PathToSHPs, "wormsigns3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3616", "3620", Path.Combine(PathToSHPs, "wormsigns4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3621", "3625", Path.Combine(PathToSHPs, "rings"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3626", "3630", Path.Combine(PathToSHPs, "minipiff"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3631", "3678", Path.Combine(PathToSHPs, "movingsand2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3679", "3686", Path.Combine(PathToSHPs, "selling"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3687", "3693", Path.Combine(PathToSHPs, "shockwave"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3694", "3711", Path.Combine(PathToSHPs, "electroplosion"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3712", "3722", Path.Combine(PathToSHPs, "fire"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3723", "3734", Path.Combine(PathToSHPs, "fire2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3735", "3738", Path.Combine(PathToSHPs, "unknown21"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3739", "3742", Path.Combine(PathToSHPs, "unknown22"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3743", "3774", Path.Combine(PathToSHPs, "doublemuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3775", "3806", Path.Combine(PathToSHPs, "muzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3807", "3838", Path.Combine(PathToSHPs, "doubleblastmuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3839", "3870", Path.Combine(PathToSHPs, "minimuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3871", "3872", Path.Combine(PathToSHPs, "unknown17"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3873", "3875", Path.Combine(PathToSHPs, "unknown18"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3876", "3876", Path.Combine(PathToSHPs, "unknown19"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3877", "3884", Path.Combine(PathToSHPs, "burst"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3885", "3898", Path.Combine(PathToSHPs, "fire3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3899", "3910", Path.Combine(PathToSHPs, "energy"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3911", "3946", Path.Combine(PathToSHPs, "reveal"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3947", "3964", Path.Combine(PathToSHPs, "orbit"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3965", "3979", Path.Combine(PathToSHPs, "mushroomcloud"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3980", "3987", Path.Combine(PathToSHPs, "mediboom3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3988", "4010", Path.Combine(PathToSHPs, "largeboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4011", "4011", Path.Combine(PathToSHPs, "rifleicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4012", "4012", Path.Combine(PathToSHPs, "bazookaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4013", "4013", Path.Combine(PathToSHPs, "engineericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4014", "4014", Path.Combine(PathToSHPs, "thumpericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4015", "4015", Path.Combine(PathToSHPs, "sardaukaricon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4016", "4016", Path.Combine(PathToSHPs, "trikeicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4017", "4017", Path.Combine(PathToSHPs, "raidericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4018", "4018", Path.Combine(PathToSHPs, "quadicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4019", "4019", Path.Combine(PathToSHPs, "harvestericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4020", "4020", Path.Combine(PathToSHPs, "combataicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4021", "4021", Path.Combine(PathToSHPs, "combathicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4022", "4022", Path.Combine(PathToSHPs, "combatoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4023", "4023", Path.Combine(PathToSHPs, "mcvicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4024", "4024", Path.Combine(PathToSHPs, "missiletankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4025", "4025", Path.Combine(PathToSHPs, "deviatortankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4026", "4026", Path.Combine(PathToSHPs, "siegetankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4027", "4027", Path.Combine(PathToSHPs, "sonictankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4028", "4028", Path.Combine(PathToSHPs, "devasticon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4029", "4029", Path.Combine(PathToSHPs, "carryallicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4030", "4030", Path.Combine(PathToSHPs, "carryallicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4031", "4031", Path.Combine(PathToSHPs, "orniicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4032", "4032", Path.Combine(PathToSHPs, "fremenicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4033", "4033", Path.Combine(PathToSHPs, "fremenicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4034", "4034", Path.Combine(PathToSHPs, "saboteuricon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4035", "4035", Path.Combine(PathToSHPs, "deathhandicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4036", "4036", Path.Combine(PathToSHPs, "rifleicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4037", "4037", Path.Combine(PathToSHPs, "bazookaicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4038", "4038", Path.Combine(PathToSHPs, "engineericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4039", "4039", Path.Combine(PathToSHPs, "thumpericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4040", "4040", Path.Combine(PathToSHPs, "sardaukaricon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4041", "4041", Path.Combine(PathToSHPs, "trikeicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4042", "4042", Path.Combine(PathToSHPs, "raidericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4043", "4043", Path.Combine(PathToSHPs, "quadicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4044", "4044", Path.Combine(PathToSHPs, "harvestericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4045", "4045", Path.Combine(PathToSHPs, "combataicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4046", "4046", Path.Combine(PathToSHPs, "conyardaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4047", "4047", Path.Combine(PathToSHPs, "conyardhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4048", "4048", Path.Combine(PathToSHPs, "conyardoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4049", "4049", Path.Combine(PathToSHPs, "conyardaicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4050", "4050", Path.Combine(PathToSHPs, "4plateaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4051", "4051", Path.Combine(PathToSHPs, "4platehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4052", "4052", Path.Combine(PathToSHPs, "4plateoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4053", "4053", Path.Combine(PathToSHPs, "6plateaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4054", "4054", Path.Combine(PathToSHPs, "6platehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4055", "4055", Path.Combine(PathToSHPs, "6plateoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4056", "4056", Path.Combine(PathToSHPs, "pwraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4057", "4057", Path.Combine(PathToSHPs, "pwrhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4058", "4058", Path.Combine(PathToSHPs, "pwroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4059", "4059", Path.Combine(PathToSHPs, "barraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4060", "4060", Path.Combine(PathToSHPs, "barrhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4061", "4061", Path.Combine(PathToSHPs, "barroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4062", "4062", Path.Combine(PathToSHPs, "orniicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4063", "4063", Path.Combine(PathToSHPs, "wallaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4064", "4064", Path.Combine(PathToSHPs, "wallhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4065", "4065", Path.Combine(PathToSHPs, "walloicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4066", "4066", Path.Combine(PathToSHPs, "refaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4067", "4067", Path.Combine(PathToSHPs, "refhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4068", "4068", Path.Combine(PathToSHPs, "refoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4069", "4069", Path.Combine(PathToSHPs, "guntoweraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4070", "4070", Path.Combine(PathToSHPs, "guntowerhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4071", "4071", Path.Combine(PathToSHPs, "guntoweroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4072", "4072", Path.Combine(PathToSHPs, "radaraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4073", "4073", Path.Combine(PathToSHPs, "radarhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4074", "4074", Path.Combine(PathToSHPs, "radaroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4075", "4075", Path.Combine(PathToSHPs, "rockettoweraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4076", "4076", Path.Combine(PathToSHPs, "rockettowerhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4077", "4077", Path.Combine(PathToSHPs, "rockettoweroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4078", "4078", Path.Combine(PathToSHPs, "hightechaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4079", "4079", Path.Combine(PathToSHPs, "hightechhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4080", "4080", Path.Combine(PathToSHPs, "hightechoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4081", "4081", Path.Combine(PathToSHPs, "lightaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4082", "4082", Path.Combine(PathToSHPs, "lighthicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4083", "4083", Path.Combine(PathToSHPs, "lightoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4084", "4084", Path.Combine(PathToSHPs, "siloaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4085", "4085", Path.Combine(PathToSHPs, "silohicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4086", "4086", Path.Combine(PathToSHPs, "silooicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4087", "4087", Path.Combine(PathToSHPs, "heavyaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4088", "4088", Path.Combine(PathToSHPs, "heavyhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4089", "4089", Path.Combine(PathToSHPs, "heavyoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4090", "4090", Path.Combine(PathToSHPs, "orniicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4091", "4091", Path.Combine(PathToSHPs, "heavyhicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4092", "4092", Path.Combine(PathToSHPs, "starportaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4093", "4093", Path.Combine(PathToSHPs, "starporthicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4094", "4094", Path.Combine(PathToSHPs, "starportoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4095", "4095", Path.Combine(PathToSHPs, "orniicon4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4096", "4096", Path.Combine(PathToSHPs, "repairaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4097", "4097", Path.Combine(PathToSHPs, "repairhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4098", "4098", Path.Combine(PathToSHPs, "repairoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4099", "4099", Path.Combine(PathToSHPs, "researchaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4100", "4100", Path.Combine(PathToSHPs, "researchhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4101", "4101", Path.Combine(PathToSHPs, "researchoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4102", "4102", Path.Combine(PathToSHPs, "palaceaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4103", "4103", Path.Combine(PathToSHPs, "palacehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4104", "4104", Path.Combine(PathToSHPs, "palaceoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4105", "4105", Path.Combine(PathToSHPs, "orniicon5")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4106", "4106", Path.Combine(PathToSHPs, "radaraicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4107", "4107", Path.Combine(PathToSHPs, "radaraicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4108", "4108", Path.Combine(PathToSHPs, "conyardaicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4109", "4150", Path.Combine(PathToSHPs, "conmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4151", "4174", Path.Combine(PathToSHPs, "wtrpmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4175", "4194", Path.Combine(PathToSHPs, "barramake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4195", "4212", Path.Combine(PathToSHPs, "barrhmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4213", "4230", Path.Combine(PathToSHPs, "barromake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4231", "4253", Path.Combine(PathToSHPs, "refmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4254", "4273", Path.Combine(PathToSHPs, "radarmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4274", "4294", Path.Combine(PathToSHPs, "highmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4295", "4312", Path.Combine(PathToSHPs, "lightmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4313", "4327", Path.Combine(PathToSHPs, "silomake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4328", "4346", Path.Combine(PathToSHPs, "heavymake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4347", "4369", Path.Combine(PathToSHPs, "starportmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4370", "4390", Path.Combine(PathToSHPs, "repairmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4391", "4412", Path.Combine(PathToSHPs, "researchmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4413", "4435", Path.Combine(PathToSHPs, "palacemake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4436", "4449", Path.Combine(PathToSHPs, "cranea"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4450", "4463", Path.Combine(PathToSHPs, "craneh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4464", "4477", Path.Combine(PathToSHPs, "craneo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4478", "4491", Path.Combine(PathToSHPs, "cranea2"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4492", "4501", Path.Combine(PathToSHPs, "windtrapa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4502", "4511", Path.Combine(PathToSHPs, "windtraph"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4512", "4521", Path.Combine(PathToSHPs, "windtrapo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4522", "4552", Path.Combine(PathToSHPs, "disha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4553", "4582", Path.Combine(PathToSHPs, "dishh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4583", "4613", Path.Combine(PathToSHPs, "disho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4614", "4643", Path.Combine(PathToSHPs, "highweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4644", "4673", Path.Combine(PathToSHPs, "lightweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4674", "4721", Path.Combine(PathToSHPs, "heavyweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4722", "4744", Path.Combine(PathToSHPs, "unknown20"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4745", "4759", Path.Combine(PathToSHPs, "marker"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4760", "4819", Path.Combine(PathToSHPs, "researchzaps"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4820", "4840", Path.Combine(PathToSHPs, "deathhandlaunch"), "--building"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/MOUSE.R8"), PathToPalette, "0", "264", Path.Combine(PathToSHPs, "mouse")},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBASE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BASE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBASE.R8"), PathToPalette, "748", "749", Path.Combine(PathToSHPs, "spice0")},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBAT.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BAT"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBGBS.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BGBS"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXICE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "ICE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXTREE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "TREE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXWAST.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "WAST"), "--tileset"},
};
var SHPsToCreate = new string[][]
{
new string[] {"--shp", Path.Combine(PathToSHPs, "overlay.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairing.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "black.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "selectionedges.png"), "8"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar1.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar2.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar3.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar4.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar5.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar6.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dots.png"), "4"},
new string[] {"--shp", Path.Combine(PathToSHPs, "numbers.png"), "8"},
new string[] {"--shp", Path.Combine(PathToSHPs, "credits.png"), "10"},
new string[] {"--shp", Path.Combine(PathToSHPs, "d2kshadow.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "crates.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "spicebloom.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "stars.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "greenuparrow.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockcrater1.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockcrater2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sandcrater1.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sandcrater2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown2.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifledeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazooka.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazookadeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremen.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremendeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukar.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukardeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineer.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineerdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumper.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumping.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumper2.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumperdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missiletank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "trike.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "quad.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvester.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combata.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegetank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dmcv.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sonictank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combataturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegeturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "carryall.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orni.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "devast.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combathturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandmissile.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteur.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteurdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deviatortank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "raider.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combato.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combatoturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "frigate.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavya.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radara.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwra.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barra.png"), "80"},
new string[] {"--shp", Path.Combine(PathToSHPs, "walla.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyarda.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refa.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightecha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloa.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repaira.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowera.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreta.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowera.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreta.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researcha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporta.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighta.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacea.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwrh.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallh.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrh.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refh.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloh.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowerh.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreth.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowerh.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreth.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporth.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighth.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaro.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwro.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barro.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallo.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refo.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightecho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloo.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowero.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreto.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowero.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreto.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researcho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporto.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighto.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sietch.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportc.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyc.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacec.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardh2.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "plates.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown3.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rpg.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown4.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missile.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doubleblast.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bombs.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown6.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown7.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown8.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown9.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missile2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unload.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvest.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "miniboom.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minifire.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "miniboom2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minibooms.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom2.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom3.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown10.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown11.png"), "84"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown12.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "movingsand.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown13.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown14.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown15.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown16.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormjaw.png"), "68"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormdust.png"), "68"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns1.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns3.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns4.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rings.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minipiff.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "movingsand2.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "selling.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "shockwave.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "electroplosion.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown21.png"), "12"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown22.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doublemuzzle.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "muzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doubleblastmuzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minimuzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown17.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown18.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown19.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "burst.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire3.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "energy.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "reveal.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orbit.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mushroomcloud.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom3.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "largeboom.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifleicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazookaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumpericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukaricon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "trikeicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "raidericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "quadicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvestericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combataicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combathicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combatoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mcvicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missiletankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deviatortankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegetankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sonictankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "devasticon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "carryallicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orniicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremenicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteuricon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4plateaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4platehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4plateoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6plateaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6platehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6plateoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwrhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "walloicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntoweraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowerhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntoweroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettoweraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowerhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettoweroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighthicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silohicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silooicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporthicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wtrpmake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barramake.png"), "80"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrhmake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barromake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refmake.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "highmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silomake.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavymake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacemake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "cranea.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "craneh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "craneo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtrapa.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtraph.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtrapo.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "disha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dishh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "disho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "highweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown20.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "marker.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchzaps.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandlaunch.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mouse.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "spice0.png"), "32"},
};
var SHPsToTranspose = new string[][]
{
new string[] {"--transpose", Path.Combine(PathToSHPs, "orni.shp"), Path.Combine(PathToSHPs, "orni.shp"), "0", "32", "3"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "rifle.shp"), Path.Combine(PathToSHPs, "rifle.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "bazooka.shp"), Path.Combine(PathToSHPs, "bazooka.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "fremen.shp"), Path.Combine(PathToSHPs, "fremen.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "sardaukar.shp"), Path.Combine(PathToSHPs, "sardaukar.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "thumper.shp"), Path.Combine(PathToSHPs, "thumper.shp"), "8", "8", "6"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "thumper2.shp"), Path.Combine(PathToSHPs, "thumper2.shp"), "8", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "engineer.shp"), Path.Combine(PathToSHPs, "engineer.shp"), "8", "8", "6"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "saboteur.shp"), Path.Combine(PathToSHPs, "saboteur.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
};
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1679" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="84" endline="98">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "cnc" }.Aggregate(Path.Combine);
var extractPackage = "INSTALL/SETUP.Z";
var installCounter = 0;
var installTotal = filesToExtract.Count() + filesToExtract.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="80" endline="99">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "d2k", "Music" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "music/ambush.aud", "music/arakatak.aud", "music/atregain.aud", "music/entordos.aud", "music/fightpwr.aud", "music/fremen.aud", "music/hark_bat.aud", "music/landsand.aud", "music/options.aud", "music/plotting.aud", "music/risehark.aud", "music/robotix.aud", "music/score.aud", "music/soldappr.aud", "music/spicesct.aud", "music/undercon.aud", "music/waitgame.aud" };
var installCounter = 0;
var installTotal = copyFiles.Count(); //+ extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1680" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallFromCDLogic.cs" startline="84" endline="98">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "cnc" }.Aggregate(Path.Combine);
var extractPackage = "INSTALL/SETUP.Z";
var installCounter = 0;
var installTotal = filesToExtract.Count() + filesToExtract.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="71" endline="89">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "ra" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "INSTALL/REDALERT.MIX" };
var extractPackage = "MAIN.MIX";
var extractFiles = new string[] { "conquer.mix", "russian.mix", "allies.mix", "sounds.mix",
"scores.mix", "snow.mix", "interior.mix", "temperat.mix" };
var installCounter = 0;
var installTotal = copyFiles.Count() + extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1681" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallLogic.cs" startline="19" endline="51">
<![CDATA[
[ObjectCreator.UseCtor]
public CncInstallLogic(Widget widget, Dictionary<string,string> installData, Action continueLoading)
{
var panel = widget.Get("INSTALL_PANEL");
var args = new WidgetArgs()
{
{ "afterInstall", () => { Ui.CloseWindow(); continueLoading(); } },
{ "installData", installData }
};
panel.Get<ButtonWidget>("DOWNLOAD_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_DOWNLOAD_PANEL", args);
panel.Get<ButtonWidget>("INSTALL_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_FROMCD_PANEL", new WidgetArgs(args)
{
{ "filesToCopy", new[] { "CONQUER.MIX", "DESERT.MIX", "SCORES.MIX",
"SOUNDS.MIX", "TEMPERAT.MIX", "WINTER.MIX" } },
{ "filesToExtract", new[] { "speech.mix", "tempicnh.mix", "transit.mix" } },
});
panel.Get<ButtonWidget>("QUIT_BUTTON").OnClick = Game.Exit;
panel.Get<ButtonWidget>("MODS_BUTTON").OnClick = () =>
{
Ui.OpenWindow("MODS_PANEL", new WidgetArgs()
{
{ "onExit", () => {} },
{ "onSwitch", Ui.CloseWindow },
});
};
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallLogic.cs" startline="19" endline="40">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kInstallLogic(Widget widget, Dictionary<string,string> installData, Action continueLoading)
{
var panel = widget.Get("INSTALL_PANEL");
var args = new WidgetArgs()
{
{ "afterInstall", () => { Ui.CloseWindow(); continueLoading(); } },
{ "installData", installData },
{ "continueLoading", continueLoading }
};
panel.Get<ButtonWidget>("DOWNLOAD_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_DOWNLOAD_PANEL", args);
panel.Get<ButtonWidget>("COPY_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_FROMCD_PANEL", args);
panel.Get<ButtonWidget>("EXTRACT_BUTTON").OnClick = () =>
Ui.OpenWindow("EXTRACT_GAMEFILES_PANEL", args);
panel.Get<ButtonWidget>("QUIT_BUTTON").OnClick = Game.Exit;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1682" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncInstallLogic.cs" startline="19" endline="51">
<![CDATA[
[ObjectCreator.UseCtor]
public CncInstallLogic(Widget widget, Dictionary<string,string> installData, Action continueLoading)
{
var panel = widget.Get("INSTALL_PANEL");
var args = new WidgetArgs()
{
{ "afterInstall", () => { Ui.CloseWindow(); continueLoading(); } },
{ "installData", installData }
};
panel.Get<ButtonWidget>("DOWNLOAD_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_DOWNLOAD_PANEL", args);
panel.Get<ButtonWidget>("INSTALL_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_FROMCD_PANEL", new WidgetArgs(args)
{
{ "filesToCopy", new[] { "CONQUER.MIX", "DESERT.MIX", "SCORES.MIX",
"SOUNDS.MIX", "TEMPERAT.MIX", "WINTER.MIX" } },
{ "filesToExtract", new[] { "speech.mix", "tempicnh.mix", "transit.mix" } },
});
panel.Get<ButtonWidget>("QUIT_BUTTON").OnClick = Game.Exit;
panel.Get<ButtonWidget>("MODS_BUTTON").OnClick = () =>
{
Ui.OpenWindow("MODS_PANEL", new WidgetArgs()
{
{ "onExit", () => {} },
{ "onSwitch", Ui.CloseWindow },
});
};
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallLogic.cs" startline="19" endline="37">
<![CDATA[
[ObjectCreator.UseCtor]
public RAInstallLogic(Widget widget, Dictionary<string,string> installData, Action continueLoading)
{
var panel = widget.Get("INSTALL_PANEL");
var args = new WidgetArgs()
{
{ "afterInstall", () => { Ui.CloseWindow(); continueLoading(); } },
{ "installData", installData },
{ "continueLoading", continueLoading }
};
panel.Get<ButtonWidget>("DOWNLOAD_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_DOWNLOAD_PANEL", args);
panel.Get<ButtonWidget>("INSTALL_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_FROMCD_PANEL", args);
panel.Get<ButtonWidget>("QUIT_BUTTON").OnClick = Game.Exit;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1683" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="98" endline="107">
<![CDATA[
void OpenGamePanel(string id)
{
Menu = MenuType.None;
Ui.OpenWindow(id, new WidgetArgs()
{
{ "onExit", () => Menu = MenuType.Multiplayer },
{ "openLobby", () => OpenLobbyPanel(MenuType.Multiplayer, false) }
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="83" endline="92">
<![CDATA[
void OpenGamePanel(string id)
{
Menu = MenuType.None;
Ui.OpenWindow(id, new WidgetArgs()
{
{ "onExit", () => Menu = MenuType.Main },
{ "openLobby", () => OpenLobbyPanel() }
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1684" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="98" endline="107">
<![CDATA[
void OpenGamePanel(string id)
{
Menu = MenuType.None;
Ui.OpenWindow(id, new WidgetArgs()
{
{ "onExit", () => Menu = MenuType.Multiplayer },
{ "openLobby", () => OpenLobbyPanel(MenuType.Multiplayer, false) }
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="51" endline="59">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_MODS").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MODS_PANEL", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1685" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="98" endline="107">
<![CDATA[
void OpenGamePanel(string id)
{
Menu = MenuType.None;
Ui.OpenWindow(id, new WidgetArgs()
{
{ "onExit", () => Menu = MenuType.Multiplayer },
{ "openLobby", () => OpenLobbyPanel(MenuType.Multiplayer, false) }
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="60" endline="69">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main },
{ "onSwitch", RemoveShellmapUI }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_REPLAY_VIEWER").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("REPLAYBROWSER_BG", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1686" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="70" endline="79">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Settings },
{ "onStart", RemoveShellmapUI }
});
};
settingsMenu.Get<ButtonWidget>("MUSIC_BUTTON").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MUSIC_PANEL", new WidgetArgs()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="80" endline="88">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Settings },
});
};
settingsMenu.Get<ButtonWidget>("SETTINGS_BUTTON").OnClick = () =>
{
Menu = MenuType.None;
Game.OpenWindow("SETTINGS_PANEL", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1687" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="70" endline="79">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Settings },
{ "onStart", RemoveShellmapUI }
});
};
settingsMenu.Get<ButtonWidget>("MUSIC_BUTTON").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MUSIC_PANEL", new WidgetArgs()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="42" endline="50">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_MUSIC").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MUSIC_MENU", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1688" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMenuLogic.cs" startline="80" endline="88">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Settings },
});
};
settingsMenu.Get<ButtonWidget>("SETTINGS_BUTTON").OnClick = () =>
{
Menu = MenuType.None;
Game.OpenWindow("SETTINGS_PANEL", new WidgetArgs()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="42" endline="50">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_MUSIC").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MUSIC_MENU", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1689" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMusicPlayerLogic.cs" startline="165" endline="174">
<![CDATA[
MusicInfo GetNextSong()
{
if (!music.Any())
return null;
var songs = Game.Settings.Sound.Shuffle ? random
return songs.SkipWhile(m => m != currentSong)
.Skip(1).FirstOrDefault() ?? songs.FirstOrDefault();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncMusicPlayerLogic.cs" startline="175" endline="184">
<![CDATA[
MusicInfo GetPrevSong()
{
if (!music.Any())
return null;
var songs = Game.Settings.Sound.Shuffle ? random
return songs.Reverse().SkipWhile(m => m != currentSong)
.Skip(1).FirstOrDefault() ?? songs.Reverse().FirstOrDefault();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1690" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncSettingsLogic.cs" startline="175" endline="196">
<![CDATA[
static bool ShowMouseScrollDropdown(DropDownButtonWidget dropdown, GameSettings s)
{
var options = new Dictionary<string, MouseScrollType>()
{
{ "Disabled", MouseScrollType.Disabled },
{ "Standard", MouseScrollType.Standard },
{ "Inverted", MouseScrollType.Inverted },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => s.MouseScroll == options[o],
() => s.MouseScroll = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs" startline="266" endline="288">
<![CDATA[
public static bool ShowSoundTickDropdown(DropDownButtonWidget dropdown, SoundSettings audio)
{
var options = new Dictionary<string, SoundCashTicks>()
{
{ "Extreme", SoundCashTicks.Extreme },
{ "Normal", SoundCashTicks.Normal },
{ "Disabled", SoundCashTicks.Disabled },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => audio.SoundCashTickType == options[o],
() => audio.SoundCashTickType = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1691" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\Logic\CncSettingsLogic.cs" startline="175" endline="196">
<![CDATA[
static bool ShowMouseScrollDropdown(DropDownButtonWidget dropdown, GameSettings s)
{
var options = new Dictionary<string, MouseScrollType>()
{
{ "Disabled", MouseScrollType.Disabled },
{ "Standard", MouseScrollType.Standard },
{ "Inverted", MouseScrollType.Inverted },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => s.MouseScroll == options[o],
() => s.MouseScroll = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs" startline="289" endline="310">
<![CDATA[
public static bool ShowWindowModeDropdown(DropDownButtonWidget dropdown, GraphicSettings s)
{
var options = new Dictionary<string, WindowMode>()
{
{ "Pseudo-Fullscreen", WindowMode.PseudoFullscreen },
{ "Fullscreen", WindowMode.Fullscreen },
{ "Windowed", WindowMode.Windowed },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => s.Mode == options[o],
() => s.Mode = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1692" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="33" endline="81">
<![CDATA[
public readonly int Columns = 3;
public readonly string TabClick = null;
public readonly string DisabledTabClick = null;
public readonly string TooltipContainer;
public readonly string TooltipTemplate = "PRODUCTION_TOOLTIP";
public readonly string ReadyText = "";
public readonly string HoldText = "";
public string TooltipActor { get; private set; }
public readonly World world;
Lazy<TooltipContainerWidget> tooltipContainer;
ProductionQueue currentQueue;
public ProductionQueue CurrentQueue
{
get { return currentQueue; }
set { currentQueue = value; RefreshIcons(); }
}
public override Rectangle EventBounds { get { return eventBounds; } }
Dictionary<Rectangle, ProductionIcon> Icons = new Dictionary<Rectangle, ProductionIcon>();
Dictionary<string, Sprite> iconSprites;
Animation cantBuild, clock;
Rectangle eventBounds = Rectangle.Empty;
readonly WorldRenderer worldRenderer;
SpriteFont overlayFont;
float2 holdOffset, readyOffset, timeOffset, queuedOffset;
[ObjectCreator.UseCtor]
public ProductionPaletteWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
tooltipContainer = Lazy.New(() =>
Ui.Root.Get<TooltipContainerWidget>(TooltipContainer));
cantBuild = new Animation("clock");
cantBuild.PlayFetchIndex("idle", () => 0);
clock = new Animation("clock");
iconSprites = Rules.Info.Values
.Where(u => u.Traits.Contains<BuildableInfo>() && u.Name[0] != '^')
.ToDictionary(
u => u.Name,
u => Game.modData.SpriteLoader.LoadAllSprites(
u.Traits.Get<TooltipInfo>().Icon ?? (u.Name + "icon"))[0]);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs" startline="26" endline="77">
<![CDATA[
public int Columns = 3;
public int Rows = 5;
public string ReadyText = "";
public string HoldText = "";
public string RequiresText = "";
public int IconWidth = 64;
public int IconHeight = 48;
ProductionQueue CurrentQueue;
List<ProductionQueue> VisibleQueues;
bool paletteOpen = false;
Dictionary<string, Sprite> iconSprites;
float2 paletteOpenOrigin = new float2(Game.viewport.Width - 215, 280);
float2 paletteClosedOrigin = new float2(Game.viewport.Width - 16, 280);
float2 paletteOrigin;
int paletteAnimationLength = 7;
int paletteAnimationFrame = 0;
bool paletteAnimating = false;
List<Pair<Rectangle, Action<MouseInput>>> buttons = new List<Pair<Rectangle, Action<MouseInput>>>();
List<Pair<Rectangle, Action<MouseInput>>> tabs = new List<Pair<Rectangle, Action<MouseInput>>>();
Animation cantBuild;
Animation clock;
readonly WorldRenderer worldRenderer;
readonly World world;
[ObjectCreator.UseCtor]
public BuildPaletteWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
cantBuild = new Animation("clock");
cantBuild.PlayFetchIndex("idle", () => 0);
clock = new Animation("clock");
paletteOrigin = paletteClosedOrigin;
VisibleQueues = new List<ProductionQueue>();
CurrentQueue = null;
iconSprites = Rules.Info.Values
.Where(u => u.Traits.Contains<BuildableInfo>() && u.Name[0] != '^')
.ToDictionary(
u => u.Name,
u => Game.modData.SpriteLoader.LoadAllSprites(
u.Traits.Get<TooltipInfo>().Icon ?? (u.Name + "icon"))[0]);
}
public override Rectangle EventBounds
{
get { return new Rectangle((int)(paletteOrigin.X) - 24, (int)(paletteOrigin.Y), 215, Math.Max(IconHeight * numActualRows, 40 * tabs.Count + 9)); }
}
public override void Tick()
{
VisibleQueues.Clear();
var queues = world.ActorsWithTrait<ProductionQueue>()
.Where(p => p.Actor.Owner == world.LocalPlayer)
.Select(p => p.Trait);
if (CurrentQueue != null && CurrentQueue.self.Destroyed)
CurrentQueue = null;
foreach (var queue in queues)
{
if (queue.AllItems().Any())
VisibleQueues.Add(queue);
else if (CurrentQueue == queue)
CurrentQueue = null;
}
if (CurrentQueue == null)
CurrentQueue = VisibleQueues.FirstOrDefault();
TickPaletteAnimation(world);
}
void TickPaletteAnimation(World world)
{
if (!paletteAnimating)
return;
if (paletteOpen)
paletteAnimationFrame++;
else
paletteAnimationFrame--;
if (paletteAnimationFrame <= paletteAnimationLength)
paletteOrigin = float2.Lerp(paletteClosedOrigin, paletteOpenOrigin, paletteAnimationFrame * 1.0f / paletteAnimationLength);
if (paletteAnimationFrame == 1 && paletteOpen)
Sound.PlayNotification(null, "Sounds", "BuildPaletteOpen", null);
if (paletteAnimationFrame == paletteAnimationLength + -1 && !paletteOpen)
Sound.PlayNotification(null, "Sounds", "BuildPaletteClose", null);
if ((paletteAnimationFrame == 0 && !paletteOpen)
|| (paletteAnimationFrame == paletteAnimationLength && paletteOpen))
{
paletteAnimating = false;
}
}
public void SetCurrentTab(ProductionQueue queue)
{
if (!paletteOpen)
paletteAnimating = true;
paletteOpen = true;
CurrentQueue = queue;
}
public override bool HandleKeyPress(KeyInput e)
{
if (e.Event == KeyInputEvent.Up) return false;
if (e.KeyName == Game.Settings.Keys.CycleTabsKey)
{
TabChange(e.Modifiers.HasModifier(Modifiers.Shift));
return true;
}
return DoBuildingHotkey(e.KeyName, world);
}
public override bool HandleMouseInput(MouseInput mi)
{
if (mi.Event != MouseInputEvent.Down)
return false;
if (mi.Button == MouseButton.WheelDown)
{
TabChange(false);
return true;
}
if (mi.Button == MouseButton.WheelUp)
{
TabChange(true);
return true;
}
var action = tabs.Where(a => a.First.Contains(mi.Location))
.Select(a => a.Second).FirstOrDefault();
if (action == null && paletteOpen)
action = buttons.Where(a => a.First.Contains(mi.Location))
.Select(a => a.Second).FirstOrDefault();
if (action == null)
return false;
action(mi);
return true;
}
public override void Draw()
{
if (!IsVisible()) return;
int paletteHeight = DrawPalette(CurrentQueue);
DrawBuildTabs(world, paletteHeight);
}
int numActualRows = 5;
[ObjectCreator.UseCtor]
public BuildPaletteWidget(World world, WorldRenderer worldRenderer)
{
this.world = world;
this.worldRenderer = worldRenderer;
cantBuild = new Animation("clock");
cantBuild.PlayFetchIndex("idle", () => 0);
clock = new Animation("clock");
paletteOrigin = paletteClosedOrigin;
VisibleQueues = new List<ProductionQueue>();
CurrentQueue = null;
iconSprites = Rules.Info.Values
.Where(u => u.Traits.Contains<BuildableInfo>() && u.Name[0] != '^')
.ToDictionary(
u => u.Name,
u => Game.modData.SpriteLoader.LoadAllSprites(
u.Traits.Get<TooltipInfo>().Icon ?? (u.Name + "icon"))[0]);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1693" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="91" endline="97">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer != null)
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="140" endline="146">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1694" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="91" endline="97">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer != null)
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
Func<string> getText = () => TooltipFormat.F(GetUsed(), GetProvided());
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "getText", getText }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1695" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="98" endline="103">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer != null)
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="147" endline="152">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1696" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="98" endline="103">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer != null)
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1697" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="109" endline="181">
<![CDATA[
if (mi.Event == MouseInputEvent.Move)
TooltipActor = icon != null ? icon.Name
if (icon == null)
return false;
if (mi.Event != MouseInputEvent.Down)
return true;
var actor = Rules.Info[icon.Name];
var first = icon.Queued.FirstOrDefault();
if (mi.Button == MouseButton.Left)
{
if (first != null && first.Done && actor.Traits.Contains<BuildingInfo>())
{
Sound.Play(TabClick);
world.OrderGenerator = new PlaceBuildingOrderGenerator(CurrentQueue.self, icon.Name);
}
else if (first != null && first.Paused)
{
Sound.Play(TabClick);
world.IssueOrder(Order.PauseProduction(CurrentQueue.self, icon.Name, false));
}
else if (CurrentQueue.BuildableItems().Any(a => a.Name == icon.Name))
{
Sound.Play(TabClick);
Sound.PlayNotification(world.LocalPlayer, "Speech", CurrentQueue.Info.QueuedAudio, world.LocalPlayer.Country.Race);
world.IssueOrder(Order.StartProduction(CurrentQueue.self, icon.Name,
Game.GetModifierKeys().HasModifier(Modifiers.Shift) ? 5
}
else
Sound.Play(DisabledTabClick);
}
else if (mi.Button == MouseButton.Right)
{
if (first != null)
{
Sound.Play(TabClick);
if (first.Paused || first.Done || first.TotalCost == first.RemainingCost)
{
Sound.PlayNotification(world.LocalPlayer, "Speech", CurrentQueue.Info.CancelledAudio, world.LocalPlayer.Country.Race);
world.IssueOrder(Order.CancelProduction(CurrentQueue.self, icon.Name,
Game.GetModifierKeys().HasModifier(Modifiers.Shift) ? 5
}
else
{
Sound.PlayNotification(world.LocalPlayer, "Speech", CurrentQueue.Info.OnHoldAudio, world.LocalPlayer.Country.Race);
world.IssueOrder(Order.PauseProduction(CurrentQueue.self, icon.Name, true));
}
}
else
Sound.Play(DisabledTabClick);
}
return true;
}
public void RefreshIcons()
{
Icons = new Dictionary<Rectangle, ProductionIcon>();
if (CurrentQueue == null)
return;
var allBuildables = CurrentQueue.AllItems().OrderBy(a => a.Traits.Get<BuildableInfo>().BuildPaletteOrder);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionPaletteWidget.cs" startline="182" endline="214">
<![CDATA[
var i = 0;
var rb = RenderBounds;
foreach (var item in allBuildables)
{
var x = i % Columns;
var y = i / Columns;
var rect =  new Rectangle(rb.X + x * 64 + 1, rb.Y + y * 48 + 1, 64, 48);
var pi = new ProductionIcon()
{
Name = item.Name,
Sprite = iconSprites[item.Name],
Pos = new float2(rect.Location),
Queued = CurrentQueue.AllQueued().Where(a => a.Item == item.Name).ToList(),
};
Icons.Add(rect, pi);
i++;
}
eventBounds = Icons.Keys.Aggregate(Rectangle.Union);
}
public override void Draw()
{
overlayFont = Game.Renderer.Fonts["TinyBold"];
timeOffset = new float2(32,24) - overlayFont.Measure(WidgetUtils.FormatTime(0)) / 2;
queuedOffset = new float2(4,2);
holdOffset = new float2(32,24) - overlayFont.Measure(HoldText) / 2;
readyOffset = new float2(32,24) - overlayFont.Measure(ReadyText) / 2;
if (CurrentQueue == null)
return;
var buildableItems = CurrentQueue.BuildableItems().OrderBy(a => a.Traits.Get<BuildableInfo>().BuildPaletteOrder);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1698" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ProductionTabsWidget.cs" startline="266" endline="278">
<![CDATA[
public override bool HandleKeyPress(KeyInput e)
{
if (e.Event != KeyInputEvent.Down) return false;
if (e.KeyName == Game.Settings.Keys.CycleTabsKey)
{
Sound.PlayNotification(null, "Sounds", "ClickSound", null);
SelectNextTab(e.Modifiers.HasModifier(Modifiers.Shift));
return true;
}
return false;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs" startline="147" endline="157">
<![CDATA[
public override bool HandleKeyPress(KeyInput e)
{
if (e.Event == KeyInputEvent.Up) return false;
if (e.KeyName == Game.Settings.Keys.CycleTabsKey)
{
TabChange(e.Modifiers.HasModifier(Modifiers.Shift));
return true;
}
return DoBuildingHotkey(e.KeyName, world);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1699" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="140" endline="146">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.SetTooltip(TooltipTemplate,
new WidgetArgs() {{ "palette", this }});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="42" endline="48">
<![CDATA[
public override void MouseEntered()
{
if (TooltipContainer == null) return;
Func<string> getText = () => TooltipFormat.F(GetUsed(), GetProvided());
tooltipContainer.Value.SetTooltip(TooltipTemplate, new WidgetArgs() {{ "getText", getText }});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1700" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\SupportPowersWidget.cs" startline="147" endline="152">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.Cnc\Widgets\ResourceBarWidget.cs" startline="49" endline="54">
<![CDATA[
public override void MouseExited()
{
if (TooltipContainer == null) return;
tooltipContainer.Value.RemoveTooltip();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1701" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\D2kLoadScreen.cs" startline="34" endline="45">
<![CDATA[
{
Info = info;
r = Game.Renderer;
if (r == null) return;
var s = new Sheet("mods/d2k/uibits/loadscreen.png");
Logo = new Sprite(s, new Rectangle(0,0,256,256), TextureChannel.Alpha);
Stripe = new Sprite(s, new Rectangle(256,0,256,256), TextureChannel.Alpha);
StripeRect = new Rectangle(0, Renderer.Resolution.Height/2 - 128, Renderer.Resolution.Width, 256);
LogoPos =  new float2(Renderer.Resolution.Width/2 - 128, Renderer.Resolution.Height/2 - 128);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RALoadScreen.cs" startline="37" endline="49">
<![CDATA[
{
Info = info;
r = Game.Renderer;
if (r == null) return;
var s = new Sheet(Info["LoadScreenImage"]);
Logo = new Sprite(s, new Rectangle(0,0,256,256), TextureChannel.Alpha);
Stripe = new Sprite(s, new Rectangle(256,0,256,256), TextureChannel.Alpha);
StripeRect = new Rectangle(0, Renderer.Resolution.Height/2 - 128, Renderer.Resolution.Width, 256);
LogoPos =  new float2(Renderer.Resolution.Width/2 - 128, Renderer.Resolution.Height/2 - 128);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1702" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\D2kLoadScreen.cs" startline="46" endline="68">
<![CDATA[
public void Display()
{
if (r == null)
return;
if (lastLoadScreen.ElapsedTime() < 0.5)
return;
if (r.Fonts == null)
return;
lastLoadScreen.Reset();
var text = Comments.Random(Game.CosmeticRandom);
var textSize = r.Fonts["Bold"].Measure(text);
r.BeginFrame(float2.Zero, 1f);
WidgetUtils.FillRectWithSprite(StripeRect, Stripe);
r.RgbaSpriteRenderer.DrawSprite(Logo, LogoPos);
r.Fonts["Bold"].DrawText(text, new float2(Renderer.Resolution.Width - textSize.X - 20, Renderer.Resolution.Height - textSize.Y - 20), Color.White);
r.EndFrame( new NullInputHandler() );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RALoadScreen.cs" startline="50" endline="72">
<![CDATA[
public void Display()
{
if (r == null)
return;
if (lastLoadScreen.ElapsedTime() < 0.5)
return;
if (r.Fonts == null)
return;
lastLoadScreen.Reset();
var text = Comments.Random(Game.CosmeticRandom);
var textSize = r.Fonts["Bold"].Measure(text);
r.BeginFrame(float2.Zero, 1f);
WidgetUtils.FillRectWithSprite(StripeRect, Stripe);
r.RgbaSpriteRenderer.DrawSprite(Logo, LogoPos);
r.Fonts["Bold"].DrawText(text, new float2(Renderer.Resolution.Width - textSize.X - 20, Renderer.Resolution.Height - textSize.Y - 20), Color.White);
r.EndFrame( new NullInputHandler() );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1703" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\D2kLoadScreen.cs" startline="75" endline="93">
<![CDATA[
void TestAndContinue()
{
Ui.ResetAll();
if (!FileSystem.Exists(Info["TestFile"]))
{
var args = new WidgetArgs()
{
{ "continueLoading", () => TestAndContinue() },
{ "installData", Info }
};
Ui.OpenWindow(Info["InstallerMenuWidget"], args);
}
else
{
Ui.ResetAll();
Game.LoadShellMap();
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RALoadScreen.cs" startline="79" endline="94">
<![CDATA[
void TestAndContinue()
{
Ui.ResetAll();
if (!FileSystem.Exists(Info["TestFile"]))
{
var args = new WidgetArgs()
{
{ "continueLoading", () => TestAndContinue() },
{ "installData", Info }
};
Ui.OpenWindow(Info["InstallerMenuWidget"], args);
}
else
Game.LoadShellMap();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1704" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallLogic.cs" startline="19" endline="40">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kInstallLogic(Widget widget, Dictionary<string,string> installData, Action continueLoading)
{
var panel = widget.Get("INSTALL_PANEL");
var args = new WidgetArgs()
{
{ "afterInstall", () => { Ui.CloseWindow(); continueLoading(); } },
{ "installData", installData },
{ "continueLoading", continueLoading }
};
panel.Get<ButtonWidget>("DOWNLOAD_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_DOWNLOAD_PANEL", args);
panel.Get<ButtonWidget>("COPY_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_FROMCD_PANEL", args);
panel.Get<ButtonWidget>("EXTRACT_BUTTON").OnClick = () =>
Ui.OpenWindow("EXTRACT_GAMEFILES_PANEL", args);
panel.Get<ButtonWidget>("QUIT_BUTTON").OnClick = Game.Exit;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallLogic.cs" startline="19" endline="37">
<![CDATA[
[ObjectCreator.UseCtor]
public RAInstallLogic(Widget widget, Dictionary<string,string> installData, Action continueLoading)
{
var panel = widget.Get("INSTALL_PANEL");
var args = new WidgetArgs()
{
{ "afterInstall", () => { Ui.CloseWindow(); continueLoading(); } },
{ "installData", installData },
{ "continueLoading", continueLoading }
};
panel.Get<ButtonWidget>("DOWNLOAD_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_DOWNLOAD_PANEL", args);
panel.Get<ButtonWidget>("INSTALL_BUTTON").OnClick = () =>
Ui.OpenWindow("INSTALL_FROMCD_PANEL", args);
panel.Get<ButtonWidget>("QUIT_BUTTON").OnClick = Game.Exit;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1705" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kExtractGameFilesLogic.cs" startline="32" endline="50">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kExtractGameFilesLogic(Widget widget, Action continueLoading)
{
panel = widget.Get("EXTRACT_GAMEFILES_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
backButton = panel.Get<ButtonWidget>("BACK_BUTTON");
backButton.OnClick = Ui.CloseWindow;
retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.OnClick = Extract;
extractingContainer = panel.Get("EXTRACTING");
copyFilesContainer = panel.Get("COPY_FILES");
Extract();
this.continueLoading = continueLoading;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="31" endline="49">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kInstallFromCDLogic(Widget widget, Action continueLoading)
{
panel = widget.Get("INSTALL_FROMCD_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
backButton = panel.Get<ButtonWidget>("BACK_BUTTON");
backButton.OnClick = Ui.CloseWindow;
retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.OnClick = CheckForDisk;
installingContainer = panel.Get("INSTALLING");
insertDiskContainer = panel.Get("INSERT_DISK");
CheckForDisk();
this.continueLoading = continueLoading;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1706" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kExtractGameFilesLogic.cs" startline="32" endline="50">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kExtractGameFilesLogic(Widget widget, Action continueLoading)
{
panel = widget.Get("EXTRACT_GAMEFILES_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
backButton = panel.Get<ButtonWidget>("BACK_BUTTON");
backButton.OnClick = Ui.CloseWindow;
retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.OnClick = Extract;
extractingContainer = panel.Get("EXTRACTING");
copyFilesContainer = panel.Get("COPY_FILES");
Extract();
this.continueLoading = continueLoading;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="30" endline="47">
<![CDATA[
[ObjectCreator.UseCtor]
public RAInstallFromCDLogic(Widget widget, Action continueLoading)
{
this.continueLoading = continueLoading;
panel = widget.Get("INSTALL_FROMCD_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
backButton = panel.Get<ButtonWidget>("BACK_BUTTON");
backButton.OnClick = Ui.CloseWindow;
retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.OnClick = CheckForDisk;
installingContainer = panel.Get("INSTALLING");
insertDiskContainer = panel.Get("INSERT_DISK");
CheckForDisk();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1707" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kExtractGameFilesLogic.cs" startline="58" endline="698">
<![CDATA[
var PathToDataR8 = Path.Combine(Platform.SupportDir, "Content/d2k/DATA.R8");
var PathToPalette = "mods/d2k/bits/d2k.pal";
var PathToSHPs = Path.Combine(Platform.SupportDir, "Content/d2k/SHPs");
var PathToTilesets = Path.Combine(Platform.SupportDir, "Content/d2k/Tilesets");
var ExtractGameFiles = new string[][]
{
new string[] {"--r8", PathToDataR8, PathToPalette, "0", "2", Path.Combine(PathToSHPs, "overlay")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3", "3", Path.Combine(PathToSHPs, "repairing")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4", "4", Path.Combine(PathToSHPs, "black")},
new string[] {"--r8", PathToDataR8, PathToPalette, "5", "8", Path.Combine(PathToSHPs, "selectionedges")},
new string[] {"--r8", PathToDataR8, PathToPalette, "9", "9", Path.Combine(PathToSHPs, "bar1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "10", "10", Path.Combine(PathToSHPs, "bar2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "11", "11", Path.Combine(PathToSHPs, "bar3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "12", "12", Path.Combine(PathToSHPs, "bar4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "13", "13", Path.Combine(PathToSHPs, "bar5")},
new string[] {"--r8", PathToDataR8, PathToPalette, "14", "14", Path.Combine(PathToSHPs, "bar6")},
new string[] {"--r8", PathToDataR8, PathToPalette, "15", "16", Path.Combine(PathToSHPs, "dots")},
new string[] {"--r8", PathToDataR8, PathToPalette, "17", "26", Path.Combine(PathToSHPs, "numbers")},
new string[] {"--r8", PathToDataR8, PathToPalette, "27", "37", Path.Combine(PathToSHPs, "credits")},
new string[] {"--r8", PathToDataR8, PathToPalette, "40", "101", Path.Combine(PathToSHPs, "d2kshadow")},
new string[] {"--r8", PathToDataR8, PathToPalette, "102", "105", Path.Combine(PathToSHPs, "crates")},
new string[] {"--r8", PathToDataR8, PathToPalette, "107", "109", Path.Combine(PathToSHPs, "spicebloom")},
new string[] {"--r8", PathToDataR8, PathToPalette, "110", "111", Path.Combine(PathToSHPs, "stars")},
new string[] {"--r8", PathToDataR8, PathToPalette, "112", "113", Path.Combine(PathToSHPs, "greenuparrow")},
new string[] {"--r8", PathToDataR8, PathToPalette, "114", "129", Path.Combine(PathToSHPs, "rockcrater1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "130", "145", Path.Combine(PathToSHPs, "rockcrater2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "146", "161", Path.Combine(PathToSHPs, "sandcrater1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "162", "177", Path.Combine(PathToSHPs, "sandcrater2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "178", "193", Path.Combine(PathToSHPs, "unknown")},
new string[] {"--r8", PathToDataR8, PathToPalette, "194", "205", Path.Combine(PathToSHPs, "unknown2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "206", "381", Path.Combine(PathToSHPs, "rifle"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "382", "457", Path.Combine(PathToSHPs, "rifledeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "458", "633", Path.Combine(PathToSHPs, "bazooka"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "634", "693", Path.Combine(PathToSHPs, "bazookadeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "694", "869", Path.Combine(PathToSHPs, "fremen"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "870", "929", Path.Combine(PathToSHPs, "fremendeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "930", "1105", Path.Combine(PathToSHPs, "sardaukar"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1106", "1165", Path.Combine(PathToSHPs, "sardaukardeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1166", "1341", Path.Combine(PathToSHPs, "engineer"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1342", "1401", Path.Combine(PathToSHPs, "engineerdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1402", "1457", Path.Combine(PathToSHPs, "thumper"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1458", "1462", Path.Combine(PathToSHPs, "thumping"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1463", "1542", Path.Combine(PathToSHPs, "thumper2"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1543", "1602", Path.Combine(PathToSHPs, "thumperdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1603", "1634", Path.Combine(PathToSHPs, "missiletank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1635", "1666", Path.Combine(PathToSHPs, "trike"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1667", "1698", Path.Combine(PathToSHPs, "quad"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1699", "1730", Path.Combine(PathToSHPs, "harvester"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1731", "1762", Path.Combine(PathToSHPs, "combata"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1763", "1794", Path.Combine(PathToSHPs, "siegetank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1795", "1826", Path.Combine(PathToSHPs, "dmcv"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1827", "1858", Path.Combine(PathToSHPs, "sonictank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1859", "1890", Path.Combine(PathToSHPs, "combataturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1891", "1922", Path.Combine(PathToSHPs, "siegeturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1923", "1954", Path.Combine(PathToSHPs, "carryall"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1955", "2050", Path.Combine(PathToSHPs, "orni"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2051", "2082", Path.Combine(PathToSHPs, "combath"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2083", "2114", Path.Combine(PathToSHPs, "devast"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2115", "2146", Path.Combine(PathToSHPs, "combathturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2147", "2148", Path.Combine(PathToSHPs, "deathhandmissile")},
new string[] {"--r8", PathToDataR8, PathToPalette, "2149", "2324", Path.Combine(PathToSHPs, "saboteur"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2325", "2388", Path.Combine(PathToSHPs, "saboteurdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2389", "2420", Path.Combine(PathToSHPs, "deviatortank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2421", "2452", Path.Combine(PathToSHPs, "raider"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2453", "2484", Path.Combine(PathToSHPs, "combato"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2485", "2516", Path.Combine(PathToSHPs, "combatoturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2517", "2517", Path.Combine(PathToSHPs, "frigate"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2518", "2520", Path.Combine(PathToSHPs, "heavya"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2521", "2522", Path.Combine(PathToSHPs, "radara"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2523", "2524", Path.Combine(PathToSHPs, "pwra"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2525", "2526", Path.Combine(PathToSHPs, "barra"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2527", "2558", Path.Combine(PathToSHPs, "walla"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2559", "2560", Path.Combine(PathToSHPs, "conyarda"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2561", "2563", Path.Combine(PathToSHPs, "refa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2564", "2565", Path.Combine(PathToSHPs, "hightecha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2566", "2570", Path.Combine(PathToSHPs, "siloa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2571", "2572", Path.Combine(PathToSHPs, "repaira"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2573", "2588", Path.Combine(PathToSHPs, "guntowera"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2589", "2620", Path.Combine(PathToSHPs, "gunturreta"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2621", "2636", Path.Combine(PathToSHPs, "rockettowera"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2637", "2668", Path.Combine(PathToSHPs, "rocketturreta"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2669", "2670", Path.Combine(PathToSHPs, "researcha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2671", "2672", Path.Combine(PathToSHPs, "starporta"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2673", "2675", Path.Combine(PathToSHPs, "lighta"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2676", "2677", Path.Combine(PathToSHPs, "palacea"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2678", "2680", Path.Combine(PathToSHPs, "heavyh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2681", "2682", Path.Combine(PathToSHPs, "radarh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2683", "2684", Path.Combine(PathToSHPs, "pwrh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2685", "2686", Path.Combine(PathToSHPs, "barrh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2687", "2718", Path.Combine(PathToSHPs, "wallh"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2719", "2720", Path.Combine(PathToSHPs, "conyardh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2721", "2723", Path.Combine(PathToSHPs, "refh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2724", "2725", Path.Combine(PathToSHPs, "hightechh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2726", "2730", Path.Combine(PathToSHPs, "siloh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2731", "2732", Path.Combine(PathToSHPs, "repairh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2733", "2748", Path.Combine(PathToSHPs, "guntowerh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2749", "2780", Path.Combine(PathToSHPs, "gunturreth"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2781", "2796", Path.Combine(PathToSHPs, "rockettowerh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2797", "2828", Path.Combine(PathToSHPs, "rocketturreth"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2829", "2830", Path.Combine(PathToSHPs, "researchh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2831", "2832", Path.Combine(PathToSHPs, "starporth"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2833", "2835", Path.Combine(PathToSHPs, "lighth"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2836", "2837", Path.Combine(PathToSHPs, "palaceh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2838", "2840", Path.Combine(PathToSHPs, "heavyo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2841", "2842", Path.Combine(PathToSHPs, "radaro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2843", "2844", Path.Combine(PathToSHPs, "pwro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2845", "2846", Path.Combine(PathToSHPs, "barro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2847", "2878", Path.Combine(PathToSHPs, "wallo"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2879", "2880", Path.Combine(PathToSHPs, "conyardo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2881", "2883", Path.Combine(PathToSHPs, "refo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2884", "2885", Path.Combine(PathToSHPs, "hightecho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2886", "2890", Path.Combine(PathToSHPs, "siloo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2891", "2892", Path.Combine(PathToSHPs, "repairo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2893", "2908", Path.Combine(PathToSHPs, "guntowero"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2909", "2940", Path.Combine(PathToSHPs, "gunturreto"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2941", "2956", Path.Combine(PathToSHPs, "rockettowero"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2957", "2988", Path.Combine(PathToSHPs, "rocketturreto"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2989", "2990", Path.Combine(PathToSHPs, "researcho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2991", "2992", Path.Combine(PathToSHPs, "starporto"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2993", "2995", Path.Combine(PathToSHPs, "lighto"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2996", "2997", Path.Combine(PathToSHPs, "palaceo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2998", "2998", Path.Combine(PathToSHPs, "sietch"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2999", "3000", Path.Combine(PathToSHPs, "starportc"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3001", "3003", Path.Combine(PathToSHPs, "heavyc"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3004", "3005", Path.Combine(PathToSHPs, "palacec"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3006", "3007", Path.Combine(PathToSHPs, "conyardh2"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3008", "3013", Path.Combine(PathToSHPs, "plates")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3014", "3014", Path.Combine(PathToSHPs, "unknown3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3015", "3078", Path.Combine(PathToSHPs, "rpg"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3079", "3087", Path.Combine(PathToSHPs, "unknown4"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3088", "3247", Path.Combine(PathToSHPs, "missile"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3248", "3279", Path.Combine(PathToSHPs, "doubleblast"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3280", "3283", Path.Combine(PathToSHPs, "bombs"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3284", "3287", Path.Combine(PathToSHPs, "unknown6"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3288", "3289", Path.Combine(PathToSHPs, "unknown7"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3290", "3303", Path.Combine(PathToSHPs, "unknown8"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3304", "3305", Path.Combine(PathToSHPs, "unknown9"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3306", "3369", Path.Combine(PathToSHPs, "missile2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3370", "3380", Path.Combine(PathToSHPs, "unload"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3381", "3385", Path.Combine(PathToSHPs, "harvest"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3386", "3389", Path.Combine(PathToSHPs, "miniboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3390", "3402", Path.Combine(PathToSHPs, "mediboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3403", "3417", Path.Combine(PathToSHPs, "mediboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3418", "3420", Path.Combine(PathToSHPs, "minifire"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3421", "3428", Path.Combine(PathToSHPs, "miniboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3429", "3432", Path.Combine(PathToSHPs, "minibooms"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3433", "3447", Path.Combine(PathToSHPs, "bigboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3448", "3470", Path.Combine(PathToSHPs, "bigboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3471", "3493", Path.Combine(PathToSHPs, "bigboom3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3494", "3501", Path.Combine(PathToSHPs, "unknown10"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3502", "3509", Path.Combine(PathToSHPs, "unknown11"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3510", "3511", Path.Combine(PathToSHPs, "unknown12"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3512", "3530", Path.Combine(PathToSHPs, "movingsand"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3531", "3534", Path.Combine(PathToSHPs, "unknown13"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3535", "3539", Path.Combine(PathToSHPs, "unknown14"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3540", "3543", Path.Combine(PathToSHPs, "unknown15"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3544", "3548", Path.Combine(PathToSHPs, "unknown16"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3549", "3564", Path.Combine(PathToSHPs, "wormjaw"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3565", "3585", Path.Combine(PathToSHPs, "wormdust"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3586", "3600", Path.Combine(PathToSHPs, "wormsigns1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3601", "3610", Path.Combine(PathToSHPs, "wormsigns2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3611", "3615", Path.Combine(PathToSHPs, "wormsigns3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3616", "3620", Path.Combine(PathToSHPs, "wormsigns4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3621", "3625", Path.Combine(PathToSHPs, "rings"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3626", "3630", Path.Combine(PathToSHPs, "minipiff"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3631", "3678", Path.Combine(PathToSHPs, "movingsand2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3679", "3686", Path.Combine(PathToSHPs, "selling"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3687", "3693", Path.Combine(PathToSHPs, "shockwave"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3694", "3711", Path.Combine(PathToSHPs, "electroplosion"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3712", "3722", Path.Combine(PathToSHPs, "fire"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3723", "3734", Path.Combine(PathToSHPs, "fire2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3735", "3738", Path.Combine(PathToSHPs, "unknown21"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3739", "3742", Path.Combine(PathToSHPs, "unknown22"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3743", "3774", Path.Combine(PathToSHPs, "doublemuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3775", "3806", Path.Combine(PathToSHPs, "muzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3807", "3838", Path.Combine(PathToSHPs, "doubleblastmuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3839", "3870", Path.Combine(PathToSHPs, "minimuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3871", "3872", Path.Combine(PathToSHPs, "unknown17"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3873", "3875", Path.Combine(PathToSHPs, "unknown18"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3876", "3876", Path.Combine(PathToSHPs, "unknown19"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3877", "3884", Path.Combine(PathToSHPs, "burst"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3885", "3898", Path.Combine(PathToSHPs, "fire3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3899", "3910", Path.Combine(PathToSHPs, "energy"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3911", "3946", Path.Combine(PathToSHPs, "reveal"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3947", "3964", Path.Combine(PathToSHPs, "orbit"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3965", "3979", Path.Combine(PathToSHPs, "mushroomcloud"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3980", "3987", Path.Combine(PathToSHPs, "mediboom3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3988", "4010", Path.Combine(PathToSHPs, "largeboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4011", "4011", Path.Combine(PathToSHPs, "rifleicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4012", "4012", Path.Combine(PathToSHPs, "bazookaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4013", "4013", Path.Combine(PathToSHPs, "engineericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4014", "4014", Path.Combine(PathToSHPs, "thumpericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4015", "4015", Path.Combine(PathToSHPs, "sardaukaricon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4016", "4016", Path.Combine(PathToSHPs, "trikeicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4017", "4017", Path.Combine(PathToSHPs, "raidericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4018", "4018", Path.Combine(PathToSHPs, "quadicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4019", "4019", Path.Combine(PathToSHPs, "harvestericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4020", "4020", Path.Combine(PathToSHPs, "combataicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4021", "4021", Path.Combine(PathToSHPs, "combathicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4022", "4022", Path.Combine(PathToSHPs, "combatoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4023", "4023", Path.Combine(PathToSHPs, "mcvicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4024", "4024", Path.Combine(PathToSHPs, "missiletankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4025", "4025", Path.Combine(PathToSHPs, "deviatortankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4026", "4026", Path.Combine(PathToSHPs, "siegetankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4027", "4027", Path.Combine(PathToSHPs, "sonictankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4028", "4028", Path.Combine(PathToSHPs, "devasticon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4029", "4029", Path.Combine(PathToSHPs, "carryallicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4030", "4030", Path.Combine(PathToSHPs, "carryallicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4031", "4031", Path.Combine(PathToSHPs, "orniicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4032", "4032", Path.Combine(PathToSHPs, "fremenicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4033", "4033", Path.Combine(PathToSHPs, "fremenicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4034", "4034", Path.Combine(PathToSHPs, "saboteuricon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4035", "4035", Path.Combine(PathToSHPs, "deathhandicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4036", "4036", Path.Combine(PathToSHPs, "rifleicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4037", "4037", Path.Combine(PathToSHPs, "bazookaicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4038", "4038", Path.Combine(PathToSHPs, "engineericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4039", "4039", Path.Combine(PathToSHPs, "thumpericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4040", "4040", Path.Combine(PathToSHPs, "sardaukaricon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4041", "4041", Path.Combine(PathToSHPs, "trikeicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4042", "4042", Path.Combine(PathToSHPs, "raidericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4043", "4043", Path.Combine(PathToSHPs, "quadicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4044", "4044", Path.Combine(PathToSHPs, "harvestericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4045", "4045", Path.Combine(PathToSHPs, "combataicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4046", "4046", Path.Combine(PathToSHPs, "conyardaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4047", "4047", Path.Combine(PathToSHPs, "conyardhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4048", "4048", Path.Combine(PathToSHPs, "conyardoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4049", "4049", Path.Combine(PathToSHPs, "conyardaicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4050", "4050", Path.Combine(PathToSHPs, "4plateaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4051", "4051", Path.Combine(PathToSHPs, "4platehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4052", "4052", Path.Combine(PathToSHPs, "4plateoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4053", "4053", Path.Combine(PathToSHPs, "6plateaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4054", "4054", Path.Combine(PathToSHPs, "6platehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4055", "4055", Path.Combine(PathToSHPs, "6plateoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4056", "4056", Path.Combine(PathToSHPs, "pwraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4057", "4057", Path.Combine(PathToSHPs, "pwrhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4058", "4058", Path.Combine(PathToSHPs, "pwroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4059", "4059", Path.Combine(PathToSHPs, "barraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4060", "4060", Path.Combine(PathToSHPs, "barrhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4061", "4061", Path.Combine(PathToSHPs, "barroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4062", "4062", Path.Combine(PathToSHPs, "orniicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4063", "4063", Path.Combine(PathToSHPs, "wallaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4064", "4064", Path.Combine(PathToSHPs, "wallhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4065", "4065", Path.Combine(PathToSHPs, "walloicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4066", "4066", Path.Combine(PathToSHPs, "refaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4067", "4067", Path.Combine(PathToSHPs, "refhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4068", "4068", Path.Combine(PathToSHPs, "refoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4069", "4069", Path.Combine(PathToSHPs, "guntoweraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4070", "4070", Path.Combine(PathToSHPs, "guntowerhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4071", "4071", Path.Combine(PathToSHPs, "guntoweroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4072", "4072", Path.Combine(PathToSHPs, "radaraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4073", "4073", Path.Combine(PathToSHPs, "radarhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4074", "4074", Path.Combine(PathToSHPs, "radaroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4075", "4075", Path.Combine(PathToSHPs, "rockettoweraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4076", "4076", Path.Combine(PathToSHPs, "rockettowerhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4077", "4077", Path.Combine(PathToSHPs, "rockettoweroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4078", "4078", Path.Combine(PathToSHPs, "hightechaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4079", "4079", Path.Combine(PathToSHPs, "hightechhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4080", "4080", Path.Combine(PathToSHPs, "hightechoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4081", "4081", Path.Combine(PathToSHPs, "lightaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4082", "4082", Path.Combine(PathToSHPs, "lighthicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4083", "4083", Path.Combine(PathToSHPs, "lightoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4084", "4084", Path.Combine(PathToSHPs, "siloaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4085", "4085", Path.Combine(PathToSHPs, "silohicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4086", "4086", Path.Combine(PathToSHPs, "silooicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4087", "4087", Path.Combine(PathToSHPs, "heavyaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4088", "4088", Path.Combine(PathToSHPs, "heavyhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4089", "4089", Path.Combine(PathToSHPs, "heavyoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4090", "4090", Path.Combine(PathToSHPs, "orniicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4091", "4091", Path.Combine(PathToSHPs, "heavyhicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4092", "4092", Path.Combine(PathToSHPs, "starportaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4093", "4093", Path.Combine(PathToSHPs, "starporthicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4094", "4094", Path.Combine(PathToSHPs, "starportoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4095", "4095", Path.Combine(PathToSHPs, "orniicon4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4096", "4096", Path.Combine(PathToSHPs, "repairaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4097", "4097", Path.Combine(PathToSHPs, "repairhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4098", "4098", Path.Combine(PathToSHPs, "repairoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4099", "4099", Path.Combine(PathToSHPs, "researchaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4100", "4100", Path.Combine(PathToSHPs, "researchhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4101", "4101", Path.Combine(PathToSHPs, "researchoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4102", "4102", Path.Combine(PathToSHPs, "palaceaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4103", "4103", Path.Combine(PathToSHPs, "palacehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4104", "4104", Path.Combine(PathToSHPs, "palaceoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4105", "4105", Path.Combine(PathToSHPs, "orniicon5")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4106", "4106", Path.Combine(PathToSHPs, "radaraicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4107", "4107", Path.Combine(PathToSHPs, "radaraicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4108", "4108", Path.Combine(PathToSHPs, "conyardaicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4109", "4150", Path.Combine(PathToSHPs, "conmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4151", "4174", Path.Combine(PathToSHPs, "wtrpmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4175", "4194", Path.Combine(PathToSHPs, "barramake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4195", "4212", Path.Combine(PathToSHPs, "barrhmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4213", "4230", Path.Combine(PathToSHPs, "barromake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4231", "4253", Path.Combine(PathToSHPs, "refmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4254", "4273", Path.Combine(PathToSHPs, "radarmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4274", "4294", Path.Combine(PathToSHPs, "highmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4295", "4312", Path.Combine(PathToSHPs, "lightmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4313", "4327", Path.Combine(PathToSHPs, "silomake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4328", "4346", Path.Combine(PathToSHPs, "heavymake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4347", "4369", Path.Combine(PathToSHPs, "starportmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4370", "4390", Path.Combine(PathToSHPs, "repairmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4391", "4412", Path.Combine(PathToSHPs, "researchmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4413", "4435", Path.Combine(PathToSHPs, "palacemake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4436", "4449", Path.Combine(PathToSHPs, "cranea"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4450", "4463", Path.Combine(PathToSHPs, "craneh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4464", "4477", Path.Combine(PathToSHPs, "craneo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4478", "4491", Path.Combine(PathToSHPs, "cranea2"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4492", "4501", Path.Combine(PathToSHPs, "windtrapa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4502", "4511", Path.Combine(PathToSHPs, "windtraph"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4512", "4521", Path.Combine(PathToSHPs, "windtrapo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4522", "4552", Path.Combine(PathToSHPs, "disha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4553", "4582", Path.Combine(PathToSHPs, "dishh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4583", "4613", Path.Combine(PathToSHPs, "disho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4614", "4643", Path.Combine(PathToSHPs, "highweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4644", "4673", Path.Combine(PathToSHPs, "lightweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4674", "4721", Path.Combine(PathToSHPs, "heavyweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4722", "4744", Path.Combine(PathToSHPs, "unknown20"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4745", "4759", Path.Combine(PathToSHPs, "marker"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4760", "4819", Path.Combine(PathToSHPs, "researchzaps"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4820", "4840", Path.Combine(PathToSHPs, "deathhandlaunch"), "--building"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/MOUSE.R8"), PathToPalette, "0", "264", Path.Combine(PathToSHPs, "mouse")},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBASE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BASE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBASE.R8"), PathToPalette, "748", "749", Path.Combine(PathToSHPs, "spice0")},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBAT.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BAT"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBGBS.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BGBS"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXICE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "ICE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXTREE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "TREE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXWAST.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "WAST"), "--tileset"},
};
var SHPsToCreate = new string[][]
{
new string[] {"--shp", Path.Combine(PathToSHPs, "overlay.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairing.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "black.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "selectionedges.png"), "8"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar1.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar2.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar3.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar4.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar5.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar6.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dots.png"), "4"},
new string[] {"--shp", Path.Combine(PathToSHPs, "numbers.png"), "8"},
new string[] {"--shp", Path.Combine(PathToSHPs, "credits.png"), "10"},
new string[] {"--shp", Path.Combine(PathToSHPs, "d2kshadow.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "crates.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "spicebloom.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "stars.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "greenuparrow.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockcrater1.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockcrater2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sandcrater1.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sandcrater2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown2.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifledeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazooka.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazookadeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremen.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremendeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukar.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukardeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineer.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineerdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumper.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumping.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumper2.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumperdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missiletank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "trike.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "quad.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvester.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combata.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegetank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dmcv.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sonictank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combataturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegeturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "carryall.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orni.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "devast.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combathturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandmissile.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteur.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteurdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deviatortank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "raider.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combato.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combatoturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "frigate.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavya.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radara.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwra.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barra.png"), "80"},
new string[] {"--shp", Path.Combine(PathToSHPs, "walla.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyarda.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refa.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightecha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloa.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repaira.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowera.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreta.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowera.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreta.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researcha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporta.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighta.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacea.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwrh.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallh.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrh.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refh.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloh.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowerh.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreth.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowerh.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreth.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporth.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighth.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaro.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwro.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barro.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallo.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refo.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightecho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloo.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowero.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreto.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowero.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreto.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researcho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporto.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighto.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sietch.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportc.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyc.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacec.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardh2.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "plates.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown3.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rpg.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown4.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missile.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doubleblast.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bombs.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown6.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown7.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown8.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown9.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missile2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unload.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvest.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "miniboom.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minifire.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "miniboom2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minibooms.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom2.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom3.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown10.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown11.png"), "84"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown12.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "movingsand.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown13.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown14.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown15.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown16.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormjaw.png"), "68"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormdust.png"), "68"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns1.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns3.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns4.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rings.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minipiff.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "movingsand2.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "selling.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "shockwave.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "electroplosion.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown21.png"), "12"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown22.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doublemuzzle.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "muzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doubleblastmuzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minimuzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown17.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown18.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown19.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "burst.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire3.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "energy.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "reveal.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orbit.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mushroomcloud.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom3.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "largeboom.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifleicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazookaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumpericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukaricon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "trikeicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "raidericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "quadicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvestericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combataicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combathicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combatoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mcvicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missiletankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deviatortankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegetankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sonictankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "devasticon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "carryallicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orniicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremenicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteuricon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4plateaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4platehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4plateoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6plateaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6platehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6plateoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwrhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "walloicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntoweraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowerhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntoweroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettoweraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowerhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettoweroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighthicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silohicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silooicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporthicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wtrpmake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barramake.png"), "80"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrhmake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barromake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refmake.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "highmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silomake.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavymake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacemake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "cranea.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "craneh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "craneo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtrapa.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtraph.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtrapo.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "disha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dishh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "disho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "highweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown20.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "marker.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchzaps.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandlaunch.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mouse.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "spice0.png"), "32"},
};
var SHPsToTranspose = new string[][]
{
new string[] {"--transpose", Path.Combine(PathToSHPs, "orni.shp"), Path.Combine(PathToSHPs, "orni.shp"), "0", "32", "3"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "rifle.shp"), Path.Combine(PathToSHPs, "rifle.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "bazooka.shp"), Path.Combine(PathToSHPs, "bazooka.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "fremen.shp"), Path.Combine(PathToSHPs, "fremen.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "sardaukar.shp"), Path.Combine(PathToSHPs, "sardaukar.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "thumper.shp"), Path.Combine(PathToSHPs, "thumper.shp"), "8", "8", "6"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "thumper2.shp"), Path.Combine(PathToSHPs, "thumper2.shp"), "8", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "engineer.shp"), Path.Combine(PathToSHPs, "engineer.shp"), "8", "8", "6"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "saboteur.shp"), Path.Combine(PathToSHPs, "saboteur.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
};
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="80" endline="99">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "d2k", "Music" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "music/ambush.aud", "music/arakatak.aud", "music/atregain.aud", "music/entordos.aud", "music/fightpwr.aud", "music/fremen.aud", "music/hark_bat.aud", "music/landsand.aud", "music/options.aud", "music/plotting.aud", "music/risehark.aud", "music/robotix.aud", "music/score.aud", "music/soldappr.aud", "music/spicesct.aud", "music/undercon.aud", "music/waitgame.aud" };
var installCounter = 0;
var installTotal = copyFiles.Count(); //+ extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1708" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kExtractGameFilesLogic.cs" startline="58" endline="698">
<![CDATA[
var PathToDataR8 = Path.Combine(Platform.SupportDir, "Content/d2k/DATA.R8");
var PathToPalette = "mods/d2k/bits/d2k.pal";
var PathToSHPs = Path.Combine(Platform.SupportDir, "Content/d2k/SHPs");
var PathToTilesets = Path.Combine(Platform.SupportDir, "Content/d2k/Tilesets");
var ExtractGameFiles = new string[][]
{
new string[] {"--r8", PathToDataR8, PathToPalette, "0", "2", Path.Combine(PathToSHPs, "overlay")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3", "3", Path.Combine(PathToSHPs, "repairing")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4", "4", Path.Combine(PathToSHPs, "black")},
new string[] {"--r8", PathToDataR8, PathToPalette, "5", "8", Path.Combine(PathToSHPs, "selectionedges")},
new string[] {"--r8", PathToDataR8, PathToPalette, "9", "9", Path.Combine(PathToSHPs, "bar1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "10", "10", Path.Combine(PathToSHPs, "bar2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "11", "11", Path.Combine(PathToSHPs, "bar3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "12", "12", Path.Combine(PathToSHPs, "bar4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "13", "13", Path.Combine(PathToSHPs, "bar5")},
new string[] {"--r8", PathToDataR8, PathToPalette, "14", "14", Path.Combine(PathToSHPs, "bar6")},
new string[] {"--r8", PathToDataR8, PathToPalette, "15", "16", Path.Combine(PathToSHPs, "dots")},
new string[] {"--r8", PathToDataR8, PathToPalette, "17", "26", Path.Combine(PathToSHPs, "numbers")},
new string[] {"--r8", PathToDataR8, PathToPalette, "27", "37", Path.Combine(PathToSHPs, "credits")},
new string[] {"--r8", PathToDataR8, PathToPalette, "40", "101", Path.Combine(PathToSHPs, "d2kshadow")},
new string[] {"--r8", PathToDataR8, PathToPalette, "102", "105", Path.Combine(PathToSHPs, "crates")},
new string[] {"--r8", PathToDataR8, PathToPalette, "107", "109", Path.Combine(PathToSHPs, "spicebloom")},
new string[] {"--r8", PathToDataR8, PathToPalette, "110", "111", Path.Combine(PathToSHPs, "stars")},
new string[] {"--r8", PathToDataR8, PathToPalette, "112", "113", Path.Combine(PathToSHPs, "greenuparrow")},
new string[] {"--r8", PathToDataR8, PathToPalette, "114", "129", Path.Combine(PathToSHPs, "rockcrater1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "130", "145", Path.Combine(PathToSHPs, "rockcrater2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "146", "161", Path.Combine(PathToSHPs, "sandcrater1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "162", "177", Path.Combine(PathToSHPs, "sandcrater2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "178", "193", Path.Combine(PathToSHPs, "unknown")},
new string[] {"--r8", PathToDataR8, PathToPalette, "194", "205", Path.Combine(PathToSHPs, "unknown2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "206", "381", Path.Combine(PathToSHPs, "rifle"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "382", "457", Path.Combine(PathToSHPs, "rifledeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "458", "633", Path.Combine(PathToSHPs, "bazooka"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "634", "693", Path.Combine(PathToSHPs, "bazookadeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "694", "869", Path.Combine(PathToSHPs, "fremen"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "870", "929", Path.Combine(PathToSHPs, "fremendeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "930", "1105", Path.Combine(PathToSHPs, "sardaukar"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1106", "1165", Path.Combine(PathToSHPs, "sardaukardeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1166", "1341", Path.Combine(PathToSHPs, "engineer"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1342", "1401", Path.Combine(PathToSHPs, "engineerdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1402", "1457", Path.Combine(PathToSHPs, "thumper"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1458", "1462", Path.Combine(PathToSHPs, "thumping"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1463", "1542", Path.Combine(PathToSHPs, "thumper2"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1543", "1602", Path.Combine(PathToSHPs, "thumperdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1603", "1634", Path.Combine(PathToSHPs, "missiletank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1635", "1666", Path.Combine(PathToSHPs, "trike"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1667", "1698", Path.Combine(PathToSHPs, "quad"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1699", "1730", Path.Combine(PathToSHPs, "harvester"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1731", "1762", Path.Combine(PathToSHPs, "combata"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1763", "1794", Path.Combine(PathToSHPs, "siegetank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1795", "1826", Path.Combine(PathToSHPs, "dmcv"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1827", "1858", Path.Combine(PathToSHPs, "sonictank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1859", "1890", Path.Combine(PathToSHPs, "combataturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1891", "1922", Path.Combine(PathToSHPs, "siegeturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1923", "1954", Path.Combine(PathToSHPs, "carryall"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "1955", "2050", Path.Combine(PathToSHPs, "orni"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2051", "2082", Path.Combine(PathToSHPs, "combath"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2083", "2114", Path.Combine(PathToSHPs, "devast"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2115", "2146", Path.Combine(PathToSHPs, "combathturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2147", "2148", Path.Combine(PathToSHPs, "deathhandmissile")},
new string[] {"--r8", PathToDataR8, PathToPalette, "2149", "2324", Path.Combine(PathToSHPs, "saboteur"), "--infantry"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2325", "2388", Path.Combine(PathToSHPs, "saboteurdeath"), "--infantrydeath"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2389", "2420", Path.Combine(PathToSHPs, "deviatortank"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2421", "2452", Path.Combine(PathToSHPs, "raider"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2453", "2484", Path.Combine(PathToSHPs, "combato"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2485", "2516", Path.Combine(PathToSHPs, "combatoturret"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2517", "2517", Path.Combine(PathToSHPs, "frigate"), "--vehicle"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2518", "2520", Path.Combine(PathToSHPs, "heavya"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2521", "2522", Path.Combine(PathToSHPs, "radara"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2523", "2524", Path.Combine(PathToSHPs, "pwra"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2525", "2526", Path.Combine(PathToSHPs, "barra"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2527", "2558", Path.Combine(PathToSHPs, "walla"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2559", "2560", Path.Combine(PathToSHPs, "conyarda"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2561", "2563", Path.Combine(PathToSHPs, "refa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2564", "2565", Path.Combine(PathToSHPs, "hightecha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2566", "2570", Path.Combine(PathToSHPs, "siloa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2571", "2572", Path.Combine(PathToSHPs, "repaira"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2573", "2588", Path.Combine(PathToSHPs, "guntowera"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2589", "2620", Path.Combine(PathToSHPs, "gunturreta"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2621", "2636", Path.Combine(PathToSHPs, "rockettowera"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2637", "2668", Path.Combine(PathToSHPs, "rocketturreta"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2669", "2670", Path.Combine(PathToSHPs, "researcha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2671", "2672", Path.Combine(PathToSHPs, "starporta"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2673", "2675", Path.Combine(PathToSHPs, "lighta"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2676", "2677", Path.Combine(PathToSHPs, "palacea"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2678", "2680", Path.Combine(PathToSHPs, "heavyh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2681", "2682", Path.Combine(PathToSHPs, "radarh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2683", "2684", Path.Combine(PathToSHPs, "pwrh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2685", "2686", Path.Combine(PathToSHPs, "barrh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2687", "2718", Path.Combine(PathToSHPs, "wallh"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2719", "2720", Path.Combine(PathToSHPs, "conyardh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2721", "2723", Path.Combine(PathToSHPs, "refh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2724", "2725", Path.Combine(PathToSHPs, "hightechh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2726", "2730", Path.Combine(PathToSHPs, "siloh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2731", "2732", Path.Combine(PathToSHPs, "repairh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2733", "2748", Path.Combine(PathToSHPs, "guntowerh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2749", "2780", Path.Combine(PathToSHPs, "gunturreth"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2781", "2796", Path.Combine(PathToSHPs, "rockettowerh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2797", "2828", Path.Combine(PathToSHPs, "rocketturreth"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2829", "2830", Path.Combine(PathToSHPs, "researchh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2831", "2832", Path.Combine(PathToSHPs, "starporth"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2833", "2835", Path.Combine(PathToSHPs, "lighth"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2836", "2837", Path.Combine(PathToSHPs, "palaceh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2838", "2840", Path.Combine(PathToSHPs, "heavyo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2841", "2842", Path.Combine(PathToSHPs, "radaro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2843", "2844", Path.Combine(PathToSHPs, "pwro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2845", "2846", Path.Combine(PathToSHPs, "barro"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2847", "2878", Path.Combine(PathToSHPs, "wallo"), "--wall"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2879", "2880", Path.Combine(PathToSHPs, "conyardo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2881", "2883", Path.Combine(PathToSHPs, "refo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2884", "2885", Path.Combine(PathToSHPs, "hightecho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2886", "2890", Path.Combine(PathToSHPs, "siloo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2891", "2892", Path.Combine(PathToSHPs, "repairo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2893", "2908", Path.Combine(PathToSHPs, "guntowero"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2909", "2940", Path.Combine(PathToSHPs, "gunturreto"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2941", "2956", Path.Combine(PathToSHPs, "rockettowero"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2957", "2988", Path.Combine(PathToSHPs, "rocketturreto"), "--turret"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2989", "2990", Path.Combine(PathToSHPs, "researcho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2991", "2992", Path.Combine(PathToSHPs, "starporto"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2993", "2995", Path.Combine(PathToSHPs, "lighto"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2996", "2997", Path.Combine(PathToSHPs, "palaceo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2998", "2998", Path.Combine(PathToSHPs, "sietch"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "2999", "3000", Path.Combine(PathToSHPs, "starportc"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3001", "3003", Path.Combine(PathToSHPs, "heavyc"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3004", "3005", Path.Combine(PathToSHPs, "palacec"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3006", "3007", Path.Combine(PathToSHPs, "conyardh2"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3008", "3013", Path.Combine(PathToSHPs, "plates")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3014", "3014", Path.Combine(PathToSHPs, "unknown3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3015", "3078", Path.Combine(PathToSHPs, "rpg"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3079", "3087", Path.Combine(PathToSHPs, "unknown4"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3088", "3247", Path.Combine(PathToSHPs, "missile"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3248", "3279", Path.Combine(PathToSHPs, "doubleblast"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3280", "3283", Path.Combine(PathToSHPs, "bombs"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3284", "3287", Path.Combine(PathToSHPs, "unknown6"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3288", "3289", Path.Combine(PathToSHPs, "unknown7"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3290", "3303", Path.Combine(PathToSHPs, "unknown8"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3304", "3305", Path.Combine(PathToSHPs, "unknown9"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3306", "3369", Path.Combine(PathToSHPs, "missile2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3370", "3380", Path.Combine(PathToSHPs, "unload"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3381", "3385", Path.Combine(PathToSHPs, "harvest"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3386", "3389", Path.Combine(PathToSHPs, "miniboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3390", "3402", Path.Combine(PathToSHPs, "mediboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3403", "3417", Path.Combine(PathToSHPs, "mediboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3418", "3420", Path.Combine(PathToSHPs, "minifire"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3421", "3428", Path.Combine(PathToSHPs, "miniboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3429", "3432", Path.Combine(PathToSHPs, "minibooms"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3433", "3447", Path.Combine(PathToSHPs, "bigboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3448", "3470", Path.Combine(PathToSHPs, "bigboom2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3471", "3493", Path.Combine(PathToSHPs, "bigboom3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3494", "3501", Path.Combine(PathToSHPs, "unknown10"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3502", "3509", Path.Combine(PathToSHPs, "unknown11"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3510", "3511", Path.Combine(PathToSHPs, "unknown12"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3512", "3530", Path.Combine(PathToSHPs, "movingsand"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3531", "3534", Path.Combine(PathToSHPs, "unknown13"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3535", "3539", Path.Combine(PathToSHPs, "unknown14"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3540", "3543", Path.Combine(PathToSHPs, "unknown15"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3544", "3548", Path.Combine(PathToSHPs, "unknown16"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3549", "3564", Path.Combine(PathToSHPs, "wormjaw"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3565", "3585", Path.Combine(PathToSHPs, "wormdust"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3586", "3600", Path.Combine(PathToSHPs, "wormsigns1")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3601", "3610", Path.Combine(PathToSHPs, "wormsigns2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3611", "3615", Path.Combine(PathToSHPs, "wormsigns3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3616", "3620", Path.Combine(PathToSHPs, "wormsigns4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "3621", "3625", Path.Combine(PathToSHPs, "rings"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3626", "3630", Path.Combine(PathToSHPs, "minipiff"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3631", "3678", Path.Combine(PathToSHPs, "movingsand2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3679", "3686", Path.Combine(PathToSHPs, "selling"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3687", "3693", Path.Combine(PathToSHPs, "shockwave"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3694", "3711", Path.Combine(PathToSHPs, "electroplosion"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3712", "3722", Path.Combine(PathToSHPs, "fire"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3723", "3734", Path.Combine(PathToSHPs, "fire2"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3735", "3738", Path.Combine(PathToSHPs, "unknown21"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3739", "3742", Path.Combine(PathToSHPs, "unknown22"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3743", "3774", Path.Combine(PathToSHPs, "doublemuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3775", "3806", Path.Combine(PathToSHPs, "muzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3807", "3838", Path.Combine(PathToSHPs, "doubleblastmuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3839", "3870", Path.Combine(PathToSHPs, "minimuzzle"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3871", "3872", Path.Combine(PathToSHPs, "unknown17"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3873", "3875", Path.Combine(PathToSHPs, "unknown18"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3876", "3876", Path.Combine(PathToSHPs, "unknown19"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3877", "3884", Path.Combine(PathToSHPs, "burst"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3885", "3898", Path.Combine(PathToSHPs, "fire3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3899", "3910", Path.Combine(PathToSHPs, "energy"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3911", "3946", Path.Combine(PathToSHPs, "reveal"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3947", "3964", Path.Combine(PathToSHPs, "orbit"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3965", "3979", Path.Combine(PathToSHPs, "mushroomcloud"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3980", "3987", Path.Combine(PathToSHPs, "mediboom3"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "3988", "4010", Path.Combine(PathToSHPs, "largeboom"), "--projectile"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4011", "4011", Path.Combine(PathToSHPs, "rifleicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4012", "4012", Path.Combine(PathToSHPs, "bazookaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4013", "4013", Path.Combine(PathToSHPs, "engineericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4014", "4014", Path.Combine(PathToSHPs, "thumpericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4015", "4015", Path.Combine(PathToSHPs, "sardaukaricon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4016", "4016", Path.Combine(PathToSHPs, "trikeicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4017", "4017", Path.Combine(PathToSHPs, "raidericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4018", "4018", Path.Combine(PathToSHPs, "quadicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4019", "4019", Path.Combine(PathToSHPs, "harvestericon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4020", "4020", Path.Combine(PathToSHPs, "combataicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4021", "4021", Path.Combine(PathToSHPs, "combathicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4022", "4022", Path.Combine(PathToSHPs, "combatoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4023", "4023", Path.Combine(PathToSHPs, "mcvicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4024", "4024", Path.Combine(PathToSHPs, "missiletankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4025", "4025", Path.Combine(PathToSHPs, "deviatortankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4026", "4026", Path.Combine(PathToSHPs, "siegetankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4027", "4027", Path.Combine(PathToSHPs, "sonictankicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4028", "4028", Path.Combine(PathToSHPs, "devasticon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4029", "4029", Path.Combine(PathToSHPs, "carryallicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4030", "4030", Path.Combine(PathToSHPs, "carryallicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4031", "4031", Path.Combine(PathToSHPs, "orniicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4032", "4032", Path.Combine(PathToSHPs, "fremenicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4033", "4033", Path.Combine(PathToSHPs, "fremenicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4034", "4034", Path.Combine(PathToSHPs, "saboteuricon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4035", "4035", Path.Combine(PathToSHPs, "deathhandicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4036", "4036", Path.Combine(PathToSHPs, "rifleicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4037", "4037", Path.Combine(PathToSHPs, "bazookaicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4038", "4038", Path.Combine(PathToSHPs, "engineericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4039", "4039", Path.Combine(PathToSHPs, "thumpericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4040", "4040", Path.Combine(PathToSHPs, "sardaukaricon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4041", "4041", Path.Combine(PathToSHPs, "trikeicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4042", "4042", Path.Combine(PathToSHPs, "raidericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4043", "4043", Path.Combine(PathToSHPs, "quadicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4044", "4044", Path.Combine(PathToSHPs, "harvestericon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4045", "4045", Path.Combine(PathToSHPs, "combataicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4046", "4046", Path.Combine(PathToSHPs, "conyardaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4047", "4047", Path.Combine(PathToSHPs, "conyardhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4048", "4048", Path.Combine(PathToSHPs, "conyardoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4049", "4049", Path.Combine(PathToSHPs, "conyardaicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4050", "4050", Path.Combine(PathToSHPs, "4plateaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4051", "4051", Path.Combine(PathToSHPs, "4platehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4052", "4052", Path.Combine(PathToSHPs, "4plateoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4053", "4053", Path.Combine(PathToSHPs, "6plateaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4054", "4054", Path.Combine(PathToSHPs, "6platehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4055", "4055", Path.Combine(PathToSHPs, "6plateoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4056", "4056", Path.Combine(PathToSHPs, "pwraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4057", "4057", Path.Combine(PathToSHPs, "pwrhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4058", "4058", Path.Combine(PathToSHPs, "pwroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4059", "4059", Path.Combine(PathToSHPs, "barraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4060", "4060", Path.Combine(PathToSHPs, "barrhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4061", "4061", Path.Combine(PathToSHPs, "barroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4062", "4062", Path.Combine(PathToSHPs, "orniicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4063", "4063", Path.Combine(PathToSHPs, "wallaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4064", "4064", Path.Combine(PathToSHPs, "wallhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4065", "4065", Path.Combine(PathToSHPs, "walloicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4066", "4066", Path.Combine(PathToSHPs, "refaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4067", "4067", Path.Combine(PathToSHPs, "refhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4068", "4068", Path.Combine(PathToSHPs, "refoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4069", "4069", Path.Combine(PathToSHPs, "guntoweraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4070", "4070", Path.Combine(PathToSHPs, "guntowerhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4071", "4071", Path.Combine(PathToSHPs, "guntoweroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4072", "4072", Path.Combine(PathToSHPs, "radaraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4073", "4073", Path.Combine(PathToSHPs, "radarhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4074", "4074", Path.Combine(PathToSHPs, "radaroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4075", "4075", Path.Combine(PathToSHPs, "rockettoweraicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4076", "4076", Path.Combine(PathToSHPs, "rockettowerhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4077", "4077", Path.Combine(PathToSHPs, "rockettoweroicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4078", "4078", Path.Combine(PathToSHPs, "hightechaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4079", "4079", Path.Combine(PathToSHPs, "hightechhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4080", "4080", Path.Combine(PathToSHPs, "hightechoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4081", "4081", Path.Combine(PathToSHPs, "lightaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4082", "4082", Path.Combine(PathToSHPs, "lighthicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4083", "4083", Path.Combine(PathToSHPs, "lightoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4084", "4084", Path.Combine(PathToSHPs, "siloaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4085", "4085", Path.Combine(PathToSHPs, "silohicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4086", "4086", Path.Combine(PathToSHPs, "silooicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4087", "4087", Path.Combine(PathToSHPs, "heavyaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4088", "4088", Path.Combine(PathToSHPs, "heavyhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4089", "4089", Path.Combine(PathToSHPs, "heavyoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4090", "4090", Path.Combine(PathToSHPs, "orniicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4091", "4091", Path.Combine(PathToSHPs, "heavyhicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4092", "4092", Path.Combine(PathToSHPs, "starportaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4093", "4093", Path.Combine(PathToSHPs, "starporthicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4094", "4094", Path.Combine(PathToSHPs, "starportoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4095", "4095", Path.Combine(PathToSHPs, "orniicon4")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4096", "4096", Path.Combine(PathToSHPs, "repairaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4097", "4097", Path.Combine(PathToSHPs, "repairhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4098", "4098", Path.Combine(PathToSHPs, "repairoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4099", "4099", Path.Combine(PathToSHPs, "researchaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4100", "4100", Path.Combine(PathToSHPs, "researchhicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4101", "4101", Path.Combine(PathToSHPs, "researchoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4102", "4102", Path.Combine(PathToSHPs, "palaceaicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4103", "4103", Path.Combine(PathToSHPs, "palacehicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4104", "4104", Path.Combine(PathToSHPs, "palaceoicon")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4105", "4105", Path.Combine(PathToSHPs, "orniicon5")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4106", "4106", Path.Combine(PathToSHPs, "radaraicon2")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4107", "4107", Path.Combine(PathToSHPs, "radaraicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4108", "4108", Path.Combine(PathToSHPs, "conyardaicon3")},
new string[] {"--r8", PathToDataR8, PathToPalette, "4109", "4150", Path.Combine(PathToSHPs, "conmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4151", "4174", Path.Combine(PathToSHPs, "wtrpmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4175", "4194", Path.Combine(PathToSHPs, "barramake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4195", "4212", Path.Combine(PathToSHPs, "barrhmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4213", "4230", Path.Combine(PathToSHPs, "barromake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4231", "4253", Path.Combine(PathToSHPs, "refmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4254", "4273", Path.Combine(PathToSHPs, "radarmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4274", "4294", Path.Combine(PathToSHPs, "highmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4295", "4312", Path.Combine(PathToSHPs, "lightmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4313", "4327", Path.Combine(PathToSHPs, "silomake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4328", "4346", Path.Combine(PathToSHPs, "heavymake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4347", "4369", Path.Combine(PathToSHPs, "starportmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4370", "4390", Path.Combine(PathToSHPs, "repairmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4391", "4412", Path.Combine(PathToSHPs, "researchmake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4413", "4435", Path.Combine(PathToSHPs, "palacemake"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4436", "4449", Path.Combine(PathToSHPs, "cranea"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4450", "4463", Path.Combine(PathToSHPs, "craneh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4464", "4477", Path.Combine(PathToSHPs, "craneo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4478", "4491", Path.Combine(PathToSHPs, "cranea2"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4492", "4501", Path.Combine(PathToSHPs, "windtrapa"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4502", "4511", Path.Combine(PathToSHPs, "windtraph"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4512", "4521", Path.Combine(PathToSHPs, "windtrapo"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4522", "4552", Path.Combine(PathToSHPs, "disha"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4553", "4582", Path.Combine(PathToSHPs, "dishh"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4583", "4613", Path.Combine(PathToSHPs, "disho"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4614", "4643", Path.Combine(PathToSHPs, "highweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4644", "4673", Path.Combine(PathToSHPs, "lightweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4674", "4721", Path.Combine(PathToSHPs, "heavyweld"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4722", "4744", Path.Combine(PathToSHPs, "unknown20"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4745", "4759", Path.Combine(PathToSHPs, "marker"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4760", "4819", Path.Combine(PathToSHPs, "researchzaps"), "--building"},
new string[] {"--r8", PathToDataR8, PathToPalette, "4820", "4840", Path.Combine(PathToSHPs, "deathhandlaunch"), "--building"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/MOUSE.R8"), PathToPalette, "0", "264", Path.Combine(PathToSHPs, "mouse")},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBASE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BASE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBASE.R8"), PathToPalette, "748", "749", Path.Combine(PathToSHPs, "spice0")},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBAT.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BAT"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXBGBS.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "BGBS"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXICE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "ICE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXTREE.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "TREE"), "--tileset"},
new string[] {"--r8", Path.Combine(Platform.SupportDir, "Content/d2k/BLOXWAST.R8"), PathToPalette, "0", "799", Path.Combine(PathToTilesets, "WAST"), "--tileset"},
};
var SHPsToCreate = new string[][]
{
new string[] {"--shp", Path.Combine(PathToSHPs, "overlay.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairing.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "black.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "selectionedges.png"), "8"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar1.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar2.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar3.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar4.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar5.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bar6.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dots.png"), "4"},
new string[] {"--shp", Path.Combine(PathToSHPs, "numbers.png"), "8"},
new string[] {"--shp", Path.Combine(PathToSHPs, "credits.png"), "10"},
new string[] {"--shp", Path.Combine(PathToSHPs, "d2kshadow.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "crates.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "spicebloom.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "stars.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "greenuparrow.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockcrater1.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockcrater2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sandcrater1.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sandcrater2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown2.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifledeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazooka.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazookadeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremen.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremendeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukar.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukardeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineer.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineerdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumper.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumping.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumper2.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumperdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missiletank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "trike.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "quad.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvester.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combata.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegetank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dmcv.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sonictank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combataturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegeturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "carryall.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orni.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "devast.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combathturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandmissile.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteur.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteurdeath.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deviatortank.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "raider.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combato.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combatoturret.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "frigate.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavya.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radara.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwra.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barra.png"), "80"},
new string[] {"--shp", Path.Combine(PathToSHPs, "walla.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyarda.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refa.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightecha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloa.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repaira.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowera.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreta.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowera.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreta.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researcha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporta.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighta.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacea.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwrh.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallh.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrh.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refh.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloh.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowerh.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreth.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowerh.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreth.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporth.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighth.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaro.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwro.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barro.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallo.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refo.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightecho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloo.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowero.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "gunturreto.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowero.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rocketturreto.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researcho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporto.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighto.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sietch.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportc.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyc.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacec.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardh2.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "plates.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown3.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rpg.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown4.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missile.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doubleblast.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bombs.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown6.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown7.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown8.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown9.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missile2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unload.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvest.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "miniboom.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minifire.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "miniboom2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minibooms.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom2.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bigboom3.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown10.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown11.png"), "84"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown12.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "movingsand.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown13.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown14.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown15.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown16.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormjaw.png"), "68"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormdust.png"), "68"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns1.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns2.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns3.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wormsigns4.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rings.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minipiff.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "movingsand2.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "selling.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "shockwave.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "electroplosion.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire2.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown21.png"), "12"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown22.png"), "24"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doublemuzzle.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "muzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "doubleblastmuzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "minimuzzle.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown17.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown18.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown19.png"), "16"},
new string[] {"--shp", Path.Combine(PathToSHPs, "burst.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fire3.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "energy.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "reveal.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orbit.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mushroomcloud.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mediboom3.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "largeboom.png"), "72"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rifleicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "bazookaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "engineericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "thumpericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sardaukaricon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "trikeicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "raidericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "quadicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "harvestericon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combataicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combathicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "combatoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mcvicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "missiletankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deviatortankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siegetankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "sonictankicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "devasticon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "carryallicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "orniicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "fremenicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "saboteuricon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conyardoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4plateaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4platehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "4plateoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6plateaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6platehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "6plateoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwrhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "pwroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wallhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "walloicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntoweraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntowerhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "guntoweroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radaroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettoweraicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettowerhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "rockettoweroicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "hightechoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lighthicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "siloaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silohicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silooicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starporthicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchhicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceaicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacehicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palaceoicon.png"), "60"},
new string[] {"--shp", Path.Combine(PathToSHPs, "conmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "wtrpmake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barramake.png"), "80"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barrhmake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "barromake.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "refmake.png"), "120"},
new string[] {"--shp", Path.Combine(PathToSHPs, "radarmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "highmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "silomake.png"), "32"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavymake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "starportmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "repairmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchmake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "palacemake.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "cranea.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "craneh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "craneo.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtrapa.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtraph.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "windtrapo.png"), "64"},
new string[] {"--shp", Path.Combine(PathToSHPs, "disha.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "dishh.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "disho.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "highweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "lightweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "heavyweld.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "unknown20.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "marker.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "researchzaps.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "deathhandlaunch.png"), "96"},
new string[] {"--shp", Path.Combine(PathToSHPs, "mouse.png"), "48"},
new string[] {"--shp", Path.Combine(PathToSHPs, "spice0.png"), "32"},
};
var SHPsToTranspose = new string[][]
{
new string[] {"--transpose", Path.Combine(PathToSHPs, "orni.shp"), Path.Combine(PathToSHPs, "orni.shp"), "0", "32", "3"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "rifle.shp"), Path.Combine(PathToSHPs, "rifle.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "bazooka.shp"), Path.Combine(PathToSHPs, "bazooka.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "fremen.shp"), Path.Combine(PathToSHPs, "fremen.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "sardaukar.shp"), Path.Combine(PathToSHPs, "sardaukar.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "thumper.shp"), Path.Combine(PathToSHPs, "thumper.shp"), "8", "8", "6"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "thumper2.shp"), Path.Combine(PathToSHPs, "thumper2.shp"), "8", "8", "5"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "engineer.shp"), Path.Combine(PathToSHPs, "engineer.shp"), "8", "8", "6"},
new string[] {"--transpose", Path.Combine(PathToSHPs, "saboteur.shp"), Path.Combine(PathToSHPs, "saboteur.shp"), "8", "8", "6", "56", "8", "5", "112", "8", "3", "136", "8", "5"},
};
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="71" endline="89">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "ra" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "INSTALL/REDALERT.MIX" };
var extractPackage = "MAIN.MIX";
var extractFiles = new string[] { "conquer.mix", "russian.mix", "allies.mix", "sounds.mix",
"scores.mix", "snow.mix", "interior.mix", "temperat.mix" };
var installCounter = 0;
var installTotal = copyFiles.Count() + extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1709" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="31" endline="49">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kInstallFromCDLogic(Widget widget, Action continueLoading)
{
panel = widget.Get("INSTALL_FROMCD_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
backButton = panel.Get<ButtonWidget>("BACK_BUTTON");
backButton.OnClick = Ui.CloseWindow;
retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.OnClick = CheckForDisk;
installingContainer = panel.Get("INSTALLING");
insertDiskContainer = panel.Get("INSERT_DISK");
CheckForDisk();
this.continueLoading = continueLoading;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="30" endline="47">
<![CDATA[
[ObjectCreator.UseCtor]
public RAInstallFromCDLogic(Widget widget, Action continueLoading)
{
this.continueLoading = continueLoading;
panel = widget.Get("INSTALL_FROMCD_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
backButton = panel.Get<ButtonWidget>("BACK_BUTTON");
backButton.OnClick = Ui.CloseWindow;
retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.OnClick = CheckForDisk;
installingContainer = panel.Get("INSTALLING");
insertDiskContainer = panel.Get("INSERT_DISK");
CheckForDisk();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1710" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="60" endline="72">
<![CDATA[
void CheckForDisk()
{
var path = InstallUtils.GetMountedDisk(IsValidDisk);
if (path != null)
Install(path);
else
{
insertDiskContainer.IsVisible = () => true;
installingContainer.IsVisible = () => false;
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="48" endline="63">
<![CDATA[
void CheckForDisk()
{
Func<string, bool> ValidDiskFilter = diskRoot => File.Exists(diskRoot+Path.DirectorySeparatorChar+"MAIN.MIX") &&
File.Exists(new string[] { diskRoot, "INSTALL", "REDALERT.MIX" }.Aggregate(Path.Combine));
var path = InstallUtils.GetMountedDisk(ValidDiskFilter);
if (path != null)
Install(path);
else
{
insertDiskContainer.IsVisible = () => true;
installingContainer.IsVisible = () => false;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1711" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="73" endline="129">
<![CDATA[
void Install(string source)
{
backButton.IsDisabled = () => true;
retryButton.IsDisabled = () => true;
insertDiskContainer.IsVisible = () => false;
installingContainer.IsVisible = () => true;
var dest = new string[] { Platform.SupportDir, "Content", "d2k", "Music" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "music/ambush.aud", "music/arakatak.aud", "music/atregain.aud", "music/entordos.aud", "music/fightpwr.aud", "music/fremen.aud", "music/hark_bat.aud", "music/landsand.aud", "music/options.aud", "music/plotting.aud", "music/risehark.aud", "music/robotix.aud", "music/score.aud", "music/soldappr.aud", "music/spicesct.aud", "music/undercon.aud", "music/waitgame.aud" };
var installCounter = 0;
var installTotal = copyFiles.Count(); //+ extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Error
backButton.IsDisabled = () => false;
retryButton.IsDisabled = () => false;
}));
var t = new Thread( _ =>
{
try
{
if (!InstallUtils.CopyFiles(source, copyFiles, dest, onProgress, onError))
return;
Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Music has been copied.";
backButton.IsDisabled = () => false;
continueLoading();
});
}
catch
{
onError("Installation failed");
}
}) { IsBackground = true };
t.Start();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="64" endline="118">
<![CDATA[
void Install(string source)
{
backButton.IsDisabled = () => true;
retryButton.IsDisabled = () => true;
insertDiskContainer.IsVisible = () => false;
installingContainer.IsVisible = () => true;
var dest = new string[] { Platform.SupportDir, "Content", "ra" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "INSTALL/REDALERT.MIX" };
var extractPackage = "MAIN.MIX";
var extractFiles = new string[] { "conquer.mix", "russian.mix", "allies.mix", "sounds.mix",
"scores.mix", "snow.mix", "interior.mix", "temperat.mix" };
var installCounter = 0;
var installTotal = copyFiles.Count() + extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Error
backButton.IsDisabled = () => false;
retryButton.IsDisabled = () => false;
}));
var t = new Thread( _ =>
{
try
{
if (!InstallUtils.CopyFiles(source, copyFiles, dest, onProgress, onError))
return;
if (!InstallUtils.ExtractFromPackage(source, extractPackage, extractFiles, dest, onProgress, onError))
return;
Game.RunAfterTick(() =>
{
Ui.CloseWindow();
continueLoading();
});
}
catch
{
onError("Installation failed");
}
}) { IsBackground = true };
t.Start();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1712" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kInstallFromCDLogic.cs" startline="80" endline="99">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "d2k", "Music" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "music/ambush.aud", "music/arakatak.aud", "music/atregain.aud", "music/entordos.aud", "music/fightpwr.aud", "music/fremen.aud", "music/hark_bat.aud", "music/landsand.aud", "music/options.aud", "music/plotting.aud", "music/risehark.aud", "music/robotix.aud", "music/score.aud", "music/soldappr.aud", "music/spicesct.aud", "music/undercon.aud", "music/waitgame.aud" };
var installCounter = 0;
var installTotal = copyFiles.Count(); //+ extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs" startline="71" endline="89">
<![CDATA[
var dest = new string[] { Platform.SupportDir, "Content", "ra" }.Aggregate(Path.Combine);
var copyFiles = new string[] { "INSTALL/REDALERT.MIX" };
var extractPackage = "MAIN.MIX";
var extractFiles = new string[] { "conquer.mix", "russian.mix", "allies.mix", "sounds.mix",
"scores.mix", "snow.mix", "interior.mix", "temperat.mix" };
var installCounter = 0;
var installTotal = copyFiles.Count() + extractFiles.Count();
var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>
{
progressBar.Percentage = installCounter*100/installTotal;
installCounter++;
statusLabel.GetText = () => s;
}));
var onError = (Action<string>)(s => Game.RunAfterTick(() =>
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1713" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kDownloadPackagesLogic.cs" startline="30" endline="41">
<![CDATA[
[ObjectCreator.UseCtor]
public D2kDownloadPackagesLogic(Widget widget, Dictionary<string,string> installData, Action afterInstall)
{
this.installData = installData;
this.afterInstall = afterInstall;
panel = widget.Get("INSTALL_DOWNLOAD_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
ShowDownloadDialog();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\DownloadPackagesLogic.cs" startline="30" endline="41">
<![CDATA[
[ObjectCreator.UseCtor]
public DownloadPackagesLogic(Widget widget, Dictionary<string,string> installData, Action afterInstall)
{
this.installData = installData;
this.afterInstall = afterInstall;
panel = widget.Get("INSTALL_DOWNLOAD_PANEL");
progressBar = panel.Get<ProgressBarWidget>("PROGRESS_BAR");
statusLabel = panel.Get<LabelWidget>("STATUS_LABEL");
ShowDownloadDialog();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1714" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kDownloadPackagesLogic.cs" startline="42" endline="109">
<![CDATA[
void ShowDownloadDialog()
{
statusLabel.GetText = () => "Initializing...";
progressBar.SetIndeterminate(true);
var retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.IsVisible = () => false;
var cancelButton = panel.Get<ButtonWidget>("CANCEL_BUTTON");
var file = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());
var dest = new string[] { Platform.SupportDir, "Content", Game.modData.Manifest.Mods[0] }.Aggregate(Path.Combine);
Action<DownloadProgressChangedEventArgs> onDownloadProgress = i =>
{
if (progressBar.Indeterminate)
progressBar.SetIndeterminate(false);
progressBar.Percentage = i.ProgressPercentage;
statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage, i.BytesReceived / 1024, i.TotalBytesToReceive / 1024);
};
Action<string> onExtractProgress = s =>
{
Game.RunAfterTick(() => statusLabel.GetText = () => s);
};
Action<string> onError = s =>
{
Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Error
retryButton.IsVisible = () => true;
});
};
Action<AsyncCompletedEventArgs, bool> onDownloadComplete = (i, cancelled) =>
{
if (i.Error != null)
{
onError(Download.FormatErrorMessage(i.Error));
return;
}
else if (cancelled)
{
onError("Download cancelled");
return;
}
statusLabel.GetText = () => "Extracting...";
progressBar.SetIndeterminate(true);
if (InstallUtils.ExtractZip(file, dest, onExtractProgress, onError))
{
Game.RunAfterTick(() =>
{
Ui.CloseWindow();
afterInstall();
});
}
};
var dl = new Download(installData["PackageURL"], file, onDownloadProgress, onDownloadComplete);
cancelButton.OnClick = () => { dl.Cancel(); Ui.CloseWindow(); };
retryButton.OnClick = () => { dl.Cancel(); ShowDownloadDialog(); };
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\DownloadPackagesLogic.cs" startline="42" endline="109">
<![CDATA[
void ShowDownloadDialog()
{
statusLabel.GetText = () => "Initializing...";
progressBar.SetIndeterminate(true);
var retryButton = panel.Get<ButtonWidget>("RETRY_BUTTON");
retryButton.IsVisible = () => false;
var cancelButton = panel.Get<ButtonWidget>("CANCEL_BUTTON");
var file = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());
var dest = new string[] { Platform.SupportDir, "Content", Game.modData.Manifest.Mods[0] }.Aggregate(Path.Combine);
Action<DownloadProgressChangedEventArgs> onDownloadProgress = i =>
{
if (progressBar.Indeterminate)
progressBar.SetIndeterminate(false);
progressBar.Percentage = i.ProgressPercentage;
statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage, i.BytesReceived / 1024, i.TotalBytesToReceive / 1024);
};
Action<string> onExtractProgress = s =>
{
Game.RunAfterTick(() => statusLabel.GetText = () => s);
};
Action<string> onError = s =>
{
Game.RunAfterTick(() =>
{
statusLabel.GetText = () => "Error
retryButton.IsVisible = () => true;
});
};
Action<AsyncCompletedEventArgs, bool> onDownloadComplete = (i, cancelled) =>
{
if (i.Error != null)
{
onError(Download.FormatErrorMessage(i.Error));
return;
}
else if (cancelled)
{
onError("Download cancelled");
return;
}
statusLabel.GetText = () => "Extracting...";
progressBar.SetIndeterminate(true);
if (InstallUtils.ExtractZip(file, dest, onExtractProgress, onError))
{
Game.RunAfterTick(() =>
{
Ui.CloseWindow();
afterInstall();
});
}
};
var dl = new Download(installData["PackageURL"], file, onDownloadProgress, onDownloadComplete);
cancelButton.OnClick = () => { dl.Cancel(); Ui.CloseWindow(); };
retryButton.OnClick = () => { dl.Cancel(); ShowDownloadDialog(); };
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1715" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\Widgets\Logic\D2kDownloadPackagesLogic.cs" startline="49" endline="63">
<![CDATA[
var cancelButton = panel.Get<ButtonWidget>("CANCEL_BUTTON");
var file = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());
var dest = new string[] { Platform.SupportDir, "Content", Game.modData.Manifest.Mods[0] }.Aggregate(Path.Combine);
Action<DownloadProgressChangedEventArgs> onDownloadProgress = i =>
{
if (progressBar.Indeterminate)
progressBar.SetIndeterminate(false);
progressBar.Percentage = i.ProgressPercentage;
statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage, i.BytesReceived / 1024, i.TotalBytesToReceive / 1024);
};
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\DownloadPackagesLogic.cs" startline="49" endline="63">
<![CDATA[
var cancelButton = panel.Get<ButtonWidget>("CANCEL_BUTTON");
var file = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());
var dest = new string[] { Platform.SupportDir, "Content", Game.modData.Manifest.Mods[0] }.Aggregate(Path.Combine);
Action<DownloadProgressChangedEventArgs> onDownloadProgress = i =>
{
if (progressBar.Indeterminate)
progressBar.SetIndeterminate(false);
progressBar.Percentage = i.ProgressPercentage;
statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage, i.BytesReceived / 1024, i.TotalBytesToReceive / 1024);
};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1716" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1717" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1718" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1719" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1720" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1721" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1722" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1723" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1724" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1725" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1726" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1727" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1728" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1729" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1730" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1731" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1732" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1733" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1734" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1735" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1736" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1737" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1738" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1739" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1740" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1741" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1742" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1743" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1744" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1745" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1746" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1747" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1748" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1749" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1750" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1751" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.D2k\BuildingCaptureNotification.cs" startline="29" endline="36">
<![CDATA[
public void OnCapture (Actor self, Actor captor, Player oldOwner, Player newOwner)
{
if (captor.World.LocalPlayer != captor.Owner)
return;
Sound.PlayNotification(captor.World.LocalPlayer, "Speech", Info.Notification, newOwner.Country.Race);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="29" endline="36">
<![CDATA[
public void OnCapture (Actor self, Actor captor, Player oldOwner, Player newOwner)
{
if (captor.World.LocalPlayer != captor.Owner)
return;
Sound.PlayNotification(captor.World.LocalPlayer, "Speech", Info.Notification, oldOwner.Country.Race);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1752" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\BaseBuilder.cs" startline="26" endline="37">
<![CDATA[
BuildState state = BuildState.WaitForFeedback;
string category;
HackyAI ai;
int lastThinkTick;
Func<ProductionQueue, ActorInfo> chooseItem;
public BaseBuilder(HackyAI ai, string category, Func<ProductionQueue, ActorInfo> chooseItem)
{
this.ai = ai;
this.category = category;
this.chooseItem = chooseItem;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="35" endline="47">
<![CDATA[
[Sync] bool canCloak = true;
Actor self;
CloakInfo info;
CPos? lastPos;
public Cloak(Actor self, CloakInfo info)
{
this.info = info;
this.self = self;
remainingTime = info.InitialDelay;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1753" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\BaseBuilder.cs" startline="26" endline="37">
<![CDATA[
BuildState state = BuildState.WaitForFeedback;
string category;
HackyAI ai;
int lastThinkTick;
Func<ProductionQueue, ActorInfo> chooseItem;
public BaseBuilder(HackyAI ai, string category, Func<ProductionQueue, ActorInfo> chooseItem)
{
this.ai = ai;
this.category = category;
this.chooseItem = chooseItem;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="57" endline="76">
<![CDATA[
List<WPos> positions = new List<WPos>();
readonly int TrailLength;
readonly Color Color;
readonly int StartSkip;
public static Color ChooseColor(Actor self)
{
var ownerColor = Color.FromArgb(255, self.Owner.Color.RGB);
return Exts.ColorLerp(0.5f, ownerColor, Color.White);
}
public ContrailHistory(int trailLength, Color color)
public ContrailHistory(int trailLength, Color color, int startSkip)
{
this.TrailLength = trailLength;
this.Color = color;
this.StartSkip = startSkip;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1754" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\BaseBuilder.cs" startline="26" endline="37">
<![CDATA[
BuildState state = BuildState.WaitForFeedback;
string category;
HackyAI ai;
int lastThinkTick;
Func<ProductionQueue, ActorInfo> chooseItem;
public BaseBuilder(HackyAI ai, string category, Func<ProductionQueue, ActorInfo> chooseItem)
{
this.ai = ai;
this.category = category;
this.chooseItem = chooseItem;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Drag.cs" startline="21" endline="28">
<![CDATA[
int ticks = 0;
public Drag(PPos start, PPos end, int length)
{
startLocation = start;
endLocation = end;
this.length = length;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1755" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="26" endline="52">
<![CDATA[
public readonly string Name = "Unnamed Bot";
public readonly int SquadSize = 8;
public readonly int AssignRolesInterval = 20;
public readonly int RushInterval = 600;
public readonly int AttackForceInterval = 30;
public readonly string RallypointTestBuilding = "fact";		// temporary hack to maintain previous rallypoint behavior.
public readonly string[] UnitQueues = { "Vehicle", "Infantry", "Plane", "Ship", "Aircraft" };
public readonly bool ShouldRepairBuildings = true;
string IBotInfo.Name { get { return this.Name; } }
[FieldLoader.LoadUsing("LoadUnits")]
public readonly Dictionary<string, float> UnitsToBuild = null;
[FieldLoader.LoadUsing("LoadBuildings")]
public readonly Dictionary<string, float> BuildingFractions = null;
[FieldLoader.LoadUsing("LoadUnitsCommonNames")]
public readonly Dictionary<string, string[]> UnitsCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingsCommonNames")]
public readonly Dictionary<string, string[]> BuildingCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingLimits")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1756" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="26" endline="52">
<![CDATA[
public readonly string Name = "Unnamed Bot";
public readonly int SquadSize = 8;
public readonly int AssignRolesInterval = 20;
public readonly int RushInterval = 600;
public readonly int AttackForceInterval = 30;
public readonly string RallypointTestBuilding = "fact";		// temporary hack to maintain previous rallypoint behavior.
public readonly string[] UnitQueues = { "Vehicle", "Infantry", "Plane", "Ship", "Aircraft" };
public readonly bool ShouldRepairBuildings = true;
string IBotInfo.Name { get { return this.Name; } }
[FieldLoader.LoadUsing("LoadUnits")]
public readonly Dictionary<string, float> UnitsToBuild = null;
[FieldLoader.LoadUsing("LoadBuildings")]
public readonly Dictionary<string, float> BuildingFractions = null;
[FieldLoader.LoadUsing("LoadUnitsCommonNames")]
public readonly Dictionary<string, string[]> UnitsCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingsCommonNames")]
public readonly Dictionary<string, string[]> BuildingCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingLimits")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1757" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="26" endline="52">
<![CDATA[
public readonly string Name = "Unnamed Bot";
public readonly int SquadSize = 8;
public readonly int AssignRolesInterval = 20;
public readonly int RushInterval = 600;
public readonly int AttackForceInterval = 30;
public readonly string RallypointTestBuilding = "fact";		// temporary hack to maintain previous rallypoint behavior.
public readonly string[] UnitQueues = { "Vehicle", "Infantry", "Plane", "Ship", "Aircraft" };
public readonly bool ShouldRepairBuildings = true;
string IBotInfo.Name { get { return this.Name; } }
[FieldLoader.LoadUsing("LoadUnits")]
public readonly Dictionary<string, float> UnitsToBuild = null;
[FieldLoader.LoadUsing("LoadBuildings")]
public readonly Dictionary<string, float> BuildingFractions = null;
[FieldLoader.LoadUsing("LoadUnitsCommonNames")]
public readonly Dictionary<string, string[]> UnitsCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingsCommonNames")]
public readonly Dictionary<string, string[]> BuildingCommonNames = null;
[FieldLoader.LoadUsing("LoadBuildingLimits")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1758" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="822" endline="828">
<![CDATA[
bool HasAdequateFact()
{
if (CountBuildingByCommonName("ConstructionYard", p) == 0 && CountBuildingByCommonName("VehiclesFactory", p) > 0)
return false;
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="829" endline="835">
<![CDATA[
bool HasAdequateProc()
{
if (CountBuildingByCommonName("Refinery", p) == 0 && CountBuildingByCommonName("Power", p) > 0)
return false;
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1759" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1357" endline="1363">
<![CDATA[
internal IEnumerable<ProductionQueue> FindQueues(string category)
{
return world.ActorsWithTrait<ProductionQueue>()
.Where(a => a.Actor.Owner == p && a.Trait.Info.Type == category)
.Select(a => a.Trait);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="111" endline="117">
<![CDATA[
public static IEnumerable<ProductionQueue> FindQueues(World world, Player player, string category)
{
return world.ActorsWithTrait<ProductionQueue>()
.Where(a => a.Actor.Owner == player && a.Trait.Info.Type == category)
.Select(a => a.Trait);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1760" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1245" endline="1275">
<![CDATA[
!IsRallyPointValid(rp.Trait.rallyPoint)).ToArray();
if (buildings.Length > 0)
BotDebug("Bot {0} needs to find rallypoints for {1} buildings.",
p.PlayerName, buildings.Length);
foreach (var a in buildings)
{
CPos newRallyPoint = ChooseRallyLocationNear(a.Actor.Location);
world.IssueOrder(new Order("SetRallyPoint", a.Actor, false) { TargetLocation = newRallyPoint });
}
}
CPos ChooseRallyLocationNear(CPos startPos)
{
var possibleRallyPoints = world.FindTilesInCircle(startPos, 8).Where(IsRallyPointValid).ToArray();
if (possibleRallyPoints.Length == 0)
{
BotDebug("Bot Bug
return startPos;
}
return possibleRallyPoints.Random(random);
}
void DeployMcv(Actor self)
{
/* find our mcv and deploy it */
var mcv = self.World.Actors
.FirstOrDefault(a => a.Owner == p && a.HasTrait<BaseBuilding>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1276" endline="1291">
<![CDATA[
if (mcv != null)
{
baseCenter = mcv.Location;
defenseCenter = baseCenter;
if (mcv.HasTrait<Mobile>())
world.IssueOrder(new Order("DeployTransform", mcv, false));
}
else
BotDebug("AI
}
void FindAndDeployMcv(Actor self)
{
var mcvs = self.World.Actors.Where(a => a.Owner == p && a.HasTrait<BaseBuilding>()).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1761" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1292" endline="1316">
<![CDATA[
if (!mcvs.Any())
return;
else
foreach (var mcv in mcvs)
if (mcv != null)
if (mcv.HasTrait<Mobile>())
{
if (mcv.IsMoving()) return;
var maxBaseDistance = world.Map.MapSize.X > world.Map.MapSize.Y ? world.Map.MapSize.X
ActorInfo aInfo = GetUnitInfoByCommonName("Mcv",p);
if (aInfo == null) return;
string intoActor = aInfo.Traits.Get<TransformsInfo>().IntoActor;
var desiredLocation = ChooseBuildLocation(intoActor, false, maxBaseDistance, BuildingType.Building);
if (desiredLocation == null)
return;
world.IssueOrder(new Order("Move", mcv, false) { TargetLocation = desiredLocation.Value });
world.IssueOrder(new Order("DeployTransform", mcv, false));
}
}
void TryToUseSupportPower(Actor self)
{
if (supportPowerMngr == null) return;
var powers = supportPowerMngr.Powers.Where(p => !p.Value.Disabled);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs" startline="64" endline="81">
<![CDATA[
if (action == null)
return false;
action(mi);
return true;
}
return false;
}
public override void Draw()
{
buttons.Clear();
if( world.LocalPlayer == null ) return;
var manager = world.LocalPlayer.PlayerActor.Trait<SupportPowerManager>();
var powers = manager.Powers.Where(p => !p.Value.Disabled);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1762" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1371" endline="1386">
<![CDATA[
BuildUnit("Vehicle", GetUnitInfoByCommonName("Mcv",p).Name);
foreach (var q in Info.UnitQueues)
{
if (unitsHangingAroundTheBase.Count < 12)
{
BuildUnit(q, true);
continue;
}
BuildUnit(q, false);
}
}
void BuildUnit(string category, bool buildRandom)
{
var queue = FindQueues(category).FirstOrDefault( q => q.CurrentItem() == null );
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1387" endline="1402">
<![CDATA[
if (queue == null)
return;
ActorInfo unit;
if(buildRandom)
unit = ChooseRandomUnitToBuild(queue);
else
unit = ChooseUnitToBuild(queue);
if (unit != null && Info.UnitsToBuild.Any(u => u.Key == unit.Name))
world.IssueOrder(Order.StartProduction(queue.self, unit.Name, 1));
}
void BuildUnit(string category, string name)
{
var queue = FindQueues(category).FirstOrDefault( q => q.CurrentItem() == null );
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1763" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1371" endline="1386">
<![CDATA[
BuildUnit("Vehicle", GetUnitInfoByCommonName("Mcv",p).Name);
foreach (var q in Info.UnitQueues)
{
if (unitsHangingAroundTheBase.Count < 12)
{
BuildUnit(q, true);
continue;
}
BuildUnit(q, false);
}
}
void BuildUnit(string category, bool buildRandom)
{
var queue = FindQueues(category).FirstOrDefault( q => q.CurrentItem() == null );
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="219" endline="258">
<![CDATA[
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || u.HasTrait<Mobile>()) && u.IsInWorld && !u.IsDead()
&& (!u.HasTrait<Spy>() || !u.Trait<Spy>().Disguised || (u.Trait<Spy>().Disguised && u.Trait<Spy>().disguisedAsPlayer != soviets)));
foreach (var aircraft in SovietAircraft())
{
var plane = aircraft.Trait<Plane>();
var ammo = aircraft.Trait<LimitedAmmo>();
if ((plane.Altitude == 0 && ammo.FullAmmo()) || (plane.Altitude != 0 && ammo.HasAmmo()))
{
var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (aircraft.CenterLocation - u.CenterLocation).LengthSquared), world, 10);
if (enemy != null)
{
if (!aircraft.IsIdle && aircraft.GetCurrentActivity().GetType() != typeof(FlyAttack))
aircraft.CancelActivity();
if (plane.Altitude == 0)
plane.UnReserve();
aircraft.QueueActivity(new FlyAttack(Target.FromActor(enemy)));
}
}
else if (plane.Altitude != 0 && !LandIsQueued(aircraft))
{
aircraft.CancelActivity();
aircraft.QueueActivity(new ReturnToBase(aircraft, null));
aircraft.QueueActivity(new ResupplyAircraft());
}
}
}
bool LandIsQueued(Actor actor)
{
for (var a = actor.GetCurrentActivity(); a != null; a = a.NextActivity)
if (a is ReturnToBase || a is Land) return true;
return false;
}
void BuildSovietAircraft()
{
var queue = MissionUtils.FindQueues(world, soviets, "Plane").FirstOrDefault(q => q.CurrentItem() == null);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1764" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs" startline="1387" endline="1402">
<![CDATA[
if (queue == null)
return;
ActorInfo unit;
if(buildRandom)
unit = ChooseRandomUnitToBuild(queue);
else
unit = ChooseUnitToBuild(queue);
if (unit != null && Info.UnitsToBuild.Any(u => u.Key == unit.Name))
world.IssueOrder(Order.StartProduction(queue.self, unit.Name, 1));
}
void BuildUnit(string category, string name)
{
var queue = FindQueues(category).FirstOrDefault( q => q.CurrentItem() == null );
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="219" endline="258">
<![CDATA[
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || u.HasTrait<Mobile>()) && u.IsInWorld && !u.IsDead()
&& (!u.HasTrait<Spy>() || !u.Trait<Spy>().Disguised || (u.Trait<Spy>().Disguised && u.Trait<Spy>().disguisedAsPlayer != soviets)));
foreach (var aircraft in SovietAircraft())
{
var plane = aircraft.Trait<Plane>();
var ammo = aircraft.Trait<LimitedAmmo>();
if ((plane.Altitude == 0 && ammo.FullAmmo()) || (plane.Altitude != 0 && ammo.HasAmmo()))
{
var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (aircraft.CenterLocation - u.CenterLocation).LengthSquared), world, 10);
if (enemy != null)
{
if (!aircraft.IsIdle && aircraft.GetCurrentActivity().GetType() != typeof(FlyAttack))
aircraft.CancelActivity();
if (plane.Altitude == 0)
plane.UnReserve();
aircraft.QueueActivity(new FlyAttack(Target.FromActor(enemy)));
}
}
else if (plane.Altitude != 0 && !LandIsQueued(aircraft))
{
aircraft.CancelActivity();
aircraft.QueueActivity(new ReturnToBase(aircraft, null));
aircraft.QueueActivity(new ResupplyAircraft());
}
}
}
bool LandIsQueued(Actor actor)
{
for (var a = actor.GetCurrentActivity(); a != null; a = a.NextActivity)
if (a is ReturnToBase || a is Land) return true;
return false;
}
void BuildSovietAircraft()
{
var queue = MissionUtils.FindQueues(world, soviets, "Plane").FirstOrDefault(q => q.CurrentItem() == null);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1765" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1766" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="46" endline="53">
<![CDATA[
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
public WaitFor(Func<bool> f, bool interruptable)
{
this.f = f;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1767" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1768" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1769" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1770" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1771" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1772" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1773" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1774" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1775" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1776" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1777" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1778" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1779" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="20" endline="24">
<![CDATA[
public CallFunc(Action a, bool interruptable)
{
this.a = a;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1780" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="34" endline="39">
<![CDATA[
public override void Cancel(Actor self)
{
if (interruptable)
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\RAHarvesterDockSequence.cs" startline="66" endline="71">
<![CDATA[
public override void Cancel(Actor self)
{
state = State.Undock;
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1781" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="34" endline="39">
<![CDATA[
public override void Cancel(Actor self)
{
if (interruptable)
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="32" endline="40">
<![CDATA[
public override void Cancel( Actor self )
{
if( !interruptable )
return;
remainingTicks = 0;
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1782" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="34" endline="39">
<![CDATA[
public override void Cancel(Actor self)
{
if (interruptable)
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="59" endline="67">
<![CDATA[
public override void Cancel( Actor self )
{
if (!interruptable)
return;
f = null;
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1783" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\CallFunc.cs" startline="34" endline="39">
<![CDATA[
public override void Cancel(Actor self)
{
if (interruptable)
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Move.cs" startline="235" endline="240">
<![CDATA[
public override void Cancel( Actor self )
{
path = new List<CPos>(0);
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1784" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Demolish.cs" startline="22" endline="26">
<![CDATA[
public Demolish(Actor target, int delay)
{
this.target = Target.FromActor(target);
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\DonateSupplies.cs" startline="22" endline="26">
<![CDATA[
public DonateSupplies(Actor target, int payload)
{
this.target = Target.FromActor(target);
this.payload = payload;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1785" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Demolish.cs" startline="22" endline="26">
<![CDATA[
public Demolish(Actor target, int delay)
{
this.target = Target.FromActor(target);
this.delay = delay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Enter.cs" startline="22" endline="26">
<![CDATA[
public Enter(Actor target, Activity inner)
{
this.target = Target.FromActor(target);
this.inner = inner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1786" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Demolish.cs" startline="27" endline="49">
<![CDATA[
public override Activity Tick(Actor self)
{
if (IsCanceled || !target.IsValid)
return NextActivity;
self.World.AddFrameEndTask(w => w.Add(new DelayedAction(delay, () =>
{
if (!target.IsValid)
return;
var modifier = (float)target.Actor.TraitsImplementing<IDamageModifier>()
.Concat(self.Owner.PlayerActor.TraitsImplementing<IDamageModifier>())
.Select(t => t.GetDamageModifier(self, null)).Product();
if (modifier > 0)
target.Actor.Kill(self);
})));
return NextActivity;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Transform.cs" startline="30" endline="79">
<![CDATA[
public override Activity Tick( Actor self )
{
if (IsCanceled) return NextActivity;
self.World.AddFrameEndTask(w =>
{
foreach (var nt in self.TraitsImplementing<INotifyTransform>())
nt.OnTransform(self);
var selected = w.Selection.Contains(self);
self.Destroy();
foreach (var s in Sounds)
Sound.PlayToPlayer(self.Owner, s, self.CenterLocation);
var init = new TypeDictionary
{
new LocationInit( self.Location + Offset ),
new OwnerInit( self.Owner ),
new FacingInit( Facing ),
};
if (SkipMakeAnims) init.Add(new SkipMakeAnimsInit());
var health = self.TraitOrDefault<Health>();
if (health != null)
{
var newHP = (ForceHealthPercentage > 0)
? ForceHealthPercentage / 100f
init.Add( new HealthInit(newHP) );
}
var cargo = self.TraitOrDefault<Cargo>();
if (cargo != null)
init.Add( new CargoInit( cargo.Passengers.ToArray() ) );
var a = w.CreateActor( ToActor, init );
foreach (var nt in self.TraitsImplementing<INotifyTransformed>())
nt.OnTransformed(a);
if (selected)
w.Selection.Add(w, a);
});
return this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1787" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\DonateSupplies.cs" startline="22" endline="26">
<![CDATA[
public DonateSupplies(Actor target, int payload)
{
this.target = Target.FromActor(target);
this.payload = payload;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Enter.cs" startline="22" endline="26">
<![CDATA[
public Enter(Actor target, Activity inner)
{
this.target = Target.FromActor(target);
this.inner = inner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1788" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1789" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1790" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1791" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1792" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1793" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1794" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1795" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1796" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1797" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1798" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1799" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1800" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Follow.cs" startline="25" endline="29">
<![CDATA[
public Follow(Target target, int range)
{
Target = target;
Range = range;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1801" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\RAHarvesterDockSequence.cs" startline="66" endline="71">
<![CDATA[
public override void Cancel(Actor self)
{
state = State.Undock;
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Move.cs" startline="235" endline="240">
<![CDATA[
public override void Cancel( Actor self )
{
path = new List<CPos>(0);
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1802" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\RepairBuilding.cs" startline="21" endline="35">
<![CDATA[
public override Activity Tick(Actor self)
{
if (IsCanceled || !target.IsValid)
return NextActivity;
var health = target.Actor.Trait<Health>();
if (health.DamageState == DamageState.Undamaged)
return NextActivity;
target.Actor.InflictDamage(self, -health.MaxHP, null);
self.Destroy();
return this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\RepairBridge.cs" startline="21" endline="35">
<![CDATA[
public override Activity Tick(Actor self)
{
if (IsCanceled || !target.IsValid)
return NextActivity;
var hut = target.Actor.Trait<BridgeHut>();
if (hut.BridgeDamageState == DamageState.Undamaged)
return NextActivity;
hut.Repair(self);
self.Destroy();
return this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1803" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="23" endline="28">
<![CDATA[
public Teleport(Actor chronosphere, CPos destination, bool killCargo)
{
this.chronosphere = chronosphere;
this.destination = destination;
this.killCargo = killCargo;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="23" endline="28">
<![CDATA[
public Objective(ObjectiveType type, string text, ObjectiveStatus status)
{
Type = type;
Text = text;
Status = status;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1804" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="23" endline="28">
<![CDATA[
public Teleport(Actor chronosphere, CPos destination, bool killCargo)
{
this.chronosphere = chronosphere;
this.destination = destination;
this.killCargo = killCargo;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="32" endline="41">
<![CDATA[
public ProximityCapturableInfo Info;
public Actor Self;
public ProximityCapturable(Actor self, ProximityCapturableInfo info)
{
Info = info;
Self = self;
OriginalOwner = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1805" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1806" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1807" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1808" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1809" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1810" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1811" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1812" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1813" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1814" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1815" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1816" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1817" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1818" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1819" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1820" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1821" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1822" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1823" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1824" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1825" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1826" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Teleport.cs" startline="58" endline="64">
<![CDATA[
}
public class SimpleTeleport
{
CPos destination;
public SimpleTeleport(CPos destination) { this.destination = destination; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1827" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="19" endline="26">
<![CDATA[
bool interruptable = true;
public Wait(int period) { remainingTicks = period; }
public Wait(int period, bool interruptable)
{
remainingTicks = period;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="46" endline="53">
<![CDATA[
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
public WaitFor(Func<bool> f, bool interruptable)
{
this.f = f;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1828" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="19" endline="26">
<![CDATA[
bool interruptable = true;
public Wait(int period) { remainingTicks = period; }
public Wait(int period, bool interruptable)
{
remainingTicks = period;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\HeliLand.cs" startline="24" endline="21">
<![CDATA[
int minimalAltitude = 0;
public HeliLand(bool requireSpace, int minimalAltitude)
{
this.requireSpace = requireSpace;
this.minimalAltitude = minimalAltitude;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1829" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="19" endline="26">
<![CDATA[
bool interruptable = true;
public Wait(int period) { remainingTicks = period; }
public Wait(int period, bool interruptable)
{
remainingTicks = period;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="30" endline="38">
<![CDATA[
[Sync] int chargeTick = 0;
public readonly ChronoshiftDeployInfo Info;
readonly Actor self;
public ChronoshiftDeploy(Actor self, ChronoshiftDeployInfo info)
{
this.self = self;
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1830" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="19" endline="26">
<![CDATA[
bool interruptable = true;
public Wait(int period) { remainingTicks = period; }
public Wait(int period, bool interruptable)
{
remainingTicks = period;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\StrategicVictoryConditions.cs" startline="25" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new StrategicVictoryConditions(init.self, this); }
}
public class StrategicVictoryConditions
{
Actor self;
StrategicVictoryConditionsInfo info;
[Sync] public int TicksLeft = 0;
public StrategicVictoryConditions(Actor self, StrategicVictoryConditionsInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1831" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="19" endline="26">
<![CDATA[
bool interruptable = true;
public Wait(int period) { remainingTicks = period; }
public Wait(int period, bool interruptable)
{
remainingTicks = period;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs" startline="22" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new WaterPaletteRotation(init.world, this); }
}
class WaterPaletteRotation
{
float t = 0;
readonly WaterPaletteRotationInfo info;
readonly World world;
public WaterPaletteRotation(World world, WaterPaletteRotationInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1832" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="32" endline="40">
<![CDATA[
public override void Cancel( Actor self )
{
if( !interruptable )
return;
remainingTicks = 0;
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="59" endline="67">
<![CDATA[
public override void Cancel( Actor self )
{
if (!interruptable)
return;
f = null;
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1833" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="32" endline="40">
<![CDATA[
public override void Cancel( Actor self )
{
if( !interruptable )
return;
remainingTicks = 0;
base.Cancel(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Move.cs" startline="235" endline="240">
<![CDATA[
public override void Cancel( Actor self )
{
path = new List<CPos>(0);
base.Cancel(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1834" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1835" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1836" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1837" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1838" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1839" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1840" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1841" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1842" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1843" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1844" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1845" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1846" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1847" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1848" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1849" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1850" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1851" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1852" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1853" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1854" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1855" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1856" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1857" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1858" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1859" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1860" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="41" endline="48">
<![CDATA[
}
public class WaitFor
{
Func<bool> f;
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1861" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="46" endline="53">
<![CDATA[
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
public WaitFor(Func<bool> f, bool interruptable)
{
this.f = f;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\HeliLand.cs" startline="24" endline="21">
<![CDATA[
int minimalAltitude = 0;
public HeliLand(bool requireSpace, int minimalAltitude)
{
this.requireSpace = requireSpace;
this.minimalAltitude = minimalAltitude;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1862" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="46" endline="53">
<![CDATA[
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
public WaitFor(Func<bool> f, bool interruptable)
{
this.f = f;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="30" endline="38">
<![CDATA[
[Sync] int chargeTick = 0;
public readonly ChronoshiftDeployInfo Info;
readonly Actor self;
public ChronoshiftDeploy(Actor self, ChronoshiftDeployInfo info)
{
this.self = self;
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1863" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="46" endline="53">
<![CDATA[
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
public WaitFor(Func<bool> f, bool interruptable)
{
this.f = f;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\StrategicVictoryConditions.cs" startline="25" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new StrategicVictoryConditions(init.self, this); }
}
public class StrategicVictoryConditions
{
Actor self;
StrategicVictoryConditionsInfo info;
[Sync] public int TicksLeft = 0;
public StrategicVictoryConditions(Actor self, StrategicVictoryConditionsInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1864" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Activities\Wait.cs" startline="46" endline="53">
<![CDATA[
bool interruptable = true;
public WaitFor(Func<bool> f) { this.f = f; }
public WaitFor(Func<bool> f, bool interruptable)
{
this.f = f;
this.interruptable = interruptable;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs" startline="22" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new WaterPaletteRotation(init.world, this); }
}
class WaterPaletteRotation
{
float t = 0;
readonly WaterPaletteRotationInfo info;
readonly World world;
public WaterPaletteRotation(World world, WaterPaletteRotationInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1865" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorExts.cs" startline="23" endline="34">
<![CDATA[
public static bool AppearsFriendlyTo(this Actor self, Actor toActor)
{
var stance = toActor.Owner.Stances[ self.Owner ];
if (stance == Stance.Ally)
return true;
if (self.IsDisguisedSpy() && !toActor.HasTrait<IgnoresDisguise>())
return toActor.Owner.Stances[self.Trait<Spy>().disguisedAsPlayer] == Stance.Ally;
return stance == Stance.Ally;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorExts.cs" startline="35" endline="46">
<![CDATA[
public static bool AppearsHostileTo(this Actor self, Actor toActor)
{
var stance = toActor.Owner.Stances[ self.Owner ];
if (stance == Stance.Ally)
return false;		/* otherwise, we'll hate friendly disguised spies */
if (self.IsDisguisedSpy() && !toActor.HasTrait<IgnoresDisguise>())
return toActor.Owner.Stances[self.Trait<Spy>().disguisedAsPlayer] == Stance.Enemy;
return stance == Stance.Enemy;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1866" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1867" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1868" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1869" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1870" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1871" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1872" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1873" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1874" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1875" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1876" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1877" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1878" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1879" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1880" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1881" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1882" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1883" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1884" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1885" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1886" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1887" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1888" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1889" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1890" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1891" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1892" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1893" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1894" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1895" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1896" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1897" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ActorLostNotification.cs" startline="19" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new ActorLostNotification(this); }
}
class ActorLostNotification
{
ActorLostNotificationInfo Info;
public ActorLostNotification(ActorLostNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1898" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1899" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1900" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1901" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1902" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1903" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1904" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1905" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1906" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1907" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1908" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1909" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1910" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1911" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1912" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1913" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1914" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1915" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1916" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1917" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1918" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1919" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1920" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1921" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1922" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1923" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1924" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="25" endline="30">
<![CDATA[
}
public class DebugAircraftFacing
{
readonly Aircraft a;
public DebugAircraftFacing(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1925" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1926" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1927" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1928" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1929" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1930" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1931" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1932" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1933" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1934" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1935" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1936" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1937" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1938" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1939" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1940" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1941" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1942" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1943" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1944" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1945" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1946" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1947" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1948" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1949" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1950" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="37" endline="42">
<![CDATA[
}
public class DebugAircraftSubPxX
{
readonly Aircraft a;
public DebugAircraftSubPxX(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1951" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1952" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1953" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1954" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1955" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1956" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1957" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1958" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1959" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1960" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1961" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1962" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1963" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1964" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1965" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1966" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1967" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1968" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1969" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1970" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1971" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1972" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1973" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1974" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1975" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="49" endline="54">
<![CDATA[
}
public class DebugAircraftSubPxY
{
readonly Aircraft a;
public DebugAircraftSubPxY(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1976" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1977" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1978" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1979" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1980" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1981" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1982" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1983" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1984" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1985" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1986" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1987" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1988" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1989" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1990" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1991" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1992" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1993" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1994" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1995" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1996" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1997" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1998" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="1999" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="61" endline="66">
<![CDATA[
}
public class DebugAircraftAltitude
{
readonly Aircraft a;
public DebugAircraftAltitude(Actor self){ a = self.Trait<Aircraft>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2000" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="68" endline="82">
<![CDATA[
}
public class AircraftInfo
{
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
public virtual object Create( ActorInitializer init ) { return new Aircraft( init , this ); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="136" endline="148">
<![CDATA[
.Where(a => self.Owner.Shroud.IsTargetable(a))
.ClosestTo( self.CenterLocation );
}
}
}
[Desc("Will not get automatically targeted by enemy (like walls)")]
class AutoTargetIgnoreInfo
class AutoTargetIgnore { }
public class DebugRetiliateAgainstAggressorInfo
{
public object Create(ActorInitializer init) { return new DebugRetiliateAgainstAggressor(init.self); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2001" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="68" endline="82">
<![CDATA[
}
public class AircraftInfo
{
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
public virtual object Create( ActorInitializer init ) { return new Aircraft( init , this ); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="31" endline="456">
<![CDATA[
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
Actor[] townAttackers;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies1, allies2);
}
public void Tick(Actor self)
{
if (allies1.WinState != WinState.Undefined) return;
if (world.FrameNumber == 1)
InsertSpies();
if (frameInfiltrated != -1)
{
if (world.FrameNumber == frameInfiltrated + 100)
{
Sound.Play("aarrivs1.aud");
Game.MoveViewport(reinforcementsUnloadPoint.Location.ToFloat2());
world.AddFrameEndTask(w => SendReinforcements());
}
if (world.FrameNumber == frameInfiltrated + 200)
{
Sound.Play("timergo1.aud");
destroyBaseTimer = new CountdownTimer(destroyBaseTicks, OnDestroyBaseTimerExpired, true);
destroyBaseTimerWidget = new CountdownTimerWidget(destroyBaseTimer, "Secure lab in
Ui.Root.AddChild(destroyBaseTimerWidget);
}
if (world.FrameNumber >= frameInfiltrated + 200)
destroyBaseTimer.Tick();
if (world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead())
{
bridgeTank.QueueActivity(new Attack(Target.FromPos(bridge.CenterLocation), 4));
attackingBridge = true;
}
if (attackingBridge && bridge.IsDead())
{
if (!bridgeTank.IsDead())
bridgeTank.CancelActivity();
attackingBridge = false;
}
if (world.FrameNumber == frameInfiltrated + 1500 * 6)
foreach (var attacker in townAttackers.Where(a => !a.IsDead() && a.IsInWorld))
{
attacker.CancelActivity();
attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker, new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10, -15), 3)));
}
}
if (attackingTown)
{
foreach (var attacker in townAttackers.Where(u => u.IsIdle && !u.IsDead() && u.IsInWorld))
{
var enemies = world.Actors.Where(u => u.Owner == creeps && u.HasTrait<ITargetable>()
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>() && !u.HasTrait<Bridge>()) || u.HasTrait<Mobile>()) && !u.IsDead() && u.IsInWorld);
var enemy = enemies.OrderBy(u => (attacker.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker, new Attack(Target.FromActor(enemy), 3)));
else
{
attackingTown = false;
break;
}
}
}
foreach (var patrol in patrols)
patrol.DoPatrol();
MissionUtils.CapOre(soviets);
BaseGuardTick();
if (allies1Spy.IsDead() || (allies2Spy != null && allies2Spy.IsDead()))
{
objectives[InfiltrateID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("{0} spy was killed.".F(allies1 != allies2 ? "A"
}
else if (lab.IsDead())
MissionFailed("The Soviet research laboratory was destroyed.");
else if (!world.Actors.Any(a => (a.Owner == allies1 || a.Owner == allies2) && !a.IsDead()
&& (a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>()))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The remaining Allied forces in the area have been wiped out.");
}
else if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed)
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
MissionAccomplished("The Soviet research laboratory has been secured successfully.");
}
if (world.FrameNumber == nextCivilianMove)
{
var civilians = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && a.Owner == creeps && a.HasTrait<Mobile>());
if (civilians.Any())
{
var civilian = civilians.Random(world.SharedRandom);
civilian.Trait<Mobile>().Nudge(civilian, civilian, true);
nextCivilianMove += world.SharedRandom.Next(1, 75);
}
}
}
bool SovietBaseDestroyed()
{
return !world.Actors.Any(a => a.Owner == soviets && a.IsInWorld && !a.IsDead()
&& a.HasTrait<Building>() && !a.HasTrait<Wall>() && !a.HasTrait<Allies04TrivialBuilding>() && a != lab);
}
void OnDestroyBaseTimerExpired(CountdownTimer t)
{
if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed) return;
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The Soviet research laboratory was not secured in time.");
}
void BaseGuardTick()
{
if (baseGuardTicks <= 0 || baseGuard.IsDead() || !baseGuard.IsInWorld) return;
if (hijackTruck.Location == baseGuardTruckPos.Location)
{
if (--baseGuardTicks <= 0)
baseGuard.QueueActivity(new Move.Move(baseGuardMovePos.Location));
}
else
baseGuardTicks = 100;
}
void OnLabInfiltrated(Actor spy)
{
if (spy == allies1Spy) allies1SpyInfiltratedLab = true;
else if (spy == allies2Spy) allies2SpyInfiltratedLab = true;
if (allies1SpyInfiltratedLab && (allies2SpyInfiltratedLab || allies2Spy == null))
{
objectives[InfiltrateID].Status = ObjectiveStatus.Completed;
objectives[DestroyID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
frameInfiltrated = world.FrameNumber;
foreach (var actor in world.Actors.Where(a => !a.IsDead() && a.HasTrait<Allies04TransformOnLabInfiltrate>()))
actor.QueueActivity(false, new Transform(actor, actor.Info.Traits.Get<Allies04TransformOnLabInfiltrateInfo>().ToActor) { SkipMakeAnims = true });
}
}
void SendReinforcements()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(reinforcementsEntryPoint.Location)
});
lst.Trait<Cargo>().Load(lst, world.CreateActor(false, "mcv", new TypeDictionary { new OwnerInit(allies1) }));
if (allies1 != allies2)
lst.Trait<Cargo>().Load(lst, world.CreateActor(false, "mcv", new TypeDictionary { new OwnerInit(allies2) }));
lst.QueueActivity(new Move.Move(reinforcementsUnloadPoint.Location));
lst.QueueActivity(new Wait(10));
lst.QueueActivity(new CallFunc(() =>
{
allies1.PlayerActor.Trait<PlayerResources>().GiveCash(allies1 == allies2 ? 5000
if (allies1 != allies2)
allies2.PlayerActor.Trait<PlayerResources>().GiveCash(2500);
}));
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(reinforcementsEntryPoint.Location));
self.QueueActivity(new RemoveSelf());
}));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
class Patrol
{
Actor[] actors;
CPos[] points;
int pointIndex;
World world;
public Patrol(World world, string[] actorNames, Player owner, CPos[] points, int pointIndex)
{
this.world = world;
this.points = points;
this.pointIndex = pointIndex;
var td = new TypeDictionary { new OwnerInit(owner), new LocationInit(points[pointIndex]) };
actors = actorNames.Select(a => world.CreateActor(a, td)).ToArray();
}
public void DoPatrol()
{
if (actors.Any(a => a.IsDead() || !a.IsIdle || !a.IsInWorld)) return;
pointIndex = (pointIndex + 1) % points.Length;
foreach (var actor in actors.Where(a => !a.IsDead() && a.IsInWorld))
{
actor.QueueActivity(new Wait(world.SharedRandom.Next(50, 75)));
actor.QueueActivity(new AttackMove.AttackMoveActivity(actor, new Move.Move(points[pointIndex], 0)));
}
}
}
void InsertSpies()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(spyReinforcementsEntryPoint.Location)
});
allies1Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies1) });
lst.Trait<Cargo>().Load(lst, allies1Spy);
if (allies1 != allies2)
{
allies2Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies2) });
lst.Trait<Cargo>().Load(lst, allies2Spy);
}
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(spyReinforcementsExitPoint.Location));
self.QueueActivity(new RemoveSelf());
}));
lst.QueueActivity(new Move.Move(spyReinforcementsUnloadPoint.Location));
lst.QueueActivity(new Wait(10));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
void SetupSubStances()
{
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == soviets && !a.IsDead() && a.HasTrait<TargetableSubmarine>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
allies2 = w.Players.SingleOrDefault(p => p.InternalName == "Allies2");
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
creeps = w.Players.Single(p => p.InternalName == "Creeps");
objectives[InfiltrateID].Text = Infiltrate.F(allies1 != allies2 ? "spies"
destroyBaseTicks = difficulty == "Hard" ? 1500 * 25
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
spyReinforcementsEntryPoint = actors["SpyReinforcementsEntryPoint"];
spyReinforcementsUnloadPoint = actors["SpyReinforcementsUnloadPoint"];
spyReinforcementsExitPoint = actors["SpyReinforcementsExitPoint"];
hijackTruck = actors["HijackTruck"];
baseGuard = actors["BaseGuard"];
baseGuardMovePos = actors["BaseGuardMovePos"];
baseGuardTruckPos = actors["BaseGuardTruckPos"];
patrolPoints1 = new[]
{
actors["PatrolPoint11"].Location,
actors["PatrolPoint12"].Location,
actors["PatrolPoint13"].Location,
actors["PatrolPoint14"].Location,
actors["PatrolPoint15"].Location
};
patrolPoints2 = patrolPoints1;
patrolPoints3 = new[]
{
actors["PatrolPoint21"].Location,
actors["PatrolPoint22"].Location,
actors["PatrolPoint23"].Location,
actors["PatrolPoint24"].Location,
actors["PatrolPoint25"].Location
};
patrolPoints4 = new[]
{
actors["PatrolPoint31"].Location,
actors["PatrolPoint32"].Location,
actors["PatrolPoint33"].Location,
actors["PatrolPoint34"].Location
};
patrolPoints5 = new[]
{
actors["PatrolPoint41"].Location,
actors["PatrolPoint42"].Location,
actors["PatrolPoint43"].Location,
actors["PatrolPoint44"].Location,
actors["PatrolPoint45"].Location
};
lab = actors["Lab"];
lab.AddTrait(new InfiltrateAction(OnLabInfiltrated));
lab.AddTrait(new TransformedAction(self => lab = self));
reinforcementsEntryPoint = actors["ReinforcementsEntryPoint"];
reinforcementsUnloadPoint = actors["ReinforcementsUnloadPoint"];
patrols = new List<Patrol>
{
new Patrol(world, new[] { "e1", "e1", "e1", "e1", "e1" }, soviets, patrolPoints1, 0),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints2, 2),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints4, 0),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints5, 0),
};
if (difficulty == "Hard")
patrols.Add(new Patrol(world, new[] { "e1", "e1", "dog.patrol" }, soviets, patrolPoints3, 0));
bridgeTank = actors["BridgeTank"];
bridgeAttackPoint = actors["BridgeAttackPoint"];
bridge = world.Actors
.Where(a => a.HasTrait<Bridge>() && !a.IsDead())
.OrderBy(a => (a.Location - bridgeAttackPoint.Location).LengthSquared)
.FirstOrDefault();
var ta1 = actors["TownAttacker1"];
var ta2 = actors["TownAttacker2"];
var ta3 = actors["TownAttacker3"];
var ta4 = actors["TownAttacker4"];
var ta5 = actors["TownAttacker5"];
var ta6 = actors["TownAttacker6"];
var ta7 = actors["TownAttacker7"];
townAttackers = new[] { ta1, ta2, ta3, ta4, ta5, ta6, ta7 };
OnObjectivesUpdated(false);
SetupSubStances();
Game.MoveViewport(spyReinforcementsEntryPoint.Location.ToFloat2());
MissionUtils.PlayMissionMusic();
}
}
class Allies04HijackableInfo
{
public object Create(ActorInitializer init) { return new Allies04Hijackable(init.self); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2002" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2003" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2004" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2005" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2006" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2007" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\SmudgeLayer.cs" startline="24" endline="28">
<![CDATA[
public readonly string Type = "Scorch";
public readonly string[] Types = {"sc1", "sc2", "sc3", "sc4", "sc5", "sc6"};
public readonly int[] Depths = {1,1,1,1,1,1};
public readonly int SmokePercentage = 25;
public readonly string SmokeType = "smoke_m";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2008" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="72" endline="80">
<![CDATA[
public readonly int CruiseAltitude = 30;
[ActorReference]
public readonly string[] RepairBuildings = { "fix" };
[ActorReference]
public readonly string[] RearmBuildings = { "hpad", "afld" };
public readonly int InitialFacing = 128;
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly string[] LandableTerrainTypes = { };
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorMixerWidget.cs" startline="24" endline="38">
<![CDATA[
public float[] SRange = {0.2f, 1.0f};
public float[] VRange = {0.2f, 1.0f};
public event Action OnChange = () => {};
float H, S, V;
Bitmap frontBitmap, swapBitmap, backBitmap;
Sprite mixerSprite;
bool isMoving;
bool updateFront, updateBack;
object syncWorker = new object();
Thread workerThread;
bool workerAlive;
public ColorMixerWidget()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2009" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="202" endline="232">
<![CDATA[
public IEnumerable<Activity> GetResupplyActivities(Actor a)
{
var name = a.Info.Name;
if (Info.RearmBuildings.Contains(name))
yield return new Rearm(self);
if (Info.RepairBuildings.Contains(name))
yield return new Repair(a);
}
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Building>("Enter", 5, false, true,
target => AircraftCanEnter(target), target => !Reservable.IsReserved(target));
yield return new AircraftMoveOrderTargeter();
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Enter")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
if (order.OrderID == "Move")
return new Order(order.OrderID, self, queued) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="235" endline="254">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<IAcceptOre>("Deliver", 5, false, true, _ => true, proc => !IsEmpty && proc.Trait<IAcceptOre>().AllowDocking);
yield return new HarvestOrderTargeter();
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Deliver")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
if (order.OrderID == "Harvest")
return new Order(order.OrderID, self, queued) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2010" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs" startline="233" endline="244">
<![CDATA[
public string VoicePhraseForOrder(Actor self, Order order)
{
switch( order.OrderString )
{
case "Move"
case "Enter"
case "ReturnToBase"
return "Move";
default
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Mobile.cs" startline="314" endline="326">
<![CDATA[
public string VoicePhraseForOrder(Actor self, Order order)
{
switch( order.OrderString )
{
case "Move"
case "Scatter"
case "Stop"
return "Move";
default
return null;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2011" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackBase.cs" startline="99" endline="123">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
if (Armaments.Count() == 0)
yield break;
var negativeDamage = (Armaments.First().Weapon.Warheads[0].Damage < 0);
yield return new AttackOrderTargeter("Attack", 6, negativeDamage);
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order is AttackOrderTargeter)
{
if (target.IsActor)
return new Order("Attack", self, queued) { TargetActor = target.Actor };
else
return new Order("Attack", self, queued) { TargetLocation = target.CenterLocation.ToCPos() };
}
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Mobile.cs" startline="217" endline="229">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders { get { yield return new MoveOrderTargeter(Info); } }
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order is MoveOrderTargeter)
{
if (Info.OnRails) return null;
return new Order("Move", self, queued) { TargetLocation = target.CenterLocation.ToCPos() };
}
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2012" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackFrontal.cs" startline="44" endline="51">
<![CDATA[
public override Activity GetAttackActivity(Actor self, Target newTarget, bool allowMove)
{
var weapon = ChooseArmamentForTarget(newTarget);
if (weapon == null)
return null;
return new Activities.Attack(newTarget, Math.Max(0, (int)weapon.Weapon.Range), allowMove);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackLeap.cs" startline="45" endline="52">
<![CDATA[
public override Activity GetAttackActivity(Actor self, Target newTarget, bool allowMove)
{
var a = ChooseArmamentForTarget(newTarget);
if (a == null)
return null;
return new Activities.Attack(newTarget, Math.Max(0, (int)a.Weapon.Range), allowMove);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2013" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackFrontal.cs" startline="44" endline="51">
<![CDATA[
public override Activity GetAttackActivity(Actor self, Target newTarget, bool allowMove)
{
var weapon = ChooseArmamentForTarget(newTarget);
if (weapon == null)
return null;
return new Activities.Attack(newTarget, Math.Max(0, (int)weapon.Weapon.Range), allowMove);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackMedic.cs" startline="29" endline="36">
<![CDATA[
public override Activity GetAttackActivity(Actor self, Target newTarget, bool allowMove)
{
var weapon = ChooseArmamentForTarget(newTarget);
if (weapon == null)
return null;
return new Activities.Heal(newTarget, Math.Max(0, (int)weapon.Weapon.Range), allowMove);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2014" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Fly.cs" startline="25" endline="47">
<![CDATA[
public override Activity Tick(Actor self)
{
var cruiseAltitude = self.Info.Traits.Get<PlaneInfo>().CruiseAltitude;
if (IsCanceled) return NextActivity;
var d = Pos - self.CenterLocation;
if (d.LengthSquared < 50)		/* close enough */
return NextActivity;
var aircraft = self.Trait<Aircraft>();
var desiredFacing = Util.GetFacing(d.ToInt2(), aircraft.Facing);
if (aircraft.Altitude == cruiseAltitude)
aircraft.Facing = Util.TickFacing(aircraft.Facing, desiredFacing, aircraft.ROT);
if (aircraft.Altitude < cruiseAltitude)
++aircraft.Altitude;
FlyUtil.Fly(self, cruiseAltitude);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\FlyCircle.cs" startline="19" endline="35">
<![CDATA[
{
var cruiseAltitude = self.Info.Traits.Get<PlaneInfo>().CruiseAltitude;
if (IsCanceled) return NextActivity;
var aircraft = self.Trait<Aircraft>();
var desiredFacing = aircraft.Facing + 64;   // we can't possibly turn this fast.
if (aircraft.Altitude == cruiseAltitude)
aircraft.Facing = Util.TickFacing(aircraft.Facing, desiredFacing, aircraft.ROT);
if (aircraft.Altitude < cruiseAltitude)
++aircraft.Altitude;
FlyUtil.Fly(self, cruiseAltitude);
return this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2015" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\HeliLand.cs" startline="24" endline="21">
<![CDATA[
int minimalAltitude = 0;
public HeliLand(bool requireSpace, int minimalAltitude)
{
this.requireSpace = requireSpace;
this.minimalAltitude = minimalAltitude;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="30" endline="38">
<![CDATA[
[Sync] int chargeTick = 0;
public readonly ChronoshiftDeployInfo Info;
readonly Actor self;
public ChronoshiftDeploy(Actor self, ChronoshiftDeployInfo info)
{
this.self = self;
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2016" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\HeliLand.cs" startline="24" endline="21">
<![CDATA[
int minimalAltitude = 0;
public HeliLand(bool requireSpace, int minimalAltitude)
{
this.requireSpace = requireSpace;
this.minimalAltitude = minimalAltitude;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\StrategicVictoryConditions.cs" startline="25" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new StrategicVictoryConditions(init.self, this); }
}
public class StrategicVictoryConditions
{
Actor self;
StrategicVictoryConditionsInfo info;
[Sync] public int TicksLeft = 0;
public StrategicVictoryConditions(Actor self, StrategicVictoryConditionsInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2017" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\HeliLand.cs" startline="24" endline="21">
<![CDATA[
int minimalAltitude = 0;
public HeliLand(bool requireSpace, int minimalAltitude)
{
this.requireSpace = requireSpace;
this.minimalAltitude = minimalAltitude;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs" startline="22" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new WaterPaletteRotation(init.world, this); }
}
class WaterPaletteRotation
{
float t = 0;
readonly WaterPaletteRotationInfo info;
readonly World world;
public WaterPaletteRotation(World world, WaterPaletteRotationInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2018" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Helicopter.cs" startline="30" endline="35">
<![CDATA[
bool firstTick = true;
public Helicopter( ActorInitializer init, HelicopterInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="47" endline="45">
<![CDATA[
[Sync] bool isActive = false;
public ClassicProductionQueue(Actor self, ClassicProductionQueueInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2019" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Air\Helicopter.cs" startline="30" endline="35">
<![CDATA[
bool firstTick = true;
public Helicopter( ActorInitializer init, HelicopterInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TakeCover.cs" startline="31" endline="37">
<![CDATA[
[Sync] int remainingProneTime = 0;
public TakeCover(ActorInitializer init, TakeCoverInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2020" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2021" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2022" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2023" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2024" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2025" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2026" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2027" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2028" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2029" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2030" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2031" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2032" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2033" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2034" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2035" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2036" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2037" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2038" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2039" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2040" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2041" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2042" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2043" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2044" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2045" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2046" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AppearsOnRadar.cs" startline="21" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new AppearsOnRadar(this); }
}
public class AppearsOnRadar
{
AppearsOnRadarInfo info;
public AppearsOnRadar(AppearsOnRadarInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2047" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackLeap.cs" startline="21" endline="28">
<![CDATA[
}
class AttackLeap
{
[Sync] internal bool IsLeaping;
public AttackLeap(Actor self, AttackLeapInfo info)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\ExplodeCrateAction.cs" startline="18" endline="26">
<![CDATA[
public string Weapon = null;
public override object Create(ActorInitializer init) { return new ExplodeCrateAction(init.self, this); }
}
class ExplodeCrateAction
{
public ExplodeCrateAction(Actor self, ExplodeCrateActionInfo info)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2048" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackLeap.cs" startline="21" endline="28">
<![CDATA[
}
class AttackLeap
{
[Sync] internal bool IsLeaping;
public AttackLeap(Actor self, AttackLeapInfo info)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\RevealMapCrateAction.cs" startline="19" endline="25">
<![CDATA[
public override object Create(ActorInitializer init) { return new RevealMapCrateAction(init.self, this); }
}
class RevealMapCrateAction
{
public RevealMapCrateAction(Actor self, RevealMapCrateActionInfo info)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2049" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackLeap.cs" startline="21" endline="28">
<![CDATA[
}
class AttackLeap
{
[Sync] internal bool IsLeaping;
public AttackLeap(Actor self, AttackLeapInfo info)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableSubmarine.cs" startline="19" endline="26">
<![CDATA[
public override object Create( ActorInitializer init ) { return new TargetableSubmarine(init.self, this); }
}
public class TargetableSubmarine
{
public TargetableSubmarine(Actor self, TargetableSubmarineInfo info)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2050" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackLeap.cs" startline="45" endline="52">
<![CDATA[
public override Activity GetAttackActivity(Actor self, Target newTarget, bool allowMove)
{
var a = ChooseArmamentForTarget(newTarget);
if (a == null)
return null;
return new Activities.Attack(newTarget, Math.Max(0, (int)a.Weapon.Range), allowMove);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackMedic.cs" startline="29" endline="36">
<![CDATA[
public override Activity GetAttackActivity(Actor self, Target newTarget, bool allowMove)
{
var weapon = ChooseArmamentForTarget(newTarget);
if (weapon == null)
return null;
return new Activities.Heal(newTarget, Math.Max(0, (int)weapon.Weapon.Range), allowMove);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2051" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackTurreted.cs" startline="64" endline="71">
<![CDATA[
public override void ResolveOrder(Actor self, Order order)
{
base.ResolveOrder(self, order);
if (order.OrderString == "Stop")
target = Target.None;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackTesla.cs" startline="53" endline="61">
<![CDATA[
public override void ResolveOrder(Actor self, Order order)
{
base.ResolveOrder(self, order);
if (order.OrderString == "Stop")
self.CancelActivity();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2052" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackTurreted.cs" startline="64" endline="71">
<![CDATA[
public override void ResolveOrder(Actor self, Order order)
{
base.ResolveOrder(self, order);
if (order.OrderString == "Stop")
target = Target.None;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="49" endline="54">
<![CDATA[
public void ResolveOrder( Actor self, Order order )
{
if( order.OrderString == "SetRallyPoint" )
rallyPoint = order.TargetLocation;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2053" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2054" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2055" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2056" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2057" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2058" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2059" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2060" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2061" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2062" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2063" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2064" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2065" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2066" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2067" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2068" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2069" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2070" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2071" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs" startline="20" endline="30">
<![CDATA[
public object Create(ActorInitializer init) { return new AttackWander(init.self, this); }
}
class AttackWander
{
readonly AttackWanderInfo Info;
public AttackWander(Actor self, AttackWanderInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2072" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2073" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2074" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2075" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2076" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2077" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2078" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2079" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2080" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2081" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2082" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2083" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2084" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2085" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2086" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2087" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2088" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2089" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2090" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2091" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2092" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2093" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2094" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2095" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2096" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2097" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2098" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="21" endline="28">
<![CDATA[
[Desc("It will try to hunt down the enemy if it is not set to defend.")]
public readonly bool AllowMovement = true;
public readonly int ScanRadius = -1;
public readonly UnitStance InitialStance = UnitStance.AttackAnything;
[Desc("Ticks to wait until next AutoTarget
public readonly int MinimumScanTimeInterval = 3;
[Desc("Ticks to wait until next AutoTarget
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2099" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="54" endline="59">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "SetUnitStance")
stance = (UnitStance)order.TargetLocation.X;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="52" endline="57">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Surrender")
Lose(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2100" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="54" endline="59">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "SetUnitStance")
stance = (UnitStance)order.TargetLocation.X;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="44" endline="49">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "PrimaryProducer")
SetPrimaryProducer(self, !isPrimary);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2101" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="54" endline="59">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "SetUnitStance")
stance = (UnitStance)order.TargetLocation.X;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="49" endline="54">
<![CDATA[
public void ResolveOrder( Actor self, Order order )
{
if( order.OrderString == "SetRallyPoint" )
rallyPoint = order.TargetLocation;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2102" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="93" endline="98">
<![CDATA[
public void Tick(Actor self)
{
if (nextScanTime > 0)
--nextScanTime;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="39" endline="44">
<![CDATA[
public void Tick(Actor self)
{
if (chargeTick > 0)
chargeTick--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2103" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="93" endline="98">
<![CDATA[
public void Tick(Actor self)
{
if (nextScanTime > 0)
--nextScanTime;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2104" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="93" endline="98">
<![CDATA[
public void Tick(Actor self)
{
if (nextScanTime > 0)
--nextScanTime;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2105" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="93" endline="98">
<![CDATA[
public void Tick(Actor self)
{
if (nextScanTime > 0)
--nextScanTime;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="42" endline="47">
<![CDATA[
public void Tick(Actor self)
{
if (progress > 0)
progress--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2106" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="136" endline="148">
<![CDATA[
.Where(a => self.Owner.Shroud.IsTargetable(a))
.ClosestTo( self.CenterLocation );
}
}
}
[Desc("Will not get automatically targeted by enemy (like walls)")]
class AutoTargetIgnoreInfo
class AutoTargetIgnore { }
public class DebugRetiliateAgainstAggressorInfo
{
public object Create(ActorInitializer init) { return new DebugRetiliateAgainstAggressor(init.self); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="31" endline="456">
<![CDATA[
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
Actor[] townAttackers;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies1, allies2);
}
public void Tick(Actor self)
{
if (allies1.WinState != WinState.Undefined) return;
if (world.FrameNumber == 1)
InsertSpies();
if (frameInfiltrated != -1)
{
if (world.FrameNumber == frameInfiltrated + 100)
{
Sound.Play("aarrivs1.aud");
Game.MoveViewport(reinforcementsUnloadPoint.Location.ToFloat2());
world.AddFrameEndTask(w => SendReinforcements());
}
if (world.FrameNumber == frameInfiltrated + 200)
{
Sound.Play("timergo1.aud");
destroyBaseTimer = new CountdownTimer(destroyBaseTicks, OnDestroyBaseTimerExpired, true);
destroyBaseTimerWidget = new CountdownTimerWidget(destroyBaseTimer, "Secure lab in
Ui.Root.AddChild(destroyBaseTimerWidget);
}
if (world.FrameNumber >= frameInfiltrated + 200)
destroyBaseTimer.Tick();
if (world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead())
{
bridgeTank.QueueActivity(new Attack(Target.FromPos(bridge.CenterLocation), 4));
attackingBridge = true;
}
if (attackingBridge && bridge.IsDead())
{
if (!bridgeTank.IsDead())
bridgeTank.CancelActivity();
attackingBridge = false;
}
if (world.FrameNumber == frameInfiltrated + 1500 * 6)
foreach (var attacker in townAttackers.Where(a => !a.IsDead() && a.IsInWorld))
{
attacker.CancelActivity();
attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker, new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10, -15), 3)));
}
}
if (attackingTown)
{
foreach (var attacker in townAttackers.Where(u => u.IsIdle && !u.IsDead() && u.IsInWorld))
{
var enemies = world.Actors.Where(u => u.Owner == creeps && u.HasTrait<ITargetable>()
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>() && !u.HasTrait<Bridge>()) || u.HasTrait<Mobile>()) && !u.IsDead() && u.IsInWorld);
var enemy = enemies.OrderBy(u => (attacker.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker, new Attack(Target.FromActor(enemy), 3)));
else
{
attackingTown = false;
break;
}
}
}
foreach (var patrol in patrols)
patrol.DoPatrol();
MissionUtils.CapOre(soviets);
BaseGuardTick();
if (allies1Spy.IsDead() || (allies2Spy != null && allies2Spy.IsDead()))
{
objectives[InfiltrateID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("{0} spy was killed.".F(allies1 != allies2 ? "A"
}
else if (lab.IsDead())
MissionFailed("The Soviet research laboratory was destroyed.");
else if (!world.Actors.Any(a => (a.Owner == allies1 || a.Owner == allies2) && !a.IsDead()
&& (a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>()))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The remaining Allied forces in the area have been wiped out.");
}
else if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed)
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
MissionAccomplished("The Soviet research laboratory has been secured successfully.");
}
if (world.FrameNumber == nextCivilianMove)
{
var civilians = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && a.Owner == creeps && a.HasTrait<Mobile>());
if (civilians.Any())
{
var civilian = civilians.Random(world.SharedRandom);
civilian.Trait<Mobile>().Nudge(civilian, civilian, true);
nextCivilianMove += world.SharedRandom.Next(1, 75);
}
}
}
bool SovietBaseDestroyed()
{
return !world.Actors.Any(a => a.Owner == soviets && a.IsInWorld && !a.IsDead()
&& a.HasTrait<Building>() && !a.HasTrait<Wall>() && !a.HasTrait<Allies04TrivialBuilding>() && a != lab);
}
void OnDestroyBaseTimerExpired(CountdownTimer t)
{
if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed) return;
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The Soviet research laboratory was not secured in time.");
}
void BaseGuardTick()
{
if (baseGuardTicks <= 0 || baseGuard.IsDead() || !baseGuard.IsInWorld) return;
if (hijackTruck.Location == baseGuardTruckPos.Location)
{
if (--baseGuardTicks <= 0)
baseGuard.QueueActivity(new Move.Move(baseGuardMovePos.Location));
}
else
baseGuardTicks = 100;
}
void OnLabInfiltrated(Actor spy)
{
if (spy == allies1Spy) allies1SpyInfiltratedLab = true;
else if (spy == allies2Spy) allies2SpyInfiltratedLab = true;
if (allies1SpyInfiltratedLab && (allies2SpyInfiltratedLab || allies2Spy == null))
{
objectives[InfiltrateID].Status = ObjectiveStatus.Completed;
objectives[DestroyID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
frameInfiltrated = world.FrameNumber;
foreach (var actor in world.Actors.Where(a => !a.IsDead() && a.HasTrait<Allies04TransformOnLabInfiltrate>()))
actor.QueueActivity(false, new Transform(actor, actor.Info.Traits.Get<Allies04TransformOnLabInfiltrateInfo>().ToActor) { SkipMakeAnims = true });
}
}
void SendReinforcements()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(reinforcementsEntryPoint.Location)
});
lst.Trait<Cargo>().Load(lst, world.CreateActor(false, "mcv", new TypeDictionary { new OwnerInit(allies1) }));
if (allies1 != allies2)
lst.Trait<Cargo>().Load(lst, world.CreateActor(false, "mcv", new TypeDictionary { new OwnerInit(allies2) }));
lst.QueueActivity(new Move.Move(reinforcementsUnloadPoint.Location));
lst.QueueActivity(new Wait(10));
lst.QueueActivity(new CallFunc(() =>
{
allies1.PlayerActor.Trait<PlayerResources>().GiveCash(allies1 == allies2 ? 5000
if (allies1 != allies2)
allies2.PlayerActor.Trait<PlayerResources>().GiveCash(2500);
}));
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(reinforcementsEntryPoint.Location));
self.QueueActivity(new RemoveSelf());
}));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
class Patrol
{
Actor[] actors;
CPos[] points;
int pointIndex;
World world;
public Patrol(World world, string[] actorNames, Player owner, CPos[] points, int pointIndex)
{
this.world = world;
this.points = points;
this.pointIndex = pointIndex;
var td = new TypeDictionary { new OwnerInit(owner), new LocationInit(points[pointIndex]) };
actors = actorNames.Select(a => world.CreateActor(a, td)).ToArray();
}
public void DoPatrol()
{
if (actors.Any(a => a.IsDead() || !a.IsIdle || !a.IsInWorld)) return;
pointIndex = (pointIndex + 1) % points.Length;
foreach (var actor in actors.Where(a => !a.IsDead() && a.IsInWorld))
{
actor.QueueActivity(new Wait(world.SharedRandom.Next(50, 75)));
actor.QueueActivity(new AttackMove.AttackMoveActivity(actor, new Move.Move(points[pointIndex], 0)));
}
}
}
void InsertSpies()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(spyReinforcementsEntryPoint.Location)
});
allies1Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies1) });
lst.Trait<Cargo>().Load(lst, allies1Spy);
if (allies1 != allies2)
{
allies2Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies2) });
lst.Trait<Cargo>().Load(lst, allies2Spy);
}
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(spyReinforcementsExitPoint.Location));
self.QueueActivity(new RemoveSelf());
}));
lst.QueueActivity(new Move.Move(spyReinforcementsUnloadPoint.Location));
lst.QueueActivity(new Wait(10));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
void SetupSubStances()
{
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == soviets && !a.IsDead() && a.HasTrait<TargetableSubmarine>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
allies2 = w.Players.SingleOrDefault(p => p.InternalName == "Allies2");
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
creeps = w.Players.Single(p => p.InternalName == "Creeps");
objectives[InfiltrateID].Text = Infiltrate.F(allies1 != allies2 ? "spies"
destroyBaseTicks = difficulty == "Hard" ? 1500 * 25
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
spyReinforcementsEntryPoint = actors["SpyReinforcementsEntryPoint"];
spyReinforcementsUnloadPoint = actors["SpyReinforcementsUnloadPoint"];
spyReinforcementsExitPoint = actors["SpyReinforcementsExitPoint"];
hijackTruck = actors["HijackTruck"];
baseGuard = actors["BaseGuard"];
baseGuardMovePos = actors["BaseGuardMovePos"];
baseGuardTruckPos = actors["BaseGuardTruckPos"];
patrolPoints1 = new[]
{
actors["PatrolPoint11"].Location,
actors["PatrolPoint12"].Location,
actors["PatrolPoint13"].Location,
actors["PatrolPoint14"].Location,
actors["PatrolPoint15"].Location
};
patrolPoints2 = patrolPoints1;
patrolPoints3 = new[]
{
actors["PatrolPoint21"].Location,
actors["PatrolPoint22"].Location,
actors["PatrolPoint23"].Location,
actors["PatrolPoint24"].Location,
actors["PatrolPoint25"].Location
};
patrolPoints4 = new[]
{
actors["PatrolPoint31"].Location,
actors["PatrolPoint32"].Location,
actors["PatrolPoint33"].Location,
actors["PatrolPoint34"].Location
};
patrolPoints5 = new[]
{
actors["PatrolPoint41"].Location,
actors["PatrolPoint42"].Location,
actors["PatrolPoint43"].Location,
actors["PatrolPoint44"].Location,
actors["PatrolPoint45"].Location
};
lab = actors["Lab"];
lab.AddTrait(new InfiltrateAction(OnLabInfiltrated));
lab.AddTrait(new TransformedAction(self => lab = self));
reinforcementsEntryPoint = actors["ReinforcementsEntryPoint"];
reinforcementsUnloadPoint = actors["ReinforcementsUnloadPoint"];
patrols = new List<Patrol>
{
new Patrol(world, new[] { "e1", "e1", "e1", "e1", "e1" }, soviets, patrolPoints1, 0),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints2, 2),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints4, 0),
new Patrol(world, new[] { "e1", "dog.patrol", "dog.patrol" }, soviets, patrolPoints5, 0),
};
if (difficulty == "Hard")
patrols.Add(new Patrol(world, new[] { "e1", "e1", "dog.patrol" }, soviets, patrolPoints3, 0));
bridgeTank = actors["BridgeTank"];
bridgeAttackPoint = actors["BridgeAttackPoint"];
bridge = world.Actors
.Where(a => a.HasTrait<Bridge>() && !a.IsDead())
.OrderBy(a => (a.Location - bridgeAttackPoint.Location).LengthSquared)
.FirstOrDefault();
var ta1 = actors["TownAttacker1"];
var ta2 = actors["TownAttacker2"];
var ta3 = actors["TownAttacker3"];
var ta4 = actors["TownAttacker4"];
var ta5 = actors["TownAttacker5"];
var ta6 = actors["TownAttacker6"];
var ta7 = actors["TownAttacker7"];
townAttackers = new[] { ta1, ta2, ta3, ta4, ta5, ta6, ta7 };
OnObjectivesUpdated(false);
SetupSubStances();
Game.MoveViewport(spyReinforcementsEntryPoint.Location.ToFloat2());
MissionUtils.PlayMissionMusic();
}
}
class Allies04HijackableInfo
{
public object Create(ActorInitializer init) { return new Allies04Hijackable(init.self); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2107" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2108" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2109" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2110" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2111" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2112" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2113" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2114" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2115" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2116" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2117" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2118" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2119" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2120" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2121" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2122" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2123" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2124" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2125" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2126" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2127" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2128" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="149" endline="154">
<![CDATA[
}
public class DebugRetiliateAgainstAggressor
{
readonly AutoTarget a;
public DebugRetiliateAgainstAggressor(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2129" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2130" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2131" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2132" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2133" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2134" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2135" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2136" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2137" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2138" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2139" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2140" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2141" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2142" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2143" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2144" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2145" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2146" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2147" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2148" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2149" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\AutoTarget.cs" startline="161" endline="166">
<![CDATA[
}
public class DebugNextAutoTargetScanTime
{
readonly AutoTarget a;
public DebugNextAutoTargetScanTime(Actor self){ a = self.Trait<AutoTarget>(); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2150" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2151" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2152" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2153" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2154" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="25" endline="44">
<![CDATA[
public readonly int Speed = 1;
public readonly int Arm = 0;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly bool Shadow = true;
public readonly bool Proximity = false;
public readonly string Trail = null;
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Rate of Turning")]
public readonly int ROT = 5;
[Desc("Explode when following the target longer than this.")]
public readonly int RangeLimit = 0;
public readonly bool TurboBoost = false;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
public readonly bool Jammable = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2155" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2156" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Bridge.cs" startline="25" endline="41">
<![CDATA[
public readonly bool Long = false;
[Desc("Delay (in ticks) between repairing adjacent spans in long bridges")]
public readonly int RepairPropagationDelay = 20;
public readonly ushort Template = 0;
public readonly ushort DamagedTemplate = 0;
public readonly ushort DestroyedTemplate = 0;
public readonly ushort DestroyedPlusNorthTemplate = 0;
public readonly ushort DestroyedPlusSouthTemplate = 0;
public readonly ushort DestroyedPlusBothTemplate = 0;
public readonly string[] ShorePieces = {"br1", "br2"};
public readonly int[] NorthOffset = null;
public readonly int[] SouthOffset = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2157" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BridgeLayer.cs" startline="102" endline="110">
<![CDATA[
public Bridge GetBridge(CPos cell)
{
if (!world.Map.IsInMap(cell))
return null;
return Bridges[ cell.X, cell.Y ];
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BuildingInfluence.cs" startline="45" endline="50">
<![CDATA[
public Actor GetBuildingAt(CPos cell)
{
if (!map.IsInMap(cell)) return null;
return influence[cell.X, cell.Y];
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2158" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2159" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2160" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2161" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2162" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2163" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2164" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2165" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2166" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2167" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2168" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2169" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2170" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2171" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2172" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2173" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2174" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildable.cs" startline="17" endline="29">
<![CDATA[
public readonly string[] Prerequisites = { };
[ActorReference]
public readonly string[] BuiltAt = { };
public readonly string[] Owner = { };
public readonly string Queue;
public readonly bool Hidden = false;
public readonly int BuildLimit = 0;
public readonly int BuildPaletteOrder = 9999;
public readonly string Hotkey = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2175" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2176" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2177" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2178" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2179" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2180" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2181" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2182" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2183" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2184" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2185" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2186" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2187" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2188" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2189" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2190" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2191" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2192" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2193" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2194" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2195" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2196" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2197" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BuildingCaptureNotification.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new CaptureNotification(this); }
}
class CaptureNotification
{
CaptureNotificationInfo Info;
public CaptureNotification(CaptureNotificationInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2198" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BibLayer.cs" startline="73" endline="86">
<![CDATA[
public void Render( WorldRenderer wr )
{
var cliprect = Game.viewport.WorldBounds(world);
foreach (var kv in tiles)
{
if (!cliprect.Contains(kv.Key.X, kv.Key.Y))
continue;
if (world.ShroudObscures(kv.Key))
continue;
bibSprites[kv.Value.type - 1][kv.Value.index].DrawAt(wr, kv.Key.ToPPos().ToFloat2(), "terrain");
}
foreach (var kv in tiles)
{
if (!cliprect.Contains(kv.Key.X, kv.Key.Y))
continue;
if (world.ShroudObscures(kv.Key))
continue;
bibSprites[kv.Value.type - 1][kv.Value.index].DrawAt(wr, kv.Key.ToPPos().ToFloat2(), "terrain");
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\SmudgeLayer.cs" startline="77" endline="91">
<![CDATA[
public void Render( WorldRenderer wr )
{
var cliprect = Game.viewport.WorldBounds(world);
foreach (var kv in tiles)
{
if (!cliprect.Contains(kv.Key.X,kv.Key.Y))
continue;
if (world.ShroudObscures(kv.Key))
continue;
smudgeSprites[kv.Value.type- 1][kv.Value.index].DrawAt(wr, kv.Key.ToPPos().ToFloat2(), "terrain");
}
foreach (var kv in tiles)
{
if (!cliprect.Contains(kv.Key.X,kv.Key.Y))
continue;
if (world.ShroudObscures(kv.Key))
continue;
smudgeSprites[kv.Value.type- 1][kv.Value.index].DrawAt(wr, kv.Key.ToPPos().ToFloat2(), "terrain");
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2199" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2200" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Building.cs" startline="25" endline="37">
<![CDATA[
[Desc("If negative, it will drain power, if positive, it will provide power.")]
public readonly int Power = 0;
[Desc("Where you are allowed to place the building (Water, Clear, ...)")]
public readonly string[] TerrainTypes = {};
[Desc("The range to the next building it can be constructed. Set it higher for walls.")]
public readonly int Adjacent = 2;
[Desc("x means space it blocks, _ is a part that is passable by actors.")]
public readonly string Footprint = "x";
public readonly int2 Dimensions = new int2(1, 1);
public readonly bool RequiresBaseProvider = false;
public readonly string[] BuildSounds = {"placbldg.aud", "build5.aud"};
public readonly string[] SellSounds = {"cashturn.aud"};
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2201" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2202" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\InvulnEffect.cs" startline="23" endline="27">
<![CDATA[
public InvulnEffect(Actor a)
{
this.a = a;
this.b = a.Trait<IronCurtainable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2203" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2204" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="33" endline="37">
<![CDATA[
public Repairable(Actor self)
{
this.self = self;
Health = self.Trait<Health>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2205" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\RequiresPower.cs" startline="18" endline="27">
<![CDATA[
}
class RequiresPower
{
PowerManager power;
public RequiresPower( Actor self )
{
power = self.Owner.PlayerActor.Trait<PowerManager>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BridgeHut.cs" startline="23" endline="32">
<![CDATA[
}
class BridgeHut
{
public Bridge bridge;
public BridgeHut(ActorInitializer init)
{
bridge = init.Get<ParentActorInit>().value.Trait<Bridge>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2206" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2207" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2208" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2209" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2210" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2211" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2212" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2213" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2214" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2215" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2216" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2217" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2218" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2219" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2220" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2221" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2222" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2223" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2224" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2225" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2226" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2227" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\ShakeOnDeath.cs" startline="18" endline="28">
<![CDATA[
public object Create(ActorInitializer init) { return new ShakeOnDeath(this); }
}
public class ShakeOnDeath
{
readonly ShakeOnDeathInfo Info;
public ShakeOnDeath(ShakeOnDeathInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2228" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2229" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2230" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2231" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2232" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2233" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2234" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2235" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2236" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2237" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2238" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2239" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2240" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2241" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2242" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2243" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2244" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2245" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2246" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2247" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2248" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\SoundOnDamageTransition.cs" startline="21" endline="30">
<![CDATA[
}
public class SoundOnDamageTransition
{
readonly SoundOnDamageTransitionInfo Info;
public SoundOnDamageTransition( SoundOnDamageTransitionInfo info )
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2249" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2250" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2251" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2252" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2253" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2254" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2255" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2256" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2257" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2258" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2259" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2260" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="19" endline="32">
<![CDATA[
public readonly string CrushSound;
public object Create(ActorInitializer init) { return new Wall(init.self, this); }
}
public class Wall
{
readonly Actor self;
readonly WallInfo info;
public Wall(Actor self, WallInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2261" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\Wall.cs" startline="35" endline="42">
<![CDATA[
public bool CrushableBy(string[] crushClasses, Player crushOwner)
{
if (crushOwner.Stances[self.Owner] == Stance.Ally)
return false;
return info.CrushClasses.Intersect(crushClasses).Any();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrushableInfantry.cs" startline="54" endline="61">
<![CDATA[
public bool CrushableBy(string[] crushClasses, Player crushOwner)
{
if (crushOwner.Stances[self.Owner] == Stance.Ally)
return false;
return Info.CrushClasses.Intersect(crushClasses).Any();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2262" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2263" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2264" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2265" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2266" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2267" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2268" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2269" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2270" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2271" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2272" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2273" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2274" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2275" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="35" endline="47">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new TargetTypeOrderTargeter("C4", "C4", 6, "c4", true, false); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "C4")
return new Order("C4", self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2276" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="48" endline="58">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "C4")
{
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Demolish(order.TargetActor, Info.C4Delay)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="62" endline="75">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "CaptureActor")
{
if (!CanCapture(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new CaptureActor(order.TargetActor));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2277" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="48" endline="58">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "C4")
{
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Demolish(order.TargetActor, Info.C4Delay)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="42" endline="53">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "EngineerRepair" &&
order.TargetActor.GetDamageState() > DamageState.Undamaged)
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new RepairBuilding(order.TargetActor)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2278" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="48" endline="58">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "C4")
{
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Demolish(order.TargetActor, Info.C4Delay)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="55" endline="64">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "DeliverSupplies")
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new DonateSupplies(order.TargetActor, Info.Payload)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2279" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\C4Demolition.cs" startline="48" endline="58">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "C4")
{
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Demolish(order.TargetActor, Info.C4Delay)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="59" endline="72">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Infiltrate")
{
if (!CanInfiltrate(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Infiltrate(order.TargetActor)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2280" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2281" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2282" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2283" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2284" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2285" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2286" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2287" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2288" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2289" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2290" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2291" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2292" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2293" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2294" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2295" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2296" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2297" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2298" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2299" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2300" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2301" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2302" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2303" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2304" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="22" endline="26">
<![CDATA[
public readonly string Type = "building";
public readonly bool AllowAllies = false;
public readonly bool AllowNeutral = true;
public readonly bool AllowEnemies = true;
[Desc("Seconds it takes to change the owner.", "It stays neutral during this period. You might want to add a CapturableBar
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2305" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2306" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2307" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2308" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2309" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2310" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2311" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Capturable.cs" startline="34" endline="42">
<![CDATA[
[Sync] public Actor Captor = null;
[Sync] public int CaptureProgressTime = 0;
public bool CaptureInProgress { get { return Captor != null; } }
public CapturableInfo Info;
public Capturable(CapturableInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2312" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2313" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2314" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2315" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2316" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2317" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2318" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2319" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2320" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2321" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2322" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2323" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2324" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2325" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2326" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2327" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CapturableBar.cs" startline="22" endline="31">
<![CDATA[
}
class CapturableBar
{
Capturable cap;
public CapturableBar(Actor self)
{
this.cap = self.Trait<Capturable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2328" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2329" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2330" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2331" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2332" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2333" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2334" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2335" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2336" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2337" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2338" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="35" endline="39">
<![CDATA[
public Captures(Actor self, CapturesInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2339" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2340" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2341" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2342" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2343" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2344" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2345" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2346" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2347" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2348" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2349" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2350" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2351" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="40" endline="55">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new CaptureOrderTargeter(Info.CaptureTypes, target => CanCapture(target));
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if (order.OrderID == "CaptureActor")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2352" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="56" endline="61">
<![CDATA[
public string VoicePhraseForOrder(Actor self, Order order)
{
return (order.OrderString == "CaptureActor"
&& CanCapture(order.TargetActor)) ? "Attack"
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="36" endline="41">
<![CDATA[
public string VoicePhraseForOrder(Actor self, Order order)
{
return (order.OrderString == "EngineerRepair" &&
order.TargetActor.GetDamageState() > DamageState.Undamaged) ? "Attack"
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2353" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="62" endline="75">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "CaptureActor")
{
if (!CanCapture(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new CaptureActor(order.TargetActor));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="76" endline="87">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2354" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="62" endline="75">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "CaptureActor")
{
if (!CanCapture(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new CaptureActor(order.TargetActor));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="55" endline="64">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "DeliverSupplies")
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new DonateSupplies(order.TargetActor, Info.Payload)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2355" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Captures.cs" startline="62" endline="75">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "CaptureActor")
{
if (!CanCapture(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new CaptureActor(order.TargetActor));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="59" endline="72">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Infiltrate")
{
if (!CanInfiltrate(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Infiltrate(order.TargetActor)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2356" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2357" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2358" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2359" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2360" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2361" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2362" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2363" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2364" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2365" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2366" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2367" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2368" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2369" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2370" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2371" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2372" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2373" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2374" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2375" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2376" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2377" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2378" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="22" endline="27">
<![CDATA[
public readonly int MaxWeight = 0;
public readonly int PipCount = 0;
public readonly string[] Types = { };
public readonly int UnloadFacing = 0;
public readonly string[] InitialUnits = { };
public readonly int minimalUnloadAltitude = 0;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2379" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2380" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2381" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2382" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2383" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2384" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2385" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2386" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2387" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2388" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2389" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="63" endline="75">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "Unload", 10, () => CanUnload( self ) ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2390" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="76" endline="87">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="59" endline="72">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Infiltrate")
{
if (!CanInfiltrate(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Infiltrate(order.TargetActor)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2391" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="118" endline="123">
<![CDATA[
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="62" endline="68">
<![CDATA[
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "EnterTransport" ||
!CanEnter(order.TargetActor)) return null;
return "Move";
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2392" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="153" endline="166">
<![CDATA[
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="385" endline="397">
<![CDATA[
PipType GetPipAt(int i)
{
var n = i * Info.Capacity / Info.PipCount;
foreach (var rt in contents)
if (n < rt.Value)
return rt.Key.PipColor;
else
n -= rt.Value;
foreach (var rt in contents)
if (n < rt.Value)
return rt.Key.PipColor;
else
n -= rt.Value;
return PipType.Transparent;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2393" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2394" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2395" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2396" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cargo.cs" startline="67" endline="191">
<![CDATA[
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Unload" )
return new Order( order.OrderID, self, queued );
return null;
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Unload")
{
if (!CanUnload(self))
return;
self.CancelActivity();
self.QueueActivity(new UnloadCargo(true));
}
}
bool CanUnload(Actor self)
{
if (IsEmpty(self))
return false;
var move = self.TraitOrDefault<IMove>();
if (move != null && move.Altitude > info.minimalUnloadAltitude)
return false;
return true;
}
public bool CanLoad(Actor self, Actor a)
{
if (!HasSpace(GetWeight(a)))
return false;
var move = self.TraitOrDefault<IMove>();
return move == null || move.Altitude == info.minimalUnloadAltitude;
}
public string CursorForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload") return null;
return CanUnload(self) ? "deploy"
}
public string VoicePhraseForOrder(Actor self, Order order)
{
if (order.OrderString != "Unload" || IsEmpty(self)) return null;
return "Move";
}
public bool HasSpace(int weight) { return totalWeight + weight <= info.MaxWeight; }
public bool IsEmpty(Actor self) { return cargo.Count == 0; }
public Actor Peek(Actor self) {	return cargo[0]; }
static int GetWeight(Actor a) { return a.Info.Traits.Get<PassengerInfo>().Weight; }
public Actor Unload(Actor self)
{
var a = cargo[0];
cargo.RemoveAt(0);
totalWeight -= GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerExited>() )
npe.PassengerExited( self, a );
return a;
}
public IEnumerable<PipType> GetPips(Actor self)
{
int numPips = info.PipCount;
for (int i = 0; i < numPips; i++)
yield return GetPipAt(i);
}
PipType GetPipAt(int i)
{
var n = i * info.MaxWeight / info.PipCount;
foreach (var c in cargo)
{
var pi = c.Info.Traits.Get<PassengerInfo>();
if (n < pi.Weight)
return pi.PipType;
else
n -= pi.Weight;
}
return PipType.Transparent;
}
public void Load(Actor self, Actor a)
{
cargo.Add(a);
totalWeight += GetWeight(a);
foreach( var npe in self.TraitsImplementing<INotifyPassengerEntered>() )
npe.PassengerEntered( self, a );
}
public void Killed(Actor self, AttackInfo e)
{
foreach( var c in cargo )
c.Destroy();
cargo.Clear();
}
}
public interface INotifyPassengerEntered { void PassengerEntered(Actor self, Actor passenger); }
public interface INotifyPassengerExited { void PassengerExited(Actor self, Actor passenger); }
public class CargoInit
{
[FieldFromYamlKey] public readonly Actor[] value = {};
public CargoInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2397" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2398" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2399" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2400" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2401" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2402" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2403" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2404" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2405" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2406" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2407" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2408" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2409" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2410" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2411" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2412" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2413" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2414" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2415" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2416" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2417" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2418" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2419" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CashTrickler.cs" startline="20" endline="28">
<![CDATA[
[Desc("Amount of money to give each time.")]
public readonly int Period = 50;
[Desc("Number of ticks to wait between giving money.")]
public readonly int Amount = 15;
[Desc("Whether to show the cash tick indicators (+$15 rising from actor).")]
public readonly bool ShowTicks = true;
[Desc("How long the cash tick indicator should be shown for.")]
public readonly int TickLifetime = 30;
[Desc("Pixels/tick upward movement of the cash tick indicator.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2420" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="30" endline="38">
<![CDATA[
[Sync] int chargeTick = 0;
public readonly ChronoshiftDeployInfo Info;
readonly Actor self;
public ChronoshiftDeploy(Actor self, ChronoshiftDeployInfo info)
{
this.self = self;
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\StrategicVictoryConditions.cs" startline="25" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new StrategicVictoryConditions(init.self, this); }
}
public class StrategicVictoryConditions
{
Actor self;
StrategicVictoryConditionsInfo info;
[Sync] public int TicksLeft = 0;
public StrategicVictoryConditions(Actor self, StrategicVictoryConditionsInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2421" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="30" endline="38">
<![CDATA[
[Sync] int chargeTick = 0;
public readonly ChronoshiftDeployInfo Info;
readonly Actor self;
public ChronoshiftDeploy(Actor self, ChronoshiftDeployInfo info)
{
this.self = self;
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs" startline="22" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new WaterPaletteRotation(init.world, this); }
}
class WaterPaletteRotation
{
float t = 0;
readonly WaterPaletteRotationInfo info;
readonly World world;
public WaterPaletteRotation(World world, WaterPaletteRotationInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2422" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="39" endline="44">
<![CDATA[
public void Tick(Actor self)
{
if (chargeTick > 0)
chargeTick--;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2423" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="39" endline="44">
<![CDATA[
public void Tick(Actor self)
{
if (chargeTick > 0)
chargeTick--;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2424" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="39" endline="44">
<![CDATA[
public void Tick(Actor self)
{
if (chargeTick > 0)
chargeTick--;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="42" endline="47">
<![CDATA[
public void Tick(Actor self)
{
if (progress > 0)
progress--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2425" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="138" endline="143">
<![CDATA[
public void Tick(World world)
{
if (!self.IsInWorld || self.IsDead())
world.CancelInputMode();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="37" endline="56">
<![CDATA[
IEnumerable<Order> OrderInner(World world, CPos xy, MouseInput mi)
{
if (mi.Button == MouseButton.Left)
{
var underCursor = world.FindUnitsAtMouse(mi.Location)
.Where(a => a.Owner == world.LocalPlayer
&& a.HasTrait<T>()).FirstOrDefault();
if (underCursor != null)
yield return new Order(order, underCursor, false);
}
}
public void Tick(World world)
{
if (world.LocalPlayer != null &&
world.LocalPlayer.WinState != WinState.Undefined)
world.CancelInputMode();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2426" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs" startline="138" endline="143">
<![CDATA[
public void Tick(World world)
{
if (!self.IsInWorld || self.IsDead())
world.CancelInputMode();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\RepairOrderGenerator.cs" startline="28" endline="50">
<![CDATA[
IEnumerable<Order> OrderInner(World world, CPos xy, MouseInput mi)
{
if (mi.Button == MouseButton.Left)
{
var underCursor = world.FindUnitsAtMouse(mi.Location)
.Where(a => a.AppearsFriendlyTo(world.LocalPlayer.PlayerActor) && a.HasTrait<RepairableBuilding>()).FirstOrDefault();
if (underCursor == null)
yield break;
if (underCursor.Info.Traits.Contains<RepairableBuildingInfo>()
&& underCursor.GetDamageState() > DamageState.Undamaged)
yield return new Order("RepairBuilding", world.LocalPlayer.PlayerActor, false) { TargetActor = underCursor };
}
}
public void Tick(World world)
{
if (world.LocalPlayer != null &&
world.LocalPlayer.WinState != WinState.Undefined)
world.CancelInputMode();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2427" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2428" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="42" endline="47">
<![CDATA[
public void Tick(Actor self)
{
if (progress > 0)
progress--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2429" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs" startline="35" endline="53">
<![CDATA[
public void AdjustPalette(Dictionary<string,Palette> palettes)
{
if (remainingFrames == 0)
return;
var frac = (float)remainingFrames / chronoEffectLength;
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var lum = (int)(255 * orig.GetBrightness());
var desat = Color.FromArgb(orig.A, lum, lum, lum);
pal.Value.SetColor(x, Exts.ColorLerp(frac, orig, desat));
}
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var lum = (int)(255 * orig.GetBrightness());
var desat = Color.FromArgb(orig.A, lum, lum, lum);
pal.Value.SetColor(x, Exts.ColorLerp(frac, orig, desat));
}
}
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var lum = (int)(255 * orig.GetBrightness());
var desat = Color.FromArgb(orig.A, lum, lum, lum);
pal.Value.SetColor(x, Exts.ColorLerp(frac, orig, desat));
}
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="540" endline="565">
<![CDATA[
public readonly string ToActor = null;
}
class Allies04TransformOnLabInfiltrate { }
class Allies04HazyPaletteEffectInfo
class Allies04HazyPaletteEffect
{
static readonly string[] ExcludePalettes = { "cursor", "chrome", "colorpicker", "fog", "shroud" };
public void AdjustPalette(Dictionary<string, Palette> palettes)
{
foreach (var pal in palettes)
{
if (ExcludePalettes.Contains(pal.Key))
continue;
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
}
foreach (var pal in palettes)
{
if (ExcludePalettes.Contains(pal.Key))
continue;
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2430" semantic_similarity= "0.95" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs" startline="35" endline="53">
<![CDATA[
public void AdjustPalette(Dictionary<string,Palette> palettes)
{
if (remainingFrames == 0)
return;
var frac = (float)remainingFrames / chronoEffectLength;
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var lum = (int)(255 * orig.GetBrightness());
var desat = Color.FromArgb(orig.A, lum, lum, lum);
pal.Value.SetColor(x, Exts.ColorLerp(frac, orig, desat));
}
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var lum = (int)(255 * orig.GetBrightness());
var desat = Color.FromArgb(orig.A, lum, lum, lum);
pal.Value.SetColor(x, Exts.ColorLerp(frac, orig, desat));
}
}
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var lum = (int)(255 * orig.GetBrightness());
var desat = Color.FromArgb(orig.A, lum, lum, lum);
pal.Value.SetColor(x, Exts.ColorLerp(frac, orig, desat));
}
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs" startline="35" endline="52">
<![CDATA[
public void AdjustPalette(Dictionary<string,Palette> palettes)
{
if (remainingFrames == 0)
return;
var frac = (float)remainingFrames / nukeEffectLength;
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var white = Color.FromArgb(orig.A, 255, 255, 255);
pal.Value.SetColor(x, Exts.ColorLerp(frac,orig,white));
}
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var white = Color.FromArgb(orig.A, 255, 255, 255);
pal.Value.SetColor(x, Exts.ColorLerp(frac,orig,white));
}
}
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var white = Color.FromArgb(orig.A, 255, 255, 255);
pal.Value.SetColor(x, Exts.ColorLerp(frac,orig,white));
}
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2431" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Chronoshiftable.cs" startline="81" endline="89">
<![CDATA[
public float GetValue()
{
if (chronoshiftReturnTicks == 0) // otherwise an empty bar is rendered all the time
return 0f;
return (float)chronoshiftReturnTicks / TotalTicks;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\IronCurtainable.cs" startline="44" endline="52">
<![CDATA[
public float GetValue()
{
if (RemainingTicks == 0) // otherwise an empty bar is rendered all the time
return 0f;
return (float)RemainingTicks / TotalTicks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2432" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2433" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2434" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2435" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2436" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2437" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2438" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2439" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2440" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2441" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2442" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2443" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2444" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2445" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2446" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2447" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2448" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2449" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2450" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="22" endline="27">
<![CDATA[
public int InitialDelay = 10; // Ticks
public int CloakDelay = 30; // Ticks
public string CloakSound = "subshow1.aud";
public string UncloakSound = "subshow1.aud";
public readonly string Palette = "cloak";
public readonly bool UncloakOnMove = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2451" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Cloak.cs" startline="35" endline="47">
<![CDATA[
[Sync] bool canCloak = true;
Actor self;
CloakInfo info;
CPos? lastPos;
public Cloak(Actor self, CloakInfo info)
{
this.info = info;
this.self = self;
remainingTime = info.InitialDelay;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Drag.cs" startline="21" endline="28">
<![CDATA[
int ticks = 0;
public Drag(PPos start, PPos end, int length)
{
startLocation = start;
endLocation = end;
this.length = length;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2452" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2453" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2454" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2455" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2456" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2457" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2458" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2459" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2460" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2461" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="28" endline="32">
<![CDATA[
public ConquestVictoryConditions(World world, ConquestVictoryConditionsInfo info)
{
world.ObserveAfterWinOrLose = true;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2462" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="52" endline="57">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Surrender")
Lose(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="44" endline="49">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "PrimaryProducer")
SetPrimaryProducer(self, !isPrimary);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2463" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="52" endline="57">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Surrender")
Lose(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="49" endline="54">
<![CDATA[
public void ResolveOrder( Actor self, Order order )
{
if( order.OrderString == "SetRallyPoint" )
rallyPoint = order.TargetLocation;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2464" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="50" endline="97">
<![CDATA[
Win(self);
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Surrender")
Lose(self);
}
public void Lose(Actor self)
{
if (self.Owner.WinState == WinState.Lost) return;
self.Owner.WinState = WinState.Lost;
Game.Debug("{0} is defeated.".F(self.Owner.PlayerName));
foreach (var a in self.World.Actors.Where(a => a.Owner == self.Owner))
a.Kill(a);
if (self.Owner == self.World.LocalPlayer)
Game.RunAfterDelay(Info.NotificationDelay, () =>
{
if (Game.IsCurrentWorld(self.World))
Sound.PlayNotification(self.Owner, "Speech", "Lose", self.Owner.Country.Race);
});
}
public void Win(Actor self)
{
if (self.Owner.WinState == WinState.Won) return;
self.Owner.WinState = WinState.Won;
Game.Debug("{0} is victorious.".F(self.Owner.PlayerName));
if (self.Owner == self.World.LocalPlayer)
Game.RunAfterDelay(Info.NotificationDelay, () => Sound.PlayNotification(self.Owner, "Speech", "Win", self.Owner.Country.Race));
}
}
[Desc("Tag trait for things that must be destroyed for a short game to end.")]
public class MustBeDestroyedInfo
public class MustBeDestroyed { }
[Desc("Provides game mode information for players/observers.",
"Goes on WorldActor - observers don't have a player it can live on.")]
public class ConquestObjectivesPanelInfo
{
public string ObjectivesPanel = null;
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="29" endline="43">
<![CDATA[
}
public enum ObjectiveType { Primary, Secondary }
public enum ObjectiveStatus { Inactive, InProgress, Completed, Failed }
public interface IHasObjectives
{
event Action<bool> OnObjectivesUpdated;
IEnumerable<Objective> Objectives { get; }
}
public class MissionObjectivesPanelInfo
{
public string ObjectivesPanel = null;
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2465" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="50" endline="97">
<![CDATA[
Win(self);
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Surrender")
Lose(self);
}
public void Lose(Actor self)
{
if (self.Owner.WinState == WinState.Lost) return;
self.Owner.WinState = WinState.Lost;
Game.Debug("{0} is defeated.".F(self.Owner.PlayerName));
foreach (var a in self.World.Actors.Where(a => a.Owner == self.Owner))
a.Kill(a);
if (self.Owner == self.World.LocalPlayer)
Game.RunAfterDelay(Info.NotificationDelay, () =>
{
if (Game.IsCurrentWorld(self.World))
Sound.PlayNotification(self.Owner, "Speech", "Lose", self.Owner.Country.Race);
});
}
public void Win(Actor self)
{
if (self.Owner.WinState == WinState.Won) return;
self.Owner.WinState = WinState.Won;
Game.Debug("{0} is victorious.".F(self.Owner.PlayerName));
if (self.Owner == self.World.LocalPlayer)
Game.RunAfterDelay(Info.NotificationDelay, () => Sound.PlayNotification(self.Owner, "Speech", "Win", self.Owner.Country.Race));
}
}
[Desc("Tag trait for things that must be destroyed for a short game to end.")]
public class MustBeDestroyedInfo
public class MustBeDestroyed { }
[Desc("Provides game mode information for players/observers.",
"Goes on WorldActor - observers don't have a player it can live on.")]
public class ConquestObjectivesPanelInfo
{
public string ObjectivesPanel = null;
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="29" endline="185">
<![CDATA[
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.InProgress) }
};
const int DestroyID = 0;
const string Destroy = "A pitiful excuse for resistance has blockaded itself in this village."
+ " Stalin has decided to make an example of them. Kill them all and destroy their homes."
+ " You will have Yak aircraft to use in teaching these rebels a lesson.";
World world;
Player ussr;
Player france;
Actor startJeep;
Actor startJeepMovePoint;
Actor church;
bool startJeepParadropped;
bool churchParadropped;
Actor paradropPoint1;
Actor paradropEntryPoint1;
Actor paradropPoint2;
Actor paradropEntryPoint2;
Actor airfield1;
Actor airfield2;
Actor airfield3;
Actor[] airfields;
const string BadgerName = "badr";
static readonly string[] Reinforcements = { "e1", "e1", "e1", "e2", "e2" };
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, ussr);
}
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, ussr);
}
public void Tick(Actor self)
{
if (ussr.WinState != WinState.Undefined) return;
var unitsAndBuildings = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && (a.HasTrait<Mobile>() || (a.HasTrait<Building>() && !a.HasTrait<Wall>())));
if (!unitsAndBuildings.Any(a => a.Owner == france))
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
MissionAccomplished("We destroyed the resistance.");
}
else if (!unitsAndBuildings.Any(a => a.Owner == ussr))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
MissionFailed("We were destroyed by the resistance.");
}
if (!startJeepParadropped && startJeep.IsDead())
{
Sound.Play("reinfor1.aud");
MissionUtils.Paradrop(world, ussr, Reinforcements, paradropEntryPoint1.Location, paradropPoint1.Location);
startJeepParadropped = true;
}
if (!churchParadropped && church.IsDead())
{
Sound.Play("reinfor1.aud");
MissionUtils.Paradrop(world, ussr, Reinforcements, paradropEntryPoint2.Location, paradropPoint2.Location);
churchParadropped = true;
}
}
void LandYaks()
{
foreach (var airfield in airfields)
{
var entry = airfield.Location - new CVec(10, 0);
var yak = world.CreateActor("yak", new TypeDictionary
{
new OwnerInit(ussr),
new LocationInit(entry),
new FacingInit(Util.GetFacing(airfield.Location - entry, 0)),
new AltitudeInit(Rules.Info["yak"].Traits.Get<PlaneInfo>().CruiseAltitude)
});
while (yak.Trait<LimitedAmmo>().TakeAmmo()) { }
yak.QueueActivity(new ReturnToBase(yak, airfield));
yak.QueueActivity(new ResupplyAircraft());
}
}
void MoveJeep()
{
startJeep.QueueActivity(new Move.Move(startJeepMovePoint.Location, 0));
startJeep.QueueActivity(new Turn(128));
startJeep.QueueActivity(new CallFunc(() =>
{
var bridge = world.Actors
.Where(a => a.HasTrait<Bridge>() && !a.IsDead())
.OrderBy(a => (startJeep.CenterLocation - a.CenterLocation).LengthSquared)
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
france = w.Players.Single(p => p.InternalName == "France");
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
startJeep = actors["StartJeep"];
startJeepMovePoint = actors["StartJeepMovePoint"];
paradropPoint1 = actors["ParadropPoint1"];
paradropEntryPoint1 = actors["ParadropEntryPoint1"];
paradropPoint2 = actors["ParadropPoint2"];
paradropEntryPoint2 = actors["ParadropEntryPoint2"];
church = actors["Church"];
airfield1 = actors["Airfield1"];
airfield2 = actors["Airfield2"];
airfield3 = actors["Airfield3"];
airfields = new[] { airfield1, airfield2, airfield3 };
Game.MoveViewport(startJeep.Location.ToFloat2());
if (w.LobbyInfo.IsSinglePlayer)
{
Media.PlayFMVFullscreen(w, "soviet1.vqa", () =>
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
});
}
else
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
}
}
}
class Soviet01ClassicContainsActorsInfo
{
public readonly string[] Actors = { };
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2466" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="50" endline="97">
<![CDATA[
Win(self);
}
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Surrender")
Lose(self);
}
public void Lose(Actor self)
{
if (self.Owner.WinState == WinState.Lost) return;
self.Owner.WinState = WinState.Lost;
Game.Debug("{0} is defeated.".F(self.Owner.PlayerName));
foreach (var a in self.World.Actors.Where(a => a.Owner == self.Owner))
a.Kill(a);
if (self.Owner == self.World.LocalPlayer)
Game.RunAfterDelay(Info.NotificationDelay, () =>
{
if (Game.IsCurrentWorld(self.World))
Sound.PlayNotification(self.Owner, "Speech", "Lose", self.Owner.Country.Race);
});
}
public void Win(Actor self)
{
if (self.Owner.WinState == WinState.Won) return;
self.Owner.WinState = WinState.Won;
Game.Debug("{0} is victorious.".F(self.Owner.PlayerName));
if (self.Owner == self.World.LocalPlayer)
Game.RunAfterDelay(Info.NotificationDelay, () => Sound.PlayNotification(self.Owner, "Speech", "Win", self.Owner.Country.Race));
}
}
[Desc("Tag trait for things that must be destroyed for a short game to end.")]
public class MustBeDestroyedInfo
public class MustBeDestroyed { }
[Desc("Provides game mode information for players/observers.",
"Goes on WorldActor - observers don't have a player it can live on.")]
public class ConquestObjectivesPanelInfo
{
public string ObjectivesPanel = null;
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\TechTree.cs" startline="62" endline="124">
<![CDATA[
if (player == null)
return ret;
foreach (var b in player.World.ActorsWithTrait<ITechTreePrerequisite>()
.Where(a => a.Actor.IsInWorld && !a.Actor.IsDead() && a.Actor.Owner == player))
foreach (var p in b.Trait.ProvidesPrerequisites)
ret[ p ].Add( b.Actor );
player.World.ActorsWithTrait<Buildable>()
.Where(a => a.Actor.Info.Traits.Get<BuildableInfo>().BuildLimit > 0 && !a.Actor.IsDead() && a.Actor.Owner == player && ret.Keys.All(k => k != a.Actor.Info.Name))
.ToList()
.ForEach(b => ret[b.Actor.Info.Name].Add(b.Actor));
return ret;
}
class Watcher
{
public readonly string key;
public readonly string[] prerequisites;
public readonly ITechTreeElement watcher;
bool hasPrerequisites;
int buildLimit;
public Watcher(string key, BuildableInfo info, ITechTreeElement watcher)
{
this.key = key;
this.prerequisites = info.Prerequisites;
this.watcher = watcher;
this.hasPrerequisites = false;
this.buildLimit = info.BuildLimit;
}
bool HasPrerequisites(Cache<string, List<Actor>> buildables)
{
return prerequisites.All(p => !(p.StartsWith("!") ^ !buildables.Keys.Contains(p.Replace("!", ""))));
}
public void Update(Cache<string, List<Actor>> buildables)
{
var hasReachedBuildLimit = buildLimit > 0 && buildables[key].Count >= buildLimit;
var nowHasPrerequisites = HasPrerequisites(buildables) && !hasReachedBuildLimit;
if( nowHasPrerequisites && !hasPrerequisites )
watcher.PrerequisitesAvailable(key);
if( !nowHasPrerequisites && hasPrerequisites )
watcher.PrerequisitesUnavailable(key);
hasPrerequisites = nowHasPrerequisites;
}
}
}
public class ProvidesCustomPrerequisiteInfo
{
public readonly string Prerequisite;
public object Create(ActorInitializer init) { return new ProvidesCustomPrerequisite(this);}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2467" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2468" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2469" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2470" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2471" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2472" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2473" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2474" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2475" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2476" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2477" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2478" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2479" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2480" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2481" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2482" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2483" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2484" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2485" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs" startline="97" endline="103">
<![CDATA[
public object Create(ActorInitializer init) { return new ConquestObjectivesPanel(this); }
}
public class ConquestObjectivesPanel
{
ConquestObjectivesPanelInfo info;
public ConquestObjectivesPanel(ConquestObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2486" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ContainsCrate.cs" startline="21" endline="27">
<![CDATA[
{
self.World.AddFrameEndTask(w => w.CreateActor("crate", new TypeDictionary
{
new LocationInit(self.Location),
new OwnerInit(self.World.WorldActor.Owner),
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="26" endline="31">
<![CDATA[
{
self.World.AddFrameEndTask(w =>
{
self.InflictDamage(self, int.MaxValue, null);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2487" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ContainsCrate.cs" startline="21" endline="27">
<![CDATA[
{
self.World.AddFrameEndTask(w => w.CreateActor("crate", new TypeDictionary
{
new LocationInit(self.Location),
new OwnerInit(self.World.WorldActor.Owner),
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LeavesHusk.cs" startline="33" endline="70">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
self.World.AddFrameEndTask(w =>
{
var td = new TypeDictionary()
{
new LocationInit( self.Location ),
new CenterLocationInit(self.CenterLocation),
new OwnerInit( self.Owner ),
new SkipMakeAnimsInit()
};
var mobile = self.TraitOrDefault<Mobile>();
if (mobile != null)
{
if (!mobile.CanEnterCell(self.Location, self, false)) return;
td.Add(new HuskSpeedInit(mobile.MovementSpeedForCell(self, self.Location)));
}
var facing = self.TraitOrDefault<IFacing>();
if (facing != null)
td.Add(new FacingInit( facing.Facing ));
var turreted = self.TraitsImplementing<Turreted>().FirstOrDefault();
if (turreted != null)
td.Add( new TurretFacingInit(turreted.turretFacing) );
var huskActor = self.TraitsImplementing<IHuskModifier>()
.Select(ihm => ihm.HuskActor(self))
.FirstOrDefault(a => a != null);
w.CreateActor(huskActor ?? Info.HuskActor, td);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2488" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2489" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2490" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2491" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2492" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2493" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2494" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2495" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2496" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2497" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2498" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2499" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2500" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2501" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2502" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2503" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2504" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2505" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2506" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="20" endline="26">
<![CDATA[
[Desc("Chance of getting this crate, assuming the collector is compatible.")]
public int SelectionShares = 10;
[Desc("An animation defined in sequence yaml(s) to draw.")]
public string Effect = null;
[Desc("Audio clip to play when the crate is collected.")]
public string Notification = null;
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2507" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2508" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2509" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2510" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2511" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2512" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2513" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2514" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2515" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateAction.cs" startline="37" endline="41">
<![CDATA[
public CrateAction(Actor self, CrateActionInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2516" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2517" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="23" endline="37">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
public readonly float WaterChance = .2f;
[ActorReference]
public readonly string CrateActor = "crate";
[ActorReference]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\SmudgeLayer.cs" startline="24" endline="28">
<![CDATA[
public readonly string Type = "Scorch";
public readonly string[] Types = {"sc1", "sc2", "sc3", "sc4", "sc5", "sc6"};
public readonly int[] Depths = {1,1,1,1,1,1};
public readonly int SmokePercentage = 25;
public readonly string SmokeType = "smoke_m";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2518" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateDrop.cs" startline="50" endline="67">
<![CDATA[
public void Tick(Actor self)
{
if (!self.World.LobbyInfo.GlobalSettings.Crates) return;
if (--ticks <= 0)
{
ticks = Info.SpawnInterval * 25;		// TODO
crates.RemoveAll(x => !x.IsInWorld);	// BUG
var toSpawn = Math.Max(0, Info.Minimum - crates.Count)
+ (crates.Count < Info.Maximum ? 1
for (var n = 0; n < toSpawn; n++)
SpawnCrate(self);
for (var n = 0; n < toSpawn; n++)
SpawnCrate(self);
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="42" endline="58">
<![CDATA[
{
if (!self.World.LobbyInfo.GlobalSettings.Crates) return;
if (--ticks <= 0)
{
var info = self.Info.Traits.Get<CrateSpawnerInfo>();
ticks = info.SpawnInterval * 25;		// TODO
crates.RemoveAll(x => !x.IsInWorld);
var toSpawn = Math.Max(0, info.Minimum - crates.Count)
+ (crates.Count < info.Maximum ? 1
for (var n = 0; n < toSpawn; n++)
SpawnCrate(self, info);
for (var n = 0; n < toSpawn; n++)
SpawnCrate(self, info);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2519" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\CrateSpawner.cs" startline="22" endline="32">
<![CDATA[
[Desc("Minimum number of crates")]
public readonly int Minimum = 1;
[Desc("Maximum number of crates")]
public readonly int Maximum = 255;
[Desc("Which terrain types can we drop on?")]
public readonly string[] ValidGround = {"Clear", "Rough", "Road", "Ore", "Beach"};
[Desc("Which terrain types count as water?")]
public readonly string[] ValidWater = {"Water"};
[Desc("Average time (seconds) between crate spawn")]
public readonly int SpawnInterval = 180;
[Desc("Chance of generating a water crate instead of a land crate")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\SmudgeLayer.cs" startline="24" endline="28">
<![CDATA[
public readonly string Type = "Scorch";
public readonly string[] Types = {"sc1", "sc2", "sc3", "sc4", "sc5", "sc6"};
public readonly int[] Depths = {1,1,1,1,1,1};
public readonly int SmokePercentage = 25;
public readonly string SmokeType = "smoke_m";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2520" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\ExplodeCrateAction.cs" startline="18" endline="26">
<![CDATA[
public string Weapon = null;
public override object Create(ActorInitializer init) { return new ExplodeCrateAction(init.self, this); }
}
class ExplodeCrateAction
{
public ExplodeCrateAction(Actor self, ExplodeCrateActionInfo info)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\RevealMapCrateAction.cs" startline="19" endline="25">
<![CDATA[
public override object Create(ActorInitializer init) { return new RevealMapCrateAction(init.self, this); }
}
class RevealMapCrateAction
{
public RevealMapCrateAction(Actor self, RevealMapCrateActionInfo info)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2521" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\ExplodeCrateAction.cs" startline="18" endline="26">
<![CDATA[
public string Weapon = null;
public override object Create(ActorInitializer init) { return new ExplodeCrateAction(init.self, this); }
}
class ExplodeCrateAction
{
public ExplodeCrateAction(Actor self, ExplodeCrateActionInfo info)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableSubmarine.cs" startline="19" endline="26">
<![CDATA[
public override object Create( ActorInitializer init ) { return new TargetableSubmarine(init.self, this); }
}
public class TargetableSubmarine
{
public TargetableSubmarine(Actor self, TargetableSubmarineInfo info)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2522" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\GiveCashCrateAction.cs" startline="28" endline="41">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w =>
{
var amount = (info as GiveCashCrateActionInfo).Amount;
collector.Owner.PlayerActor.Trait<PlayerResources>().GiveCash(amount);
if ((info as GiveCashCrateActionInfo).UseCashTick)
w.Add(new CashTick(amount, 20, 1, collector.CenterLocation, collector.Owner.Color.RGB));
});
base.Activate(collector);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\LevelUpCrateAction.cs" startline="30" endline="41">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w =>
{
var gainsExperience = collector.TraitOrDefault<GainsExperience>();
if (gainsExperience != null)
gainsExperience.GiveLevels((info as LevelUpCrateActionInfo).Levels);
});
base.Activate(collector);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2523" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\GiveCashCrateAction.cs" startline="28" endline="41">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w =>
{
var amount = (info as GiveCashCrateActionInfo).Amount;
collector.Owner.PlayerActor.Trait<PlayerResources>().GiveCash(amount);
if ((info as GiveCashCrateActionInfo).UseCashTick)
w.Add(new CashTick(amount, 20, 1, collector.CenterLocation, collector.Owner.Color.RGB));
});
base.Activate(collector);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2524" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\GiveUnitCrateAction.cs" startline="48" endline="53">
<![CDATA[
public override int GetSelectionShares(Actor collector)
{
if (!CanGiveTo(collector)) return 0;
return base.GetSelectionShares(collector);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\HideMapCrateAction.cs" startline="24" endline="32">
<![CDATA[
public override int GetSelectionShares (Actor collector)
{
if (collector.Owner.HasFogVisibility())
return 0;
return base.GetSelectionShares (collector);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2525" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\LevelUpCrateAction.cs" startline="30" endline="41">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w =>
{
var gainsExperience = collector.TraitOrDefault<GainsExperience>();
if (gainsExperience != null)
gainsExperience.GiveLevels((info as LevelUpCrateActionInfo).Levels);
});
base.Activate(collector);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2526" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\RevealMapCrateAction.cs" startline="19" endline="25">
<![CDATA[
public override object Create(ActorInitializer init) { return new RevealMapCrateAction(init.self, this); }
}
class RevealMapCrateAction
{
public RevealMapCrateAction(Actor self, RevealMapCrateActionInfo info)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableSubmarine.cs" startline="19" endline="26">
<![CDATA[
public override object Create( ActorInitializer init ) { return new TargetableSubmarine(init.self, this); }
}
public class TargetableSubmarine
{
public TargetableSubmarine(Actor self, TargetableSubmarineInfo info)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2527" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\InfiltrateForSupportPower.cs" startline="31" endline="38">
<![CDATA[
public void OnInfiltrate(Actor self, Actor infiltrator)
{
infiltrator.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit(infiltrator.Owner)
}));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2528" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LeavesHusk.cs" startline="33" endline="70">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
self.World.AddFrameEndTask(w =>
{
var td = new TypeDictionary()
{
new LocationInit( self.Location ),
new CenterLocationInit(self.CenterLocation),
new OwnerInit( self.Owner ),
new SkipMakeAnimsInit()
};
var mobile = self.TraitOrDefault<Mobile>();
if (mobile != null)
{
if (!mobile.CanEnterCell(self.Location, self, false)) return;
td.Add(new HuskSpeedInit(mobile.MovementSpeedForCell(self, self.Location)));
}
var facing = self.TraitOrDefault<IFacing>();
if (facing != null)
td.Add(new FacingInit( facing.Facing ));
var turreted = self.TraitsImplementing<Turreted>().FirstOrDefault();
if (turreted != null)
td.Add( new TurretFacingInit(turreted.turretFacing) );
var huskActor = self.TraitsImplementing<IHuskModifier>()
.Select(ihm => ihm.HuskActor(self))
.FirstOrDefault(a => a != null);
w.CreateActor(huskActor ?? Info.HuskActor, td);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2529" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="82" endline="102">
<![CDATA[
void ChangeOwnership(Actor self, Actor captor)
{
self.World.AddFrameEndTask(w =>
{
if (self.Destroyed || captor.Destroyed) return;
var previousOwner = self.Owner;
w.Remove(self);
self.Owner = captor.Owner;
w.Add(self);
if (self.Owner == self.World.LocalPlayer)
w.Add(new FlashTarget(self));
foreach (var t in self.TraitsImplementing<INotifyCapture>())
t.OnCapture(self, captor, previousOwner, self.Owner);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2530" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Crates\SupportPowerCrateAction.cs" startline="29" endline="38">
<![CDATA[
public override void Activate(Actor collector)
{
collector.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit( collector.Owner )
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2531" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2532" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2533" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2534" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2535" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2536" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2537" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2538" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\DemoTruck.cs" startline="43" endline="48">
<![CDATA[
{
if (order.OrderID == "DemoAttack" || order.OrderID == "DemoDeploy")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2539" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="24" endline="40">
<![CDATA[
public readonly int Speed = 1;
public readonly string Trail = null;
[Desc("Pixels at maximum range")]
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly int RangeLimit = 0;
public readonly int Arm = 0;
public readonly bool Shadow = false;
public readonly bool Proximity = false;
public readonly float Angle = 0;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="25" endline="44">
<![CDATA[
public readonly int Speed = 1;
public readonly int Arm = 0;
[Desc("Check for whether an actor with Wall
public readonly bool High = false;
public readonly bool Shadow = true;
public readonly bool Proximity = false;
public readonly string Trail = null;
public readonly float Inaccuracy = 0;
public readonly string Image = null;
[Desc("Rate of Turning")]
public readonly int ROT = 5;
[Desc("Explode when following the target longer than this.")]
public readonly int RangeLimit = 0;
public readonly bool TurboBoost = false;
public readonly int TrailInterval = 2;
public readonly int ContrailLength = 0;
public readonly Color ContrailColor = Color.White;
public readonly bool ContrailUsePlayerColor = false;
public readonly int ContrailDelay = 1;
public readonly bool Jammable = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2540" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs" startline="50" endline="80">
<![CDATA[
int t = 0;
Animation anim;
const int BaseBulletSpeed = 100;		/* pixels / 40ms frame */
ContrailHistory Trail;
public Bullet(BulletInfo info, ProjectileArgs args)
{
Info = info;
Args = args;
if (info.Inaccuracy > 0)
{
var factor = ((Args.dest - Args.src).ToCVec().Length) / args.weapon.Range;
Args.dest += (PVecInt) (info.Inaccuracy * factor * args.firedBy.World.SharedRandom.Gauss2D(2)).ToInt2();
Log.Write("debug", "Bullet with Inaccuracy; factor
}
if (Info.Image != null)
{
anim = new Animation(Info.Image, GetEffectiveFacing);
anim.PlayRepeating("idle");
}
if (Info.ContrailLength > 0)
{
Trail = new ContrailHistory(Info.ContrailLength,
Info.ContrailUsePlayerColor ? ContrailHistory.ChooseColor(args.firedBy)
Info.ContrailDelay);
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Missile.cs" startline="57" endline="88">
<![CDATA[
readonly Animation anim;
int Facing;
int t;
int Altitude;
ContrailHistory Trail;
public Missile(MissileInfo info, ProjectileArgs args)
{
Info = info;
Args = args;
SubPxPosition = Args.src.ToPSubPos();
Altitude = Args.srcAltitude;
Facing = Args.facing;
if (info.Inaccuracy > 0)
offset = (PVecInt)(info.Inaccuracy * args.firedBy.World.SharedRandom.Gauss2D(2)).ToInt2();
if (Info.Image != null)
{
anim = new Animation(Info.Image, () => Facing);
anim.PlayRepeating("idle");
}
if (Info.ContrailLength > 0)
{
Trail = new ContrailHistory(Info.ContrailLength,
Info.ContrailUsePlayerColor ? ContrailHistory.ChooseColor(args.firedBy)
Info.ContrailDelay);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2541" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2542" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2543" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2544" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2545" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2546" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2547" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2548" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2549" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2550" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2551" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2552" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="21" endline="26">
<![CDATA[
[Desc("Position relative to body")]
public readonly WVec Offset = WVec.Zero;
public readonly int TrailLength = 25;
public readonly Color Color = Color.White;
public readonly bool UsePlayerColor = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2553" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs" startline="57" endline="76">
<![CDATA[
List<WPos> positions = new List<WPos>();
readonly int TrailLength;
readonly Color Color;
readonly int StartSkip;
public static Color ChooseColor(Actor self)
{
var ownerColor = Color.FromArgb(255, self.Owner.Color.RGB);
return Exts.ColorLerp(0.5f, ownerColor, Color.White);
}
public ContrailHistory(int trailLength, Color color)
public ContrailHistory(int trailLength, Color color, int startSkip)
{
this.TrailLength = trailLength;
this.Color = color;
this.StartSkip = startSkip;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Drag.cs" startline="21" endline="28">
<![CDATA[
int ticks = 0;
public Drag(PPos start, PPos end, int length)
{
startLocation = start;
endLocation = end;
this.length = length;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2554" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Corpse.cs" startline="24" endline="30">
<![CDATA[
public Corpse(World world, float2 pos, string image, string sequence, string paletteName)
{
this.pos = pos;
this.paletteName = paletteName;
anim = new Animation(image);
anim.PlayThen(sequence, () => world.AddFrameEndTask(w => w.Remove(this)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Explosion.cs" startline="24" endline="31">
<![CDATA[
public Explosion(World world, PPos pixelPos, string style, bool isWater, int altitude)
{
this.pos = pixelPos;
this.altitude = altitude;
anim = new Animation("explosion");
anim.PlayThen(style,
() => world.AddFrameEndTask(w => w.Remove(this)));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2555" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\GpsSatellite.cs" startline="29" endline="37">
<![CDATA[
public void Tick( World world )
{
anim.Tick();
offset.Y -= heightPerTick;
if (offset.Y < 0)
world.AddFrameEndTask(w => w.Remove(this));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs" startline="44" endline="64">
<![CDATA[
public void Tick(World world)
{
paraAnim.Tick();
altitude -= fallRate;
if (altitude <= 0)
world.AddFrameEndTask(w =>
{
w.Remove(cargo);
w.Remove(this);
var loc = location.ToCPos();
cargo.CancelActivity();
cargo.Trait<ITeleportable>().SetPosition(cargo, loc);
w.Add(cargo);
foreach( var npl in cargo.TraitsImplementing<INotifyParachuteLanded>() )
npl.OnLanded();
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2556" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\InvulnEffect.cs" startline="23" endline="27">
<![CDATA[
public InvulnEffect(Actor a)
{
this.a = a;
this.b = a.Trait<IronCurtainable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2557" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\InvulnEffect.cs" startline="23" endline="27">
<![CDATA[
public InvulnEffect(Actor a)
{
this.a = a;
this.b = a.Trait<IronCurtainable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="33" endline="37">
<![CDATA[
public Repairable(Actor self)
{
this.self = self;
Health = self.Trait<Health>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2558" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\InvulnEffect.cs" startline="23" endline="27">
<![CDATA[
public InvulnEffect(Actor a)
{
this.a = a;
this.b = a.Trait<IronCurtainable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\MoneyBinWidget.cs" startline="23" endline="28">
<![CDATA[
[ObjectCreator.UseCtor]
public MoneyBinWidget(World world)
{
this.world = world;
playerResources = world.LocalPlayer.PlayerActor.Trait<PlayerResources>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2559" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\InvulnEffect.cs" startline="23" endline="27">
<![CDATA[
public InvulnEffect(Actor a)
{
this.a = a;
this.b = a.Trait<IronCurtainable>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BridgeHut.cs" startline="23" endline="32">
<![CDATA[
}
class BridgeHut
{
public Bridge bridge;
public BridgeHut(ActorInitializer init)
{
bridge = init.Get<ParentActorInit>().value.Trait<Bridge>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2560" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2561" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2562" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2563" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2564" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2565" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2566" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2567" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2568" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2569" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2570" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2571" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2572" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2573" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2574" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs" startline="24" endline="28">
<![CDATA[
public readonly int BeamRadius = 1;
public readonly int BeamDuration = 10;
public readonly bool UsePlayerColor = false;
public readonly Color Color = Color.Red;
public readonly string Explosion = "laserfire";
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2575" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs" startline="44" endline="64">
<![CDATA[
public void Tick(World world)
{
paraAnim.Tick();
altitude -= fallRate;
if (altitude <= 0)
world.AddFrameEndTask(w =>
{
w.Remove(cargo);
w.Remove(this);
var loc = location.ToCPos();
cargo.CancelActivity();
cargo.Trait<ITeleportable>().SetPosition(cargo, loc);
w.Add(cargo);
foreach( var npl in cargo.TraitsImplementing<INotifyParachuteLanded>() )
npl.OnLanded();
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\SatelliteLaunch.cs" startline="32" endline="41">
<![CDATA[
public void Tick( World world )
{
doors.Tick();
if (++frame == 19)
{
world.AddFrameEndTask(w => w.Add(new GpsSatellite(pos)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2576" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\PowerdownIndicator.cs" startline="22" endline="27">
<![CDATA[
Animation anim = new Animation("poweroff");
public PowerdownIndicator(Actor a)
{
this.a = a; anim.PlayRepeating("offline");
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2577" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\PowerdownIndicator.cs" startline="28" endline="35">
<![CDATA[
public void Tick(World world)
{
if (!a.IsInWorld || a.IsDead() || !a.Trait<CanPowerDown>().Disabled)
world.AddFrameEndTask(w => w.Remove(this));
anim.Tick();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Effects\RepairIndicator.cs" startline="35" endline="43">
<![CDATA[
public void Tick(World world)
{
if (!building.IsInWorld || building.IsDead() ||
rb.Repairer == null || rb.Repairer != player)
world.AddFrameEndTask(w => w.Remove(this));
anim.Tick();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2578" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2579" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2580" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2581" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2582" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2583" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2584" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2585" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2586" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2587" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="27" endline="35">
<![CDATA[
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "EngineerRepair")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2588" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="42" endline="53">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "EngineerRepair" &&
order.TargetActor.GetDamageState() > DamageState.Undamaged)
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new RepairBuilding(order.TargetActor)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="55" endline="64">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "DeliverSupplies")
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new DonateSupplies(order.TargetActor, Info.Payload)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2589" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\EngineerRepair.cs" startline="42" endline="53">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "EngineerRepair" &&
order.TargetActor.GetDamageState() > DamageState.Undamaged)
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new RepairBuilding(order.TargetActor)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="59" endline="72">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Infiltrate")
{
if (!CanInfiltrate(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Infiltrate(order.TargetActor)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2590" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2591" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2592" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2593" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2594" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2595" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2596" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2597" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2598" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2599" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2600" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2601" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2602" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2603" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2604" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2605" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2606" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Explodes.cs" startline="18" endline="24">
<![CDATA[
[WeaponReference]
public readonly string Weapon = "UnitExplode";
[WeaponReference]
public readonly string EmptyWeapon = "UnitExplode";
public readonly int Chance = 100;
public readonly int[] InfDeath = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2607" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2608" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2609" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2610" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2611" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2612" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2613" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2614" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2615" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2616" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2617" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2618" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2619" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2620" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2621" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
[Desc("Name of actor (use HARV if this trait is for refineries)")]
public readonly string Actor = null;
[Desc("What the unit should start doing. Warning
public readonly string InitialActivity = null;
[Desc("Offset relative to structure-center in 2D (e.g. 1, 2)")]
public readonly int2 SpawnOffset = int2.Zero;
[Desc("Which direction the unit should face.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2622" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2623" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2624" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="54" endline="60">
<![CDATA[
}
public class FreeActorInit
{
[FieldFromYamlKey]
public readonly bool value = true;
public FreeActorInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2625" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2626" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2627" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2628" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2629" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2630" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2631" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2632" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2633" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2634" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2635" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2636" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2637" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2638" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2639" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2640" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2641" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2642" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\FreeActor.cs" startline="63" endline="68">
<![CDATA[
}
public class ParentActorInit
{
public readonly Actor value;
public ParentActorInit(Actor parent) { value = parent; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2643" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2644" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GainsExperience.cs" startline="83" endline="129">
<![CDATA[
}
}
public float GetDamageModifier(Actor attacker, WarheadInfo warhead)
{
return Level > 0 ? 1 / Info.ArmorModifier[Level - 1]
}
public float GetFirepowerModifier()
{
return Level > 0 ? Info.FirepowerModifier[Level - 1]
}
public decimal GetSpeedModifier()
{
return Level > 0 ? Info.SpeedModifier[Level - 1]
}
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if ((self.Owner == self.World.LocalPlayer || self.World.LocalPlayer == null) && Level > 0)
return InnerModifyRender(self, wr, r);
else
return r;
}
IEnumerable<Renderable> InnerModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
foreach (var rs in r)
yield return rs;
RankAnim.Tick();	// HACK
if (self.World.FogObscures(self))
yield break;
var bounds = self.Bounds.Value;
yield return new Renderable(RankAnim.Image, new float2(bounds.Right - 6, bounds.Bottom - 8),
wr.Palette("effect"), self.CenterLocation.Y);
}
}
class ExperienceInit
{
[FieldFromYamlKey] public readonly int value = 0;
public ExperienceInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2645" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2646" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2647" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2648" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2649" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2650" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2651" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2652" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2653" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2654" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2655" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2656" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2657" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2658" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2659" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\GivesBounty.cs" startline="22" endline="26">
<![CDATA[
[Desc("Calculated by Cost or CustomSellValue so they have to be set to avoid crashes.")]
public readonly int Percentage = 10;
[Desc("Higher ranked units give higher bounties.")]
public readonly int LevelMod = 125;
[Desc("Destroying creeps and enemies is rewarded.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2660" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2661" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2662" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2663" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2664" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2665" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2666" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2667" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2668" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2669" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Harvester.cs" startline="23" endline="35">
<![CDATA[
public readonly int Capacity = 28;
public readonly int UnloadTicksPerBale = 4;
public readonly int PipCount = 7;
public readonly string[] Resources = { };
public readonly decimal FullyLoadedSpeed = .85m;
public readonly int SearchFromProcRadius = 24;
public readonly int SearchFromOrderRadius = 12;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2670" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2671" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2672" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2673" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2674" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2675" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2676" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2677" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2678" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2679" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2680" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2681" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2682" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2683" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2684" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2685" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2686" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\HarvesterHuskModifier.cs" startline="22" endline="32">
<![CDATA[
public object Create( ActorInitializer init ) { return new HarvesterHuskModifier(this); }
}
public class HarvesterHuskModifier
{
HarvesterHuskModifierInfo Info;
public HarvesterHuskModifier(HarvesterHuskModifierInfo info)
{
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2687" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Husk.cs" startline="51" endline="90">
<![CDATA[
public IEnumerable<Pair<CPos, SubCell>> OccupiedCells() { yield return Pair.New(TopLeft, SubCell.FullCell); }
class DragHusk
{
Husk husk;
PPos endLocation;
PPos startLocation;
int length;
public DragHusk(PPos start, PPos end, int length, Husk husk)
{
startLocation = start;
endLocation = end;
this.length = length;
this.husk = husk;
}
int ticks = 0;
public override Activity Tick( Actor self )
{
if (ticks >= length || length <= 1)
{
husk.PxPosition = endLocation;
return NextActivity;
}
husk.PxPosition = PPos.Lerp(startLocation, endLocation, ticks++, length - 1);
return this;
}
public override IEnumerable<Target> GetTargets( Actor self ) { yield break; }
public override void Cancel( Actor self ) { }
}
}
public class HuskSpeedInit
{
[FieldFromYamlKey] public readonly int value = 0;
public HuskSpeedInit() { }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="513" endline="520">
<![CDATA[
}
class Allies04TrivialBuildingInfo
class Allies04TrivialBuilding { }
class Allies04MaintainBuildingInfo
{
public readonly string Player = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2688" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\InfiltrateForSupportPower.cs" startline="31" endline="38">
<![CDATA[
public void OnInfiltrate(Actor self, Actor infiltrator)
{
infiltrator.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit(infiltrator.Owner)
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LeavesHusk.cs" startline="33" endline="70">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
self.World.AddFrameEndTask(w =>
{
var td = new TypeDictionary()
{
new LocationInit( self.Location ),
new CenterLocationInit(self.CenterLocation),
new OwnerInit( self.Owner ),
new SkipMakeAnimsInit()
};
var mobile = self.TraitOrDefault<Mobile>();
if (mobile != null)
{
if (!mobile.CanEnterCell(self.Location, self, false)) return;
td.Add(new HuskSpeedInit(mobile.MovementSpeedForCell(self, self.Location)));
}
var facing = self.TraitOrDefault<IFacing>();
if (facing != null)
td.Add(new FacingInit( facing.Facing ));
var turreted = self.TraitsImplementing<Turreted>().FirstOrDefault();
if (turreted != null)
td.Add( new TurretFacingInit(turreted.turretFacing) );
var huskActor = self.TraitsImplementing<IHuskModifier>()
.Select(ihm => ihm.HuskActor(self))
.FirstOrDefault(a => a != null);
w.CreateActor(huskActor ?? Info.HuskActor, td);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2689" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\InfiltrateForSupportPower.cs" startline="31" endline="38">
<![CDATA[
public void OnInfiltrate(Actor self, Actor infiltrator)
{
infiltrator.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit(infiltrator.Owner)
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="82" endline="102">
<![CDATA[
void ChangeOwnership(Actor self, Actor captor)
{
self.World.AddFrameEndTask(w =>
{
if (self.Destroyed || captor.Destroyed) return;
var previousOwner = self.Owner;
w.Remove(self);
self.Owner = captor.Owner;
w.Add(self);
if (self.Owner == self.World.LocalPlayer)
w.Add(new FlashTarget(self));
foreach (var t in self.TraitsImplementing<INotifyCapture>())
t.OnCapture(self, captor, previousOwner, self.Owner);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2690" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\InfiltrateForSupportPower.cs" startline="31" endline="38">
<![CDATA[
public void OnInfiltrate(Actor self, Actor infiltrator)
{
infiltrator.World.AddFrameEndTask(w => w.CreateActor(Info.Proxy, new TypeDictionary
{
new OwnerInit(infiltrator.Owner)
}));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2691" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LeavesHusk.cs" startline="33" endline="70">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
self.World.AddFrameEndTask(w =>
{
var td = new TypeDictionary()
{
new LocationInit( self.Location ),
new CenterLocationInit(self.CenterLocation),
new OwnerInit( self.Owner ),
new SkipMakeAnimsInit()
};
var mobile = self.TraitOrDefault<Mobile>();
if (mobile != null)
{
if (!mobile.CanEnterCell(self.Location, self, false)) return;
td.Add(new HuskSpeedInit(mobile.MovementSpeedForCell(self, self.Location)));
}
var facing = self.TraitOrDefault<IFacing>();
if (facing != null)
td.Add(new FacingInit( facing.Facing ));
var turreted = self.TraitsImplementing<Turreted>().FirstOrDefault();
if (turreted != null)
td.Add( new TurretFacingInit(turreted.turretFacing) );
var huskActor = self.TraitsImplementing<IHuskModifier>()
.Select(ihm => ihm.HuskActor(self))
.FirstOrDefault(a => a != null);
w.CreateActor(huskActor ?? Info.HuskActor, td);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="82" endline="102">
<![CDATA[
void ChangeOwnership(Actor self, Actor captor)
{
self.World.AddFrameEndTask(w =>
{
if (self.Destroyed || captor.Destroyed) return;
var previousOwner = self.Owner;
w.Remove(self);
self.Owner = captor.Owner;
w.Add(self);
if (self.Owner == self.World.LocalPlayer)
w.Add(new FlashTarget(self));
foreach (var t in self.TraitsImplementing<INotifyCapture>())
t.OnCapture(self, captor, previousOwner, self.Owner);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2692" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LeavesHusk.cs" startline="33" endline="70">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
self.World.AddFrameEndTask(w =>
{
var td = new TypeDictionary()
{
new LocationInit( self.Location ),
new CenterLocationInit(self.CenterLocation),
new OwnerInit( self.Owner ),
new SkipMakeAnimsInit()
};
var mobile = self.TraitOrDefault<Mobile>();
if (mobile != null)
{
if (!mobile.CanEnterCell(self.Location, self, false)) return;
td.Add(new HuskSpeedInit(mobile.MovementSpeedForCell(self, self.Location)));
}
var facing = self.TraitOrDefault<IFacing>();
if (facing != null)
td.Add(new FacingInit( facing.Facing ));
var turreted = self.TraitsImplementing<Turreted>().FirstOrDefault();
if (turreted != null)
td.Add( new TurretFacingInit(turreted.turretFacing) );
var huskActor = self.TraitsImplementing<IHuskModifier>()
.Select(ihm => ihm.HuskActor(self))
.FirstOrDefault(a => a != null);
w.CreateActor(huskActor ?? Info.HuskActor, td);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2693" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2694" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2695" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2696" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2697" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2698" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2699" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2700" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2701" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2702" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2703" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2704" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2705" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2706" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2707" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2708" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2709" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="28" endline="39">
<![CDATA[
float t = 0;
public void Tick(Actor self)
{
t += .5f;
}
readonly LightPaletteRotatorInfo info;
public LightPaletteRotator(LightPaletteRotatorInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2710" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs" startline="40" endline="54">
<![CDATA[
public void AdjustPalette(Dictionary<string,Palette> palettes)
{
foreach (var pal in palettes)
{
if (info.ExcludePalettes.Contains(pal.Key))
continue;
var rotate = (int)t % 18;
if (rotate > 9)
rotate = 18 - rotate;
pal.Value.SetColor(0x67, pal.Value.GetColor(230+rotate));
}
foreach (var pal in palettes)
{
if (info.ExcludePalettes.Contains(pal.Key))
continue;
var rotate = (int)t % 18;
if (rotate > 9)
rotate = 18 - rotate;
pal.Value.SetColor(0x67, pal.Value.GetColor(230+rotate));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="540" endline="565">
<![CDATA[
public readonly string ToActor = null;
}
class Allies04TransformOnLabInfiltrate { }
class Allies04HazyPaletteEffectInfo
class Allies04HazyPaletteEffect
{
static readonly string[] ExcludePalettes = { "cursor", "chrome", "colorpicker", "fog", "shroud" };
public void AdjustPalette(Dictionary<string, Palette> palettes)
{
foreach (var pal in palettes)
{
if (ExcludePalettes.Contains(pal.Key))
continue;
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
}
foreach (var pal in palettes)
{
if (ExcludePalettes.Contains(pal.Key))
continue;
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2711" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2712" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2713" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2714" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2715" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2716" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2717" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2718" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="33" endline="37">
<![CDATA[
public Repairable(Actor self)
{
this.self = self;
Health = self.Trait<Health>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2719" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2720" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2721" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2722" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2723" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2724" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2725" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2726" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2727" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LimitedAmmo.cs" startline="33" endline="37">
<![CDATA[
public LimitedAmmo(LimitedAmmoInfo info)
{
ammo = info.Ammo;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BridgeHut.cs" startline="23" endline="32">
<![CDATA[
}
class BridgeHut
{
public Bridge bridge;
public BridgeHut(ActorInitializer init)
{
bridge = init.Get<ParentActorInit>().value.Trait<Bridge>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2728" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2729" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2730" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2731" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2732" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2733" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2734" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2735" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2736" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2737" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2738" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2739" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="32" endline="40">
<![CDATA[
List<int2> viewportTargets = new List<int2>();
int2 viewportTarget;
int viewportTargetNumber;
int2 viewportOrigin;
float mul;
float div = 400;
int waitTicks = 0;
int nextCivilianMove = 1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2740" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="106" endline="122">
<![CDATA[
&& a.HasTrait<AttackBase>() && a.HasTrait<Mobile>()).Except(actors.Values))
MissionUtils.AttackNearestLandActor(true, actor, actor.Owner == soviets ? allies
MissionUtils.StartProduction(world, allies, "Infantry", InfantryProductionUnits.Random(world.SharedRandom));
MissionUtils.StartProduction(world, allies, "Vehicle", VehicleProductionUnits.Random(world.SharedRandom));
}
if (world.FrameNumber % 20 == 0 && coastUnitsLeft-- > 0)
{
var u = world.CreateActor(CoastUnits.Random(world.SharedRandom), soviets, coastWP1.Location, null);
u.QueueActivity(new Move.Move(coastWP2.Location, 0));
u.QueueActivity(new AttackMove.AttackMoveActivity(u, new Move.Move(attackLocation.Location, 0)));
}
if (world.FrameNumber == nextCivilianMove)
{
var civilians = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && a.Owner == neutral && a.HasTrait<Mobile>());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="185" endline="199">
<![CDATA[
&& (a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>()))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The remaining Allied forces in the area have been wiped out.");
}
else if (SovietBaseDestroyed() && objectives[InfiltrateID].Status == ObjectiveStatus.Completed)
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
MissionAccomplished("The Soviet research laboratory has been secured successfully.");
}
if (world.FrameNumber == nextCivilianMove)
{
var civilians = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && a.Owner == creeps && a.HasTrait<Mobile>());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2741" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2742" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2743" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2744" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2745" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2746" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2747" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2748" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2749" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2750" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2751" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="189" endline="241">
<![CDATA[
{
var u = world.CreateActor(tank.x, allies, mediumTankChronoSpawn.Location, Util.GetFacing(heavyTankWP.Location - mediumTankChronoSpawn.Location, 0));
chronoInfo.Add(Pair.New(u, new CPos(mediumTankChronoSpawn.Location.X + tank.i, mediumTankChronoSpawn.Location.Y)));
}
RASpecialPowers.Chronoshift(world, chronoInfo, chronosphere, -1, false);
foreach (var tank in chronoInfo)
tank.First.QueueActivity(new AttackMove.AttackMoveActivity(tank.First, new Move.Move(heavyTankSpawn.Location, 0)));
}
void FlyMigs(CPos[] waypoints)
{
var m = world.CreateActor("mig", new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(waypoints[0]),
new FacingInit(Util.GetFacing(waypoints[1] - waypoints[0], 0))
});
foreach (var waypoint in waypoints)
m.QueueActivity(Fly.ToCell(waypoint));
m.QueueActivity(new RemoveSelf());
}
void SendChinookReinforcements(CPos entry, Actor lz)
{
var chinook = world.CreateActor("tran", allies, entry, Util.GetFacing(lz.Location - entry, 0));
var cargo = chinook.Trait<Cargo>();
while (cargo.HasSpace(1))
cargo.Load(chinook, world.CreateActor(false, ChinookCargo.Random(world.SharedRandom), allies, null, null));
var exit = lz.Info.Traits.WithInterface<ExitInfo>().FirstOrDefault();
var offset = exit != null ? exit.SpawnOffsetVector
chinook.QueueActivity(new HeliFly(lz.CenterLocation + offset)); // no reservation of hpad but it's not needed
chinook.QueueActivity(new Turn(0));
chinook.QueueActivity(new HeliLand(false, 0));
chinook.QueueActivity(new UnloadCargo(true));
chinook.QueueActivity(new Wait(150));
chinook.QueueActivity(new HeliFly(Util.CenterOfCell(entry)));
chinook.QueueActivity(new RemoveSelf());
}
void InitializeAlliedFactories()
{
alliedBarracks.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedBarracks, true);
alliedWarFactory.Trait<PrimaryBuilding>().SetPrimaryProducer(alliedWarFactory, true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2752" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="262" endline="275">
<![CDATA[
offmapAttackerSpawn1 = actors["OffmapAttackerSpawn1"];
offmapAttackerSpawn2 = actors["OffmapAttackerSpawn2"];
offmapAttackerSpawn3 = actors["OffmapAttackerSpawn3"];
offmapAttackerSpawns = new[] { offmapAttackerSpawn1, offmapAttackerSpawn2, offmapAttackerSpawn3 };
heavyTankSpawn = actors["HeavyTankSpawn"];
heavyTankWP = actors["HeavyTankWP"];
mediumTankChronoSpawn = actors["MediumTankChronoSpawn"];
chronosphere = actors["Chronosphere"];
ironCurtain = actors["IronCurtain"];
mig1Waypoints = new[] { actors["Mig11"], actors["Mig12"], actors["Mig13"], actors["Mig14"] }.Select(a => a.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="423" endline="441">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
exit1TopLeft = actors["Exit1TopLeft"];
exit1BottomRight = actors["Exit1BottomRight"];
exit1ExitPoint = actors["Exit1ExitPoint"];
exit2TopLeft = actors["Exit2TopLeft"];
exit2BottomRight = actors["Exit2BottomRight"];
exit2ExitPoint = actors["Exit2ExitPoint"];
allies1EntryPoint = actors["Allies1EntryPoint"];
allies1MovePoint = actors["Allies1MovePoint"];
allies2EntryPoint = actors["Allies2EntryPoint"];
allies2MovePoint = actors["Allies2MovePoint"];
sovietEntryPoint1 = actors["SovietEntryPoint1"];
sovietEntryPoint2 = actors["SovietEntryPoint2"];
sovietEntryPoint3 = actors["SovietEntryPoint3"];
sovietEntryPoint4 = actors["SovietEntryPoint4"];
sovietEntryPoint5 = actors["SovietEntryPoint5"];
sovietEntryPoint6 = actors["SovietEntryPoint6"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5, sovietEntryPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2753" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="262" endline="275">
<![CDATA[
offmapAttackerSpawn1 = actors["OffmapAttackerSpawn1"];
offmapAttackerSpawn2 = actors["OffmapAttackerSpawn2"];
offmapAttackerSpawn3 = actors["OffmapAttackerSpawn3"];
offmapAttackerSpawns = new[] { offmapAttackerSpawn1, offmapAttackerSpawn2, offmapAttackerSpawn3 };
heavyTankSpawn = actors["HeavyTankSpawn"];
heavyTankWP = actors["HeavyTankWP"];
mediumTankChronoSpawn = actors["MediumTankChronoSpawn"];
chronosphere = actors["Chronosphere"];
ironCurtain = actors["IronCurtain"];
mig1Waypoints = new[] { actors["Mig11"], actors["Mig12"], actors["Mig13"], actors["Mig14"] }.Select(a => a.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="442" endline="448">
<![CDATA[
sovietRallyPoint1 = actors["SovietRallyPoint1"];
sovietRallyPoint2 = actors["SovietRallyPoint2"];
sovietRallyPoint3 = actors["SovietRallyPoint3"];
sovietRallyPoint4 = actors["SovietRallyPoint4"];
sovietRallyPoint5 = actors["SovietRallyPoint5"];
sovietRallyPoint6 = actors["SovietRallyPoint6"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5, sovietRallyPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2754" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="262" endline="275">
<![CDATA[
offmapAttackerSpawn1 = actors["OffmapAttackerSpawn1"];
offmapAttackerSpawn2 = actors["OffmapAttackerSpawn2"];
offmapAttackerSpawn3 = actors["OffmapAttackerSpawn3"];
offmapAttackerSpawns = new[] { offmapAttackerSpawn1, offmapAttackerSpawn2, offmapAttackerSpawn3 };
heavyTankSpawn = actors["HeavyTankSpawn"];
heavyTankWP = actors["HeavyTankWP"];
mediumTankChronoSpawn = actors["MediumTankChronoSpawn"];
chronosphere = actors["Chronosphere"];
ironCurtain = actors["IronCurtain"];
mig1Waypoints = new[] { actors["Mig11"], actors["Mig12"], actors["Mig13"], actors["Mig14"] }.Select(a => a.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="314" endline="320">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
sovietEntryPoint1 = actors["sovietEntryPoint1"];
sovietEntryPoint2 = actors["sovietEntryPoint2"];
sovietEntryPoint3 = actors["sovietEntryPoint3"];
sovietEntryPoint4 = actors["sovietEntryPoint4"];
sovietEntryPoint5 = actors["sovietEntryPoint5"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2755" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\DesertShellmapScript.cs" startline="262" endline="275">
<![CDATA[
offmapAttackerSpawn1 = actors["OffmapAttackerSpawn1"];
offmapAttackerSpawn2 = actors["OffmapAttackerSpawn2"];
offmapAttackerSpawn3 = actors["OffmapAttackerSpawn3"];
offmapAttackerSpawns = new[] { offmapAttackerSpawn1, offmapAttackerSpawn2, offmapAttackerSpawn3 };
heavyTankSpawn = actors["HeavyTankSpawn"];
heavyTankWP = actors["HeavyTankWP"];
mediumTankChronoSpawn = actors["MediumTankChronoSpawn"];
chronosphere = actors["Chronosphere"];
ironCurtain = actors["IronCurtain"];
mig1Waypoints = new[] { actors["Mig11"], actors["Mig12"], actors["Mig13"], actors["Mig14"] }.Select(a => a.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="321" endline="326">
<![CDATA[
sovietRallyPoint1 = actors["sovietRallyPoint1"];
sovietRallyPoint2 = actors["sovietRallyPoint2"];
sovietRallyPoint3 = actors["sovietRallyPoint3"];
sovietRallyPoint4 = actors["sovietRallyPoint4"];
sovietRallyPoint5 = actors["sovietRallyPoint5"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2756" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Minelayer.cs" startline="39" endline="54">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new BeginMinefieldOrderTargeter(); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order is BeginMinefieldOrderTargeter )
{
var start = target.CenterLocation.ToCPos();
self.World.OrderGenerator = new MinefieldOrderGenerator( self, start );
return new Order("BeginMinefield", self, false) { TargetLocation = start };
}
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Mobile.cs" startline="217" endline="229">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders { get { yield return new MoveOrderTargeter(Info); } }
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order is MoveOrderTargeter)
{
if (Info.OnRails) return null;
return new Order("Move", self, queued) { TargetLocation = target.CenterLocation.ToCPos() };
}
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2757" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="30" endline="83">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) }
};
const int FindEinsteinID = 0;
const int ExtractEinsteinID = 1;
const string FindEinstein = "Find Einstein. Tanya and Einstein must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
Player allies;
Player soviets;
Actor insertionLZ;
Actor extractionLZ;
Actor lab;
Actor insertionLZEntryPoint;
Actor extractionLZEntryPoint;
Actor chinookExitPoint;
Actor shipSpawnPoint;
Actor shipMovePoint;
Actor einstein;
Actor einsteinChinook;
Actor tanya;
Actor attackEntryPoint1;
Actor attackEntryPoint2;
World world;
static readonly string[] Taunts = { "laugh1.aud", "lefty1.aud", "cmon1.aud", "gotit1.aud" };
static readonly string[] Ships = { "ca", "ca", "ca", "ca" };
static readonly string[] Patrol = { "e1", "dog", "e1" };
static readonly string[] AttackWave = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e2", "dog" };
static readonly string[] LastAttackWaveAddition = { "3tnk", "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e2" };
int currentAttackWaveFrameNumber;
int currentAttackWave;
const int EinsteinChinookAttackWave = 5;
const int LabClearRange = 5;
const string EinsteinName = "einstein";
const string TanyaName = "e7";
const string SignalFlareName = "flare";
string difficulty;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="44" endline="110">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ FindOutpostID, new Objective(ObjectiveType.Primary, FindOutpost, ObjectiveStatus.InProgress) },
{ EvacuateDemitriID, new Objective(ObjectiveType.Primary, EvacuateDemitri, ObjectiveStatus.InProgress) },
{ InfiltrateRadarDomeID, new Objective(ObjectiveType.Primary, InfiltrateRadarDome, ObjectiveStatus.InProgress) },
};
const int FindOutpostID = 0;
const string FindOutpost = "Find our outpost and start repairs on it.";
const int EvacuateDemitriID = 1;
const string EvacuateDemitri = "Find and evacuate Dr. Demitri. He is missing -- likely hiding in the village to the far south.";
const int InfiltrateRadarDomeID = 2;
const string InfiltrateRadarDome = "Reprogram the Super Tanks by sending a spy into the Soviet radar dome.";
World world;
Player neutral;
Player greece;
Player ussr;
Player badGuy;
Player turkey;
Actor startEntryPoint;
Actor startMovePoint;
Actor startBridgeEndPoint;
Actor alliedBaseTopLeft;
Actor alliedBaseBottomRight;
Actor alliedBaseEntryPoint;
Actor alliedBaseMovePoint;
Actor demitriChurch;
Actor demitriChurchSpawnPoint;
Actor demitriTriggerAreaCenter;
Actor demitri;
Actor demitriLZ;
Actor demitriLZFlare;
Actor demitriChinook;
Actor provingGroundsCameraPoint;
Actor[] superTanks;
Actor hospital;
Actor hospitalCivilianSpawnPoint;
Actor hospitalSuperTankPoint;
Actor superTankDome;
bool hospitalEvacuated;
bool superTanksDestroyed;
int baseTransferredTick = -1;
int superTankDomeInfiltratedTick = -1;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, greece);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2758" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="30" endline="83">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) }
};
const int FindEinsteinID = 0;
const int ExtractEinsteinID = 1;
const string FindEinstein = "Find Einstein. Tanya and Einstein must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
Player allies;
Player soviets;
Actor insertionLZ;
Actor extractionLZ;
Actor lab;
Actor insertionLZEntryPoint;
Actor extractionLZEntryPoint;
Actor chinookExitPoint;
Actor shipSpawnPoint;
Actor shipMovePoint;
Actor einstein;
Actor einsteinChinook;
Actor tanya;
Actor attackEntryPoint1;
Actor attackEntryPoint2;
World world;
static readonly string[] Taunts = { "laugh1.aud", "lefty1.aud", "cmon1.aud", "gotit1.aud" };
static readonly string[] Ships = { "ca", "ca", "ca", "ca" };
static readonly string[] Patrol = { "e1", "dog", "e1" };
static readonly string[] AttackWave = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e2", "dog" };
static readonly string[] LastAttackWaveAddition = { "3tnk", "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e2" };
int currentAttackWaveFrameNumber;
int currentAttackWave;
const int EinsteinChinookAttackWave = 5;
const int LabClearRange = 5;
const string EinsteinName = "einstein";
const string TanyaName = "e7";
const string SignalFlareName = "flare";
string difficulty;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="31" endline="69">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.InProgress) }
};
const int DestroyID = 0;
const string Destroy = "A pitiful excuse for resistance has blockaded itself in this village."
+ " Stalin has decided to make an example of them. Kill them all and destroy their homes."
+ " You will have Yak aircraft to use in teaching these rebels a lesson.";
World world;
Player ussr;
Player france;
Actor startJeep;
Actor startJeepMovePoint;
Actor church;
bool startJeepParadropped;
bool churchParadropped;
Actor paradropPoint1;
Actor paradropEntryPoint1;
Actor paradropPoint2;
Actor paradropEntryPoint2;
Actor airfield1;
Actor airfield2;
Actor airfield3;
Actor[] airfields;
const string BadgerName = "badr";
static readonly string[] Reinforcements = { "e1", "e1", "e1", "e2", "e2" };
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, ussr);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2759" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="30" endline="83">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) }
};
const int FindEinsteinID = 0;
const int ExtractEinsteinID = 1;
const string FindEinstein = "Find Einstein. Tanya and Einstein must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
Player allies;
Player soviets;
Actor insertionLZ;
Actor extractionLZ;
Actor lab;
Actor insertionLZEntryPoint;
Actor extractionLZEntryPoint;
Actor chinookExitPoint;
Actor shipSpawnPoint;
Actor shipMovePoint;
Actor einstein;
Actor einsteinChinook;
Actor tanya;
Actor attackEntryPoint1;
Actor attackEntryPoint2;
World world;
static readonly string[] Taunts = { "laugh1.aud", "lefty1.aud", "cmon1.aud", "gotit1.aud" };
static readonly string[] Ships = { "ca", "ca", "ca", "ca" };
static readonly string[] Patrol = { "e1", "dog", "e1" };
static readonly string[] AttackWave = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e2", "dog" };
static readonly string[] LastAttackWaveAddition = { "3tnk", "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e2" };
int currentAttackWaveFrameNumber;
int currentAttackWave;
const int EinsteinChinookAttackWave = 5;
const int LabClearRange = 5;
const string EinsteinName = "einstein";
const string TanyaName = "e7";
const string SignalFlareName = "flare";
string difficulty;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="30" endline="104">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ maintainPresenceID, new Objective(ObjectiveType.Primary, maintainPresence, ObjectiveStatus.InProgress) },
{ destroySovietsID, new Objective(ObjectiveType.Primary, destroySoviets, ObjectiveStatus.Inactive) }
};
const int maintainPresenceID = 0;
const int destroySovietsID = 1;
const string maintainPresence = "Enforce your position and hold-out the onslaught until reinforcements arrive. We must not lose the base!";
const string destroySoviets = "Take control of french reinforcements and dismantle the nearby Soviet base.";
Player allies;
Player soviets;
Actor sovietEntryPoint1;
Actor sovietEntryPoint2;
Actor sovietEntryPoint3;
Actor sovietEntryPoint4;
Actor sovietEntryPoint5;
CPos[] sovietEntryPoints;
Actor sovietRallyPoint1;
Actor sovietRallyPoint2;
Actor sovietRallyPoint3;
Actor sovietRallyPoint4;
Actor sovietRallyPoint5;
CPos[] sovietRallyPoints;
Actor sovietinfantryentry1;
Actor sovietinfantryrally1;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor paraDrop1;
Actor paraDrop2;
Actor sovietEntryPoint7;
Actor alliesbase1;
Actor alliesbase2;
Actor alliesbase;
Actor sam1;
Actor sam2;
Actor barrack1;
World world;
CountdownTimer survivalTimer;
CountdownTimerWidget survivalTimerWidget;
int attackAtFrame;
int attackAtFrameIncrement;
int attackAtFrameInf;
int attackAtFrameIncrementInf;
const int paradropTicks = 750;
static readonly string[] badger1Passengers = { "e1", "e1", "e1", "e2", "e2" };
const int factoryClearRange = 10;
static readonly string[] squad1 = { "e1", "e1" };
static readonly string[] squad2 = { "e2", "e2" };
static readonly string[] sovietVehicles = { "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "ftrk", "ftrk", "apc", "apc" };
static readonly string[] sovietInfantry = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e4", "e4", "e3", };
static readonly string[] reinforcements = { "2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "1tnk", "1tnk", "1tnk", "arty", "arty", "arty", "jeep", "jeep" };
const int sovietAttackGroupSize = 5;
const int sovietInfantryGroupSize = 7;
const int timerTicks = 1500 * 25;
bool spawningSovietUnits = true;
bool spawningInfantry = true;
string difficulty;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2760" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="215" endline="225">
<![CDATA[
void SendPatrol()
{
for (int i = 0; i < Patrol.Length; i++)
world.CreateActor(Patrol[i], new TypeDictionary
for (int i = 0; i < Patrol.Length; i++)
world.CreateActor(Patrol[i], new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(insertionLZ.Location + new CVec(-1 + i, 10 + i * 2))
})
.QueueActivity(new Move.Move(insertionLZ.Location));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="168" endline="176">
<![CDATA[
void SendSquad1()
{
for (int i = 0; i < squad1.Length; i++)
{
var actor = world.CreateActor(squad1[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase1.Location + new CVec(-2 + i, -6 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase1.Location));
}
for (int i = 0; i < squad1.Length; i++)
{
var actor = world.CreateActor(squad1[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase1.Location + new CVec(-2 + i, -6 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase1.Location));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2761" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="215" endline="225">
<![CDATA[
void SendPatrol()
{
for (int i = 0; i < Patrol.Length; i++)
world.CreateActor(Patrol[i], new TypeDictionary
for (int i = 0; i < Patrol.Length; i++)
world.CreateActor(Patrol[i], new TypeDictionary
{
new OwnerInit(soviets),
new LocationInit(insertionLZ.Location + new CVec(-1 + i, 10 + i * 2))
})
.QueueActivity(new Move.Move(insertionLZ.Location));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="177" endline="185">
<![CDATA[
void SendSquad2()
{
for (int i = 0; i < squad2.Length; i++)
{
var actor = world.CreateActor(squad2[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase2.Location + new CVec(-9 + i, -2 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase2.Location));
}
for (int i = 0; i < squad2.Length; i++)
{
var actor = world.CreateActor(squad2[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase2.Location + new CVec(-9 + i, -2 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase2.Location));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2762" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="248" endline="258">
<![CDATA[
void ExtractEinsteinAtLZ()
{
einsteinChinook = MissionUtils.ExtractUnitWithChinook(
world,
allies,
einstein,
extractionLZEntryPoint.Location,
extractionLZ.Location,
chinookExitPoint.Location);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="380" endline="390">
<![CDATA[
void ExtractEinsteinAtLZ()
{
einsteinChinook = MissionUtils.ExtractUnitWithChinook(
world,
allies1,
einstein,
extractionLZEntryPoint.Location,
extractionLZ.Location,
extractionLZEntryPoint.Location);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2763" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="275" endline="280">
<![CDATA[
void SetAlliedUnitsToDefensiveStance()
{
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == allies && !a.IsDead() && a.HasTrait<AutoTarget>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == allies && !a.IsDead() && a.HasTrait<AutoTarget>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="340" endline="345">
<![CDATA[
void SetupSubStances()
{
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == soviets && !a.IsDead() && a.HasTrait<TargetableSubmarine>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == soviets && !a.IsDead() && a.HasTrait<TargetableSubmarine>()))
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2764" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="281" endline="324">
<![CDATA[
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
soviets = w.Players.Single(p => p.InternalName == "Soviets");
allies.PlayerActor.Trait<PlayerResources>().Cash = 0;
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
insertionLZ = actors["InsertionLZ"];
extractionLZ = actors["ExtractionLZ"];
lab = actors["Lab"];
insertionLZEntryPoint = actors["InsertionLZEntryPoint"];
chinookExitPoint = actors["ChinookExitPoint"];
extractionLZEntryPoint = actors["ExtractionLZEntryPoint"];
shipSpawnPoint = actors["ShipSpawnPoint"];
shipMovePoint = actors["ShipMovePoint"];
attackEntryPoint1 = actors["SovietAttackEntryPoint1"];
attackEntryPoint2 = actors["SovietAttackEntryPoint2"];
SetAlliedUnitsToDefensiveStance();
Game.MoveViewport(insertionLZ.Location.ToFloat2());
if (w.LobbyInfo.IsSinglePlayer)
Media.PlayFMVFullscreen(w, "ally1.vqa", () =>
Media.PlayFMVFullscreen(w, "landing.vqa", () =>
{
InsertTanyaAtLZ();
SendPatrol();
MissionUtils.PlayMissionMusic();
})
);
else
{
InsertTanyaAtLZ();
SendPatrol();
MissionUtils.PlayMissionMusic();
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="140" endline="178">
<![CDATA[
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
france = w.Players.Single(p => p.InternalName == "France");
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
startJeep = actors["StartJeep"];
startJeepMovePoint = actors["StartJeepMovePoint"];
paradropPoint1 = actors["ParadropPoint1"];
paradropEntryPoint1 = actors["ParadropEntryPoint1"];
paradropPoint2 = actors["ParadropPoint2"];
paradropEntryPoint2 = actors["ParadropEntryPoint2"];
church = actors["Church"];
airfield1 = actors["Airfield1"];
airfield2 = actors["Airfield2"];
airfield3 = actors["Airfield3"];
airfields = new[] { airfield1, airfield2, airfield3 };
Game.MoveViewport(startJeep.Location.ToFloat2());
if (w.LobbyInfo.IsSinglePlayer)
{
Media.PlayFMVFullscreen(w, "soviet1.vqa", () =>
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
});
}
else
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2765" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2766" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2767" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2768" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2769" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2770" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2771" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2772" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2773" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2774" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs" startline="279" endline="289">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2775" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="32" endline="142">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>()
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ DestroySamSitesID, new Objective(ObjectiveType.Primary, DestroySamSites, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) },
{ MaintainPresenceID, new Objective(ObjectiveType.Primary, MaintainPresence, ObjectiveStatus.InProgress) },
{ FewDeathsID, new Objective(ObjectiveType.Secondary, "", ObjectiveStatus.InProgress) }
};
const int FindEinsteinID = 0;
const int DestroySamSitesID = 1;
const int ExtractEinsteinID = 2;
const int MaintainPresenceID = 3;
const int FewDeathsID = 4;
const string FindEinstein = "Find Einstein's crashed helicopter. Tanya must survive.";
const string DestroySamSites = "Destroy the SAM sites. Tanya must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
const string MaintainPresence = "Maintain an Allied presence in the area. Reinforcements will arrive soon.";
const string FewDeathsTemplate = "Lose fewer than {0}/{1} units.";
const int DeathsThreshold = 200;
Actor sam1;
Actor sam2;
Actor sam3;
Actor sam4;
Actor[] sams;
Actor tanya;
Actor einstein;
Actor engineer;
Actor chinookHusk;
Actor allies2BasePoint;
Actor reinforcementsEntryPoint;
Actor extractionLZEntryPoint;
Actor extractionLZ;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor badgerDropPoint1;
Actor badgerDropPoint2;
Actor badgerDropPoint3;
Actor parabombPoint1;
Actor parabombPoint2;
Actor sovietRallyPoint;
Actor townPoint;
Actor sovietTownAttackPoint1;
Actor sovietTownAttackPoint2;
Actor yakEntryPoint;
Actor yakAttackPoint;
Actor yak;
Actor einsteinChinook;
World world;
Player allies;
Player allies1;
Player allies2;
Player soviets;
Actor sovietBarracks;
Actor sovietWarFactory;
CountdownTimer reinforcementsTimer;
CountdownTimerWidget reinforcementsTimerWidget;
CPos alliedBaseTopLeft;
CPos alliedBaseBottomRight;
const string InfantryQueueName = "Infantry";
const string VehicleQueueName = "Vehicle";
static readonly string[] SovietInfantry = { "e1", "e2", "e3" };
static readonly string[] SovietVehicles1 = { "3tnk" };
static readonly string[] SovietVehicles2 = { "3tnk", "v2rl" };
const int SovietVehiclesUpgradeTicks = 1500 * 4;
const int SovietGroupSize = 5;
const int ReinforcementsTicks = 1500 * 16;
static readonly string[] Reinforcements =
{
"2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "2tnk",
"1tnk", "1tnk",
"jeep",
"e1", "e1", "e1", "e1",
"e3", "e3",
"mcv",
"truk", "truk", "truk", "truk", "truk", "truk"
};
int currentReinforcement = -1;
const int ParabombTicks = 750;
const int ParatroopersTicks = 1500 * 5;
static readonly string[] Badger1Passengers = { "e1", "e1", "e1", "e2", "3tnk" };
static readonly string[] Badger2Passengers = { "e1", "e1", "e1", "e2", "e2" };
static readonly string[] Badger3Passengers = { "e1", "e1", "e1", "e2", "e2" };
const string SignalFlareName = "flare";
const string YakName = "yak";
const int AlliedTownTransferRange = 15;
const int SovietTownAttackGroupRange = 5;
const int SovietTownMoveNearEnough = 3;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
if (reinforcementsTimer != null)
reinforcementsTimerWidget.Visible = false;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="32" endline="126">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ EvacuateID, new Objective(ObjectiveType.Primary, Evacuate, ObjectiveStatus.InProgress) },
{ AirbaseID, new Objective(ObjectiveType.Secondary, Airbase, ObjectiveStatus.InProgress) },
{ GapGeneratorID, new Objective(ObjectiveType.Secondary, GapGenerator , ObjectiveStatus.InProgress) }
};
const int EvacuateID = 0;
const int AirbaseID = 1;
const int GapGeneratorID = 2;
const string Evacuate = "Following the rescue of Einstein, the Allies are now being flanked from both sides."
+ " Evacuate {0} units before the remaining Allied forces in the area are wiped out.";
const string Airbase = "Destroy the nearby Soviet airbases.";
const string GapGenerator = "Einstein has recently developed a technology which allows us to obscure units from the enemy."
+ " Evacuate at least one prototype mobile gap generator intact.";
int unitsEvacuatedThreshold;
int unitsEvacuated;
InfoWidget evacuateWidget;
const string ShortEvacuateTemplate = "{0}/{1} units evacuated";
World world;
Player allies1;
Player allies2;
Player allies;
Player soviets;
Actor exit1TopLeft;
Actor exit1BottomRight;
Actor exit1ExitPoint;
Actor exit2TopLeft;
Actor exit2BottomRight;
Actor exit2ExitPoint;
Actor sovietEntryPoint1;
Actor sovietEntryPoint2;
Actor sovietEntryPoint3;
Actor sovietEntryPoint4;
Actor sovietEntryPoint5;
Actor sovietEntryPoint6;
CPos[] sovietEntryPoints;
Actor sovietRallyPoint1;
Actor sovietRallyPoint2;
Actor sovietRallyPoint3;
Actor sovietRallyPoint4;
Actor sovietRallyPoint5;
Actor sovietRallyPoint6;
CPos[] sovietRallyPoints;
Actor[] sovietAirfields;
Rectangle paradropBox;
const int ReinforcementsTicks1 = 1500 * 5;
static readonly string[] Reinforcements1 = { "mgg", "2tnk", "2tnk", "2tnk", "2tnk", "1tnk", "1tnk", "jeep", "jeep", "e1", "e1", "e1", "e1", "e3", "e3" };
int currentReinforcement1;
const int ReinforcementsTicks2 = 1500 * 10;
static readonly string[] Reinforcements2 = { "mgg", "2tnk", "2tnk", "2tnk", "2tnk", "truk", "truk", "truk", "truk", "truk", "truk", "1tnk", "1tnk", "jeep", "jeep" };
int currentReinforcement2;
static readonly string[] SovietUnits1 = { "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "apc", "e1", "e1", "e2", "e3", "e3", "e4" };
static readonly string[] SovietUnits2 = { "4tnk", "4tnk", "4tnk", "4tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "apc", "e1", "e1", "e2", "e3", "e3", "e4" };
int sovietUnits2Ticks;
const int SovietGroupSize = 5;
int sovietParadropTicks;
const int ParadropIncrement = 200;
static readonly string[] ParadropTerrainTypes = { "Clear", "Road", "Rough", "Beach", "Ore" };
static readonly string[] SovietParadroppers = { "e1", "e1", "e3", "e3", "e4" };
int sovietParadrops;
int maxSovietYaks;
int attackAtFrame;
int attackAtFrameIncrement;
int minAttackAtFrame;
Actor allies1EntryPoint;
Actor allies1MovePoint;
Actor allies2EntryPoint;
Actor allies2MovePoint;
const string McvName = "mcv";
const string YakName = "yak";
string difficulty;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2776" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="32" endline="142">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>()
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ DestroySamSitesID, new Objective(ObjectiveType.Primary, DestroySamSites, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) },
{ MaintainPresenceID, new Objective(ObjectiveType.Primary, MaintainPresence, ObjectiveStatus.InProgress) },
{ FewDeathsID, new Objective(ObjectiveType.Secondary, "", ObjectiveStatus.InProgress) }
};
const int FindEinsteinID = 0;
const int DestroySamSitesID = 1;
const int ExtractEinsteinID = 2;
const int MaintainPresenceID = 3;
const int FewDeathsID = 4;
const string FindEinstein = "Find Einstein's crashed helicopter. Tanya must survive.";
const string DestroySamSites = "Destroy the SAM sites. Tanya must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
const string MaintainPresence = "Maintain an Allied presence in the area. Reinforcements will arrive soon.";
const string FewDeathsTemplate = "Lose fewer than {0}/{1} units.";
const int DeathsThreshold = 200;
Actor sam1;
Actor sam2;
Actor sam3;
Actor sam4;
Actor[] sams;
Actor tanya;
Actor einstein;
Actor engineer;
Actor chinookHusk;
Actor allies2BasePoint;
Actor reinforcementsEntryPoint;
Actor extractionLZEntryPoint;
Actor extractionLZ;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor badgerDropPoint1;
Actor badgerDropPoint2;
Actor badgerDropPoint3;
Actor parabombPoint1;
Actor parabombPoint2;
Actor sovietRallyPoint;
Actor townPoint;
Actor sovietTownAttackPoint1;
Actor sovietTownAttackPoint2;
Actor yakEntryPoint;
Actor yakAttackPoint;
Actor yak;
Actor einsteinChinook;
World world;
Player allies;
Player allies1;
Player allies2;
Player soviets;
Actor sovietBarracks;
Actor sovietWarFactory;
CountdownTimer reinforcementsTimer;
CountdownTimerWidget reinforcementsTimerWidget;
CPos alliedBaseTopLeft;
CPos alliedBaseBottomRight;
const string InfantryQueueName = "Infantry";
const string VehicleQueueName = "Vehicle";
static readonly string[] SovietInfantry = { "e1", "e2", "e3" };
static readonly string[] SovietVehicles1 = { "3tnk" };
static readonly string[] SovietVehicles2 = { "3tnk", "v2rl" };
const int SovietVehiclesUpgradeTicks = 1500 * 4;
const int SovietGroupSize = 5;
const int ReinforcementsTicks = 1500 * 16;
static readonly string[] Reinforcements =
{
"2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "2tnk",
"1tnk", "1tnk",
"jeep",
"e1", "e1", "e1", "e1",
"e3", "e3",
"mcv",
"truk", "truk", "truk", "truk", "truk", "truk"
};
int currentReinforcement = -1;
const int ParabombTicks = 750;
const int ParatroopersTicks = 1500 * 5;
static readonly string[] Badger1Passengers = { "e1", "e1", "e1", "e2", "3tnk" };
static readonly string[] Badger2Passengers = { "e1", "e1", "e1", "e2", "e2" };
static readonly string[] Badger3Passengers = { "e1", "e1", "e1", "e2", "e2" };
const string SignalFlareName = "flare";
const string YakName = "yak";
const int AlliedTownTransferRange = 15;
const int SovietTownAttackGroupRange = 5;
const int SovietTownMoveNearEnough = 3;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
if (reinforcementsTimer != null)
reinforcementsTimerWidget.Visible = false;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="33" endline="98">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
Actor[] townAttackers;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2777" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="306" endline="325">
<![CDATA[
void ManageSovietUnits()
{
var units = world.FindAliveCombatantActorsInCircle(sovietRallyPoint.CenterLocation, 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values);
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
foreach (var unit in units)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.IsIdle
&& u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)
.Except(units);
foreach (var unit in scatteredUnits)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
foreach (var unit in scatteredUnits)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="308" endline="328">
<![CDATA[
void ManageSovietUnits()
{
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets);
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
AttackNearestAlliedActor(unit);
foreach (var unit in units)
AttackNearestAlliedActor(unit);
}
}
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets);
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
AttackNearestAlliedActor(unit);
}
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)
.Except(sovietRallyPoints.SelectMany(rp => world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rp), 10)));
foreach (var unit in scatteredUnits)
AttackNearestAlliedActor(unit);
foreach (var unit in scatteredUnits)
AttackNearestAlliedActor(unit);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2778" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="306" endline="325">
<![CDATA[
void ManageSovietUnits()
{
var units = world.FindAliveCombatantActorsInCircle(sovietRallyPoint.CenterLocation, 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values);
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
foreach (var unit in units)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.IsIdle
&& u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)
.Except(units);
foreach (var unit in scatteredUnits)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
foreach (var unit in scatteredUnits)
MissionUtils.AttackNearestLandActor(true, unit, allies2);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="226" endline="248">
<![CDATA[
void ManageSovietUnits()
{
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 4)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.Owner == soviets);
if (units.Count() >= sovietAttackGroupSize)
{
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
}
}
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 4)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.Owner == soviets);
if (units.Count() >= sovietAttackGroupSize)
{
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
}
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)
.Except(sovietRallyPoints.SelectMany(rp => world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rp), 4)));
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2779" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="354" endline="361">
<![CDATA[
void StartReinforcementsTimer()
{
Sound.Play("timergo1.aud");
reinforcementsTimer = new CountdownTimer(ReinforcementsTicks, ReinforcementsTimerExpired, true);
reinforcementsTimerWidget = new CountdownTimerWidget(reinforcementsTimer, "Allied reinforcements arrive in
Ui.Root.AddChild(reinforcementsTimerWidget);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="249" endline="256">
<![CDATA[
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2780" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="29" endline="121">
<![CDATA[
public event Action<bool> OnObjectivesUpdated = notify => { };
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>()
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ DestroySamSitesID, new Objective(ObjectiveType.Primary, DestroySamSites, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) },
{ MaintainPresenceID, new Objective(ObjectiveType.Primary, MaintainPresence, ObjectiveStatus.InProgress) },
{ FewDeathsID, new Objective(ObjectiveType.Secondary, "", ObjectiveStatus.InProgress) }
};
const int FindEinsteinID = 0;
const int DestroySamSitesID = 1;
const int ExtractEinsteinID = 2;
const int MaintainPresenceID = 3;
const int FewDeathsID = 4;
const string FindEinstein = "Find Einstein's crashed helicopter. Tanya must survive.";
const string DestroySamSites = "Destroy the SAM sites. Tanya must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
const string MaintainPresence = "Maintain an Allied presence in the area. Reinforcements will arrive soon.";
const string FewDeathsTemplate = "Lose fewer than {0}/{1} units.";
const int DeathsThreshold = 200;
Actor sam1;
Actor sam2;
Actor sam3;
Actor sam4;
Actor[] sams;
Actor tanya;
Actor einstein;
Actor engineer;
Actor chinookHusk;
Actor allies2BasePoint;
Actor reinforcementsEntryPoint;
Actor extractionLZEntryPoint;
Actor extractionLZ;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor badgerDropPoint1;
Actor badgerDropPoint2;
Actor badgerDropPoint3;
Actor parabombPoint1;
Actor parabombPoint2;
Actor sovietRallyPoint;
Actor townPoint;
Actor sovietTownAttackPoint1;
Actor sovietTownAttackPoint2;
Actor yakEntryPoint;
Actor yakAttackPoint;
Actor yak;
Actor einsteinChinook;
World world;
Player allies;
Player allies1;
Player allies2;
Player soviets;
Actor sovietBarracks;
Actor sovietWarFactory;
CountdownTimer reinforcementsTimer;
CountdownTimerWidget reinforcementsTimerWidget;
CPos alliedBaseTopLeft;
CPos alliedBaseBottomRight;
const string InfantryQueueName = "Infantry";
const string VehicleQueueName = "Vehicle";
static readonly string[] SovietInfantry = { "e1", "e2", "e3" };
static readonly string[] SovietVehicles1 = { "3tnk" };
static readonly string[] SovietVehicles2 = { "3tnk", "v2rl" };
const int SovietVehiclesUpgradeTicks = 1500 * 4;
const int SovietGroupSize = 5;
const int ReinforcementsTicks = 1500 * 16;
static readonly string[] Reinforcements =
{
"2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "2tnk",
"1tnk", "1tnk",
"jeep",
"e1", "e1", "e1", "e1",
"e3", "e3",
"mcv",
"truk", "truk", "truk", "truk", "truk", "truk"
};
int currentReinforcement = -1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="30" endline="92">
<![CDATA[
public event Action<bool> OnObjectivesUpdated = notify => { };
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2781" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="29" endline="121">
<![CDATA[
public event Action<bool> OnObjectivesUpdated = notify => { };
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>()
{
{ FindEinsteinID, new Objective(ObjectiveType.Primary, FindEinstein, ObjectiveStatus.InProgress) },
{ DestroySamSitesID, new Objective(ObjectiveType.Primary, DestroySamSites, ObjectiveStatus.InProgress) },
{ ExtractEinsteinID, new Objective(ObjectiveType.Primary, ExtractEinstein, ObjectiveStatus.Inactive) },
{ MaintainPresenceID, new Objective(ObjectiveType.Primary, MaintainPresence, ObjectiveStatus.InProgress) },
{ FewDeathsID, new Objective(ObjectiveType.Secondary, "", ObjectiveStatus.InProgress) }
};
const int FindEinsteinID = 0;
const int DestroySamSitesID = 1;
const int ExtractEinsteinID = 2;
const int MaintainPresenceID = 3;
const int FewDeathsID = 4;
const string FindEinstein = "Find Einstein's crashed helicopter. Tanya must survive.";
const string DestroySamSites = "Destroy the SAM sites. Tanya must survive.";
const string ExtractEinstein = "Wait for the helicopter and extract Einstein. Tanya and Einstein must survive.";
const string MaintainPresence = "Maintain an Allied presence in the area. Reinforcements will arrive soon.";
const string FewDeathsTemplate = "Lose fewer than {0}/{1} units.";
const int DeathsThreshold = 200;
Actor sam1;
Actor sam2;
Actor sam3;
Actor sam4;
Actor[] sams;
Actor tanya;
Actor einstein;
Actor engineer;
Actor chinookHusk;
Actor allies2BasePoint;
Actor reinforcementsEntryPoint;
Actor extractionLZEntryPoint;
Actor extractionLZ;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor badgerDropPoint1;
Actor badgerDropPoint2;
Actor badgerDropPoint3;
Actor parabombPoint1;
Actor parabombPoint2;
Actor sovietRallyPoint;
Actor townPoint;
Actor sovietTownAttackPoint1;
Actor sovietTownAttackPoint2;
Actor yakEntryPoint;
Actor yakAttackPoint;
Actor yak;
Actor einsteinChinook;
World world;
Player allies;
Player allies1;
Player allies2;
Player soviets;
Actor sovietBarracks;
Actor sovietWarFactory;
CountdownTimer reinforcementsTimer;
CountdownTimerWidget reinforcementsTimerWidget;
CPos alliedBaseTopLeft;
CPos alliedBaseBottomRight;
const string InfantryQueueName = "Infantry";
const string VehicleQueueName = "Vehicle";
static readonly string[] SovietInfantry = { "e1", "e2", "e3" };
static readonly string[] SovietVehicles1 = { "3tnk" };
static readonly string[] SovietVehicles2 = { "3tnk", "v2rl" };
const int SovietVehiclesUpgradeTicks = 1500 * 4;
const int SovietGroupSize = 5;
const int ReinforcementsTicks = 1500 * 16;
static readonly string[] Reinforcements =
{
"2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "2tnk",
"1tnk", "1tnk",
"jeep",
"e1", "e1", "e1", "e1",
"e3", "e3",
"mcv",
"truk", "truk", "truk", "truk", "truk", "truk"
};
int currentReinforcement = -1;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Mobile.cs" startline="29" endline="75">
<![CDATA[
public readonly int WaitAverage = 5;
public readonly int WaitSpread = 2;
public readonly int InitialFacing = 128;
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int Speed = 1;
public readonly bool OnRails = false;
[Desc("Allow multiple (infantry) units in one cell.")]
public readonly bool SharesCell = false;
public readonly int Altitude;
public virtual object Create(ActorInitializer init) { return new Mobile(init, this); }
static object LoadSpeeds(MiniYaml y)
{
Dictionary<string, TerrainInfo> ret = new Dictionary<string, TerrainInfo>();
foreach (var t in y.NodesDict["TerrainSpeeds"].Nodes)
{
var speed = FieldLoader.GetValue<decimal>("speed", t.Value.Value);
var cost = t.Value.NodesDict.ContainsKey("PathingCost")
? FieldLoader.GetValue<int>("cost", t.Value.NodesDict["PathingCost"].Value)
ret.Add(t.Key, new TerrainInfo { Speed = speed, Cost = cost });
}
return ret;
}
public class TerrainInfo
{
public int Cost = int.MaxValue;
public decimal Speed = 0;
}
public int MovementCostForCell(World world, CPos cell)
{
if (!world.Map.IsInMap(cell.X, cell.Y))
return int.MaxValue;
var type = world.GetTerrainType(cell);
if (!TerrainSpeeds.ContainsKey(type))
return int.MaxValue;
return TerrainSpeeds[type].Cost;
}
public readonly Dictionary<SubCell, PVecInt> SubCellOffsets = new Dictionary<SubCell, PVecInt>()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2782" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="252" endline="310">
<![CDATA[
{
objectives[MaintainPresenceID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
MissionFailed("The Allied reinforcements have been defeated.");
}
});
}
void UpdateDeaths()
{
var unitDeaths = allies1.Deaths + allies2.Deaths;
objectives[FewDeathsID].Text = FewDeathsTemplate.F(unitDeaths, DeathsThreshold);
OnObjectivesUpdated(false);
if (unitDeaths >= DeathsThreshold && objectives[FewDeathsID].Status == ObjectiveStatus.InProgress)
{
objectives[FewDeathsID].Status = ObjectiveStatus.Failed;
OnObjectivesUpdated(true);
}
}
void YakStrafe(IEnumerable<Actor> candidates)
{
if (yak == null)
{
yak = world.CreateActor(YakName, new TypeDictionary
{
new LocationInit(yakEntryPoint.Location),
new OwnerInit(soviets),
new FacingInit(Util.GetFacing(yakAttackPoint.Location - yakEntryPoint.Location, 0)),
new AltitudeInit(Rules.Info[YakName].Traits.Get<PlaneInfo>().CruiseAltitude)
});
}
if (yak.Trait<LimitedAmmo>().HasAmmo())
yak.QueueActivity(new FlyAttack(Target.FromActor(candidates.Random(world.SharedRandom))));
else
{
yak.QueueActivity(new FlyOffMap());
yak.QueueActivity(new RemoveSelf());
}
}
void BuildSovietUnits()
{
if (!sovietBarracks.IsDead())
BuildSovietUnit(InfantryQueueName, SovietInfantry.Random(world.SharedRandom));
if (!sovietWarFactory.IsDead())
{
var vehicles = world.FrameNumber >= SovietVehiclesUpgradeTicks ? SovietVehicles2
BuildSovietUnit(VehicleQueueName, vehicles.Random(world.SharedRandom));
}
}
void ManageSovietUnits()
{
var units = world.FindAliveCombatantActorsInCircle(sovietRallyPoint.CenterLocation, 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="272" endline="314">
<![CDATA[
{
objectives[AirbaseID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
}
void SpawnSovietUnits()
{
var route = world.SharedRandom.Next(sovietEntryPoints.Length);
var spawnPoint = sovietEntryPoints[route];
var rallyPoint = sovietRallyPoints[route];
IEnumerable<string> units;
if (world.FrameNumber >= sovietUnits2Ticks)
units = SovietUnits2;
else
units = SovietUnits1;
var unit = world.CreateActor(units.Random(world.SharedRandom),
new TypeDictionary
{
new LocationInit(spawnPoint),
new OwnerInit(soviets)
});
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(rallyPoint, 3)));
}
void AttackNearestAlliedActor(Actor self)
{
var enemies = world.Actors.Where(u => u.AppearsHostileTo(self) && (u.Owner == allies1 || u.Owner == allies2)
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || u.HasTrait<Mobile>()) && u.IsInWorld && !u.IsDead());
var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared), world, 10);
if (enemy != null)
self.QueueActivity(new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
void ManageSovietUnits()
{
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2783" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2784" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2785" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2786" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2787" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2788" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2789" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2790" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2791" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="411" endline="420">
<![CDATA[
foreach (var unit in sovietAttackUnits)
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(townPoint.Location, SovietTownMoveNearEnough)));
}
public void WorldLoaded(World w)
{
world = w;
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2792" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2793" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2794" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2795" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2796" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2797" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2798" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2799" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs" startline="422" endline="429">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 5000;
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2800" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="32" endline="126">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ EvacuateID, new Objective(ObjectiveType.Primary, Evacuate, ObjectiveStatus.InProgress) },
{ AirbaseID, new Objective(ObjectiveType.Secondary, Airbase, ObjectiveStatus.InProgress) },
{ GapGeneratorID, new Objective(ObjectiveType.Secondary, GapGenerator , ObjectiveStatus.InProgress) }
};
const int EvacuateID = 0;
const int AirbaseID = 1;
const int GapGeneratorID = 2;
const string Evacuate = "Following the rescue of Einstein, the Allies are now being flanked from both sides."
+ " Evacuate {0} units before the remaining Allied forces in the area are wiped out.";
const string Airbase = "Destroy the nearby Soviet airbases.";
const string GapGenerator = "Einstein has recently developed a technology which allows us to obscure units from the enemy."
+ " Evacuate at least one prototype mobile gap generator intact.";
int unitsEvacuatedThreshold;
int unitsEvacuated;
InfoWidget evacuateWidget;
const string ShortEvacuateTemplate = "{0}/{1} units evacuated";
World world;
Player allies1;
Player allies2;
Player allies;
Player soviets;
Actor exit1TopLeft;
Actor exit1BottomRight;
Actor exit1ExitPoint;
Actor exit2TopLeft;
Actor exit2BottomRight;
Actor exit2ExitPoint;
Actor sovietEntryPoint1;
Actor sovietEntryPoint2;
Actor sovietEntryPoint3;
Actor sovietEntryPoint4;
Actor sovietEntryPoint5;
Actor sovietEntryPoint6;
CPos[] sovietEntryPoints;
Actor sovietRallyPoint1;
Actor sovietRallyPoint2;
Actor sovietRallyPoint3;
Actor sovietRallyPoint4;
Actor sovietRallyPoint5;
Actor sovietRallyPoint6;
CPos[] sovietRallyPoints;
Actor[] sovietAirfields;
Rectangle paradropBox;
const int ReinforcementsTicks1 = 1500 * 5;
static readonly string[] Reinforcements1 = { "mgg", "2tnk", "2tnk", "2tnk", "2tnk", "1tnk", "1tnk", "jeep", "jeep", "e1", "e1", "e1", "e1", "e3", "e3" };
int currentReinforcement1;
const int ReinforcementsTicks2 = 1500 * 10;
static readonly string[] Reinforcements2 = { "mgg", "2tnk", "2tnk", "2tnk", "2tnk", "truk", "truk", "truk", "truk", "truk", "truk", "1tnk", "1tnk", "jeep", "jeep" };
int currentReinforcement2;
static readonly string[] SovietUnits1 = { "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "apc", "e1", "e1", "e2", "e3", "e3", "e4" };
static readonly string[] SovietUnits2 = { "4tnk", "4tnk", "4tnk", "4tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "apc", "e1", "e1", "e2", "e3", "e3", "e4" };
int sovietUnits2Ticks;
const int SovietGroupSize = 5;
int sovietParadropTicks;
const int ParadropIncrement = 200;
static readonly string[] ParadropTerrainTypes = { "Clear", "Road", "Rough", "Beach", "Ore" };
static readonly string[] SovietParadroppers = { "e1", "e1", "e3", "e3", "e4" };
int sovietParadrops;
int maxSovietYaks;
int attackAtFrame;
int attackAtFrameIncrement;
int minAttackAtFrame;
Actor allies1EntryPoint;
Actor allies1MovePoint;
Actor allies2EntryPoint;
Actor allies2MovePoint;
const string McvName = "mcv";
const string YakName = "yak";
string difficulty;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="33" endline="98">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
Actor[] townAttackers;
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, allies1, allies2);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2801" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="277" endline="297">
<![CDATA[
void SpawnSovietUnits()
{
var route = world.SharedRandom.Next(sovietEntryPoints.Length);
var spawnPoint = sovietEntryPoints[route];
var rallyPoint = sovietRallyPoints[route];
IEnumerable<string> units;
if (world.FrameNumber >= sovietUnits2Ticks)
units = SovietUnits2;
else
units = SovietUnits1;
var unit = world.CreateActor(units.Random(world.SharedRandom),
new TypeDictionary
{
new LocationInit(spawnPoint),
new OwnerInit(soviets)
});
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(rallyPoint, 3)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="202" endline="214">
<![CDATA[
void SpawnSovietUnits()
{
if (spawningSovietUnits)
{
var route = world.SharedRandom.Next(sovietEntryPoints.Length);
var spawnPoint = sovietEntryPoints[route];
var rallyPoint = sovietRallyPoints[route];
var unit = world.CreateActor(sovietVehicles.Random(world.SharedRandom),
new TypeDictionary { new LocationInit(spawnPoint), new OwnerInit(soviets) });
unit.QueueActivity(new AttackMove.AttackMoveActivity(unit, new Move.Move(rallyPoint, 3)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2802" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="298" endline="307">
<![CDATA[
void AttackNearestAlliedActor(Actor self)
{
var enemies = world.Actors.Where(u => u.AppearsHostileTo(self) && (u.Owner == allies1 || u.Owner == allies2)
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || u.HasTrait<Mobile>()) && u.IsInWorld && !u.IsDead());
var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared), world, 10);
if (enemy != null)
self.QueueActivity(new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="215" endline="225">
<![CDATA[
void AttackNearestAlliedActor(Actor self)
{
var enemies = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && (u.Owner == allies)
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || u.HasTrait<Mobile>()));
var targetEnemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (targetEnemy != null)
{
self.QueueActivity(new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(targetEnemy), 3)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2803" semantic_similarity= "0.99" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="308" endline="328">
<![CDATA[
void ManageSovietUnits()
{
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets);
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
AttackNearestAlliedActor(unit);
foreach (var unit in units)
AttackNearestAlliedActor(unit);
}
}
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 10)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets);
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
AttackNearestAlliedActor(unit);
}
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)
.Except(sovietRallyPoints.SelectMany(rp => world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rp), 10)));
foreach (var unit in scatteredUnits)
AttackNearestAlliedActor(unit);
foreach (var unit in scatteredUnits)
AttackNearestAlliedActor(unit);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="226" endline="248">
<![CDATA[
void ManageSovietUnits()
{
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 4)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.Owner == soviets);
if (units.Count() >= sovietAttackGroupSize)
{
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
}
}
foreach (var rallyPoint in sovietRallyPoints)
{
var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint), 4)
.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.Owner == soviets);
if (units.Count() >= sovietAttackGroupSize)
{
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
}
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)
.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)
.Except(sovietRallyPoints.SelectMany(rp => world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rp), 4)));
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2804" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="315" endline="322">
<![CDATA[
if (units.Count() >= SovietGroupSize)
{
foreach (var unit in units)
AttackNearestAlliedActor(unit);
}
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="233" endline="241">
<![CDATA[
if (units.Count() >= sovietAttackGroupSize)
{
foreach (var unit in units)
{
AttackNearestAlliedActor(unit);
}
}
}
var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2805" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2806" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2807" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2808" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2809" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2810" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2811" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="364" endline="395">
<![CDATA[
foreach (var unit in units)
{
unit.CancelActivity();
unit.ChangeOwner(allies);
unitsEvacuated++;
var createsShroud = unit.TraitOrDefault<CreatesShroud>();
if (createsShroud != null && objectives[GapGeneratorID].Status == ObjectiveStatus.InProgress)
{
objectives[GapGeneratorID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
var cargo = unit.TraitOrDefault<Cargo>();
if (cargo != null)
unitsEvacuated += cargo.Passengers.Count();
UpdateUnitsEvacuated();
unit.QueueActivity(new Move.Move(exit));
unit.QueueActivity(new RemoveSelf());
}
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2812" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2813" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2814" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2815" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2816" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2817" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="397" endline="421">
<![CDATA[
var res = allies1.PlayerActor.Trait<PlayerResources>();
if (allies2 == null)
{
res.Cash = 10000;
allies2 = allies1;
}
else
{
res.Cash = 5000;
res = allies2.PlayerActor.Trait<PlayerResources>();
res.Cash = 5000;
}
attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500
minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100
unitsEvacuatedThreshold = difficulty == "Hard" ? 200
maxSovietYaks = difficulty == "Hard" ? 4
sovietParadrops = difficulty == "Hard" ? 40
sovietParadropTicks = difficulty == "Hard" ? 1500 * 17
sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12
objectives[EvacuateID].Text = objectives[EvacuateID].Text.F(unitsEvacuatedThreshold);
allies = w.Players.Single(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2818" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="423" endline="441">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
exit1TopLeft = actors["Exit1TopLeft"];
exit1BottomRight = actors["Exit1BottomRight"];
exit1ExitPoint = actors["Exit1ExitPoint"];
exit2TopLeft = actors["Exit2TopLeft"];
exit2BottomRight = actors["Exit2BottomRight"];
exit2ExitPoint = actors["Exit2ExitPoint"];
allies1EntryPoint = actors["Allies1EntryPoint"];
allies1MovePoint = actors["Allies1MovePoint"];
allies2EntryPoint = actors["Allies2EntryPoint"];
allies2MovePoint = actors["Allies2MovePoint"];
sovietEntryPoint1 = actors["SovietEntryPoint1"];
sovietEntryPoint2 = actors["SovietEntryPoint2"];
sovietEntryPoint3 = actors["SovietEntryPoint3"];
sovietEntryPoint4 = actors["SovietEntryPoint4"];
sovietEntryPoint5 = actors["SovietEntryPoint5"];
sovietEntryPoint6 = actors["SovietEntryPoint6"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5, sovietEntryPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="442" endline="448">
<![CDATA[
sovietRallyPoint1 = actors["SovietRallyPoint1"];
sovietRallyPoint2 = actors["SovietRallyPoint2"];
sovietRallyPoint3 = actors["SovietRallyPoint3"];
sovietRallyPoint4 = actors["SovietRallyPoint4"];
sovietRallyPoint5 = actors["SovietRallyPoint5"];
sovietRallyPoint6 = actors["SovietRallyPoint6"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5, sovietRallyPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2819" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="423" endline="441">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
exit1TopLeft = actors["Exit1TopLeft"];
exit1BottomRight = actors["Exit1BottomRight"];
exit1ExitPoint = actors["Exit1ExitPoint"];
exit2TopLeft = actors["Exit2TopLeft"];
exit2BottomRight = actors["Exit2BottomRight"];
exit2ExitPoint = actors["Exit2ExitPoint"];
allies1EntryPoint = actors["Allies1EntryPoint"];
allies1MovePoint = actors["Allies1MovePoint"];
allies2EntryPoint = actors["Allies2EntryPoint"];
allies2MovePoint = actors["Allies2MovePoint"];
sovietEntryPoint1 = actors["SovietEntryPoint1"];
sovietEntryPoint2 = actors["SovietEntryPoint2"];
sovietEntryPoint3 = actors["SovietEntryPoint3"];
sovietEntryPoint4 = actors["SovietEntryPoint4"];
sovietEntryPoint5 = actors["SovietEntryPoint5"];
sovietEntryPoint6 = actors["SovietEntryPoint6"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5, sovietEntryPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="314" endline="320">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
sovietEntryPoint1 = actors["sovietEntryPoint1"];
sovietEntryPoint2 = actors["sovietEntryPoint2"];
sovietEntryPoint3 = actors["sovietEntryPoint3"];
sovietEntryPoint4 = actors["sovietEntryPoint4"];
sovietEntryPoint5 = actors["sovietEntryPoint5"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2820" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="423" endline="441">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
exit1TopLeft = actors["Exit1TopLeft"];
exit1BottomRight = actors["Exit1BottomRight"];
exit1ExitPoint = actors["Exit1ExitPoint"];
exit2TopLeft = actors["Exit2TopLeft"];
exit2BottomRight = actors["Exit2BottomRight"];
exit2ExitPoint = actors["Exit2ExitPoint"];
allies1EntryPoint = actors["Allies1EntryPoint"];
allies1MovePoint = actors["Allies1MovePoint"];
allies2EntryPoint = actors["Allies2EntryPoint"];
allies2MovePoint = actors["Allies2MovePoint"];
sovietEntryPoint1 = actors["SovietEntryPoint1"];
sovietEntryPoint2 = actors["SovietEntryPoint2"];
sovietEntryPoint3 = actors["SovietEntryPoint3"];
sovietEntryPoint4 = actors["SovietEntryPoint4"];
sovietEntryPoint5 = actors["SovietEntryPoint5"];
sovietEntryPoint6 = actors["SovietEntryPoint6"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5, sovietEntryPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="321" endline="326">
<![CDATA[
sovietRallyPoint1 = actors["sovietRallyPoint1"];
sovietRallyPoint2 = actors["sovietRallyPoint2"];
sovietRallyPoint3 = actors["sovietRallyPoint3"];
sovietRallyPoint4 = actors["sovietRallyPoint4"];
sovietRallyPoint5 = actors["sovietRallyPoint5"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2821" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="442" endline="448">
<![CDATA[
sovietRallyPoint1 = actors["SovietRallyPoint1"];
sovietRallyPoint2 = actors["SovietRallyPoint2"];
sovietRallyPoint3 = actors["SovietRallyPoint3"];
sovietRallyPoint4 = actors["SovietRallyPoint4"];
sovietRallyPoint5 = actors["SovietRallyPoint5"];
sovietRallyPoint6 = actors["SovietRallyPoint6"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5, sovietRallyPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="314" endline="320">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
sovietEntryPoint1 = actors["sovietEntryPoint1"];
sovietEntryPoint2 = actors["sovietEntryPoint2"];
sovietEntryPoint3 = actors["sovietEntryPoint3"];
sovietEntryPoint4 = actors["sovietEntryPoint4"];
sovietEntryPoint5 = actors["sovietEntryPoint5"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2822" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs" startline="442" endline="448">
<![CDATA[
sovietRallyPoint1 = actors["SovietRallyPoint1"];
sovietRallyPoint2 = actors["SovietRallyPoint2"];
sovietRallyPoint3 = actors["SovietRallyPoint3"];
sovietRallyPoint4 = actors["SovietRallyPoint4"];
sovietRallyPoint5 = actors["SovietRallyPoint5"];
sovietRallyPoint6 = actors["SovietRallyPoint6"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5, sovietRallyPoint6 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="321" endline="326">
<![CDATA[
sovietRallyPoint1 = actors["sovietRallyPoint1"];
sovietRallyPoint2 = actors["sovietRallyPoint2"];
sovietRallyPoint3 = actors["sovietRallyPoint3"];
sovietRallyPoint4 = actors["sovietRallyPoint4"];
sovietRallyPoint5 = actors["sovietRallyPoint5"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2823" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="30" endline="92">
<![CDATA[
public event Action<bool> OnObjectivesUpdated = notify => { };
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ InfiltrateID, new Objective(ObjectiveType.Primary, "", ObjectiveStatus.InProgress) },
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.Inactive) }
};
const int InfiltrateID = 0;
const int DestroyID = 1;
const string Destroy = "Secure the laboratory and destroy the rest of the Soviet base. Ensure that the laboratory is not destroyed.";
const string Infiltrate = "The Soviets are currently developing a new defensive system named the \"Iron Curtain\" at their main research laboratory."
+ " Get our {0} into the laboratory undetected.";
Actor hijackTruck;
Actor baseGuard;
Actor baseGuardMovePos;
Actor baseGuardTruckPos;
Actor lab;
int baseGuardTicks = 100;
Actor allies1Spy;
Actor allies2Spy;
bool allies1SpyInfiltratedLab;
bool allies2SpyInfiltratedLab;
int frameInfiltrated = -1;
CountdownTimer destroyBaseTimer;
CountdownTimerWidget destroyBaseTimerWidget;
Player allies1;
Player allies2;
Player soviets;
Player creeps;
World world;
List<Patrol> patrols;
CPos[] patrolPoints1;
CPos[] patrolPoints2;
CPos[] patrolPoints3;
CPos[] patrolPoints4;
CPos[] patrolPoints5;
Actor reinforcementsEntryPoint;
Actor reinforcementsUnloadPoint;
Actor spyReinforcementsEntryPoint;
Actor spyReinforcementsUnloadPoint;
Actor spyReinforcementsExitPoint;
string difficulty;
int destroyBaseTicks;
int nextCivilianMove = 1;
Actor bridgeTank;
Actor bridgeAttackPoint;
Actor bridge;
bool attackingBridge;
bool attackingTown = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="27" endline="98">
<![CDATA[
public event Action<bool> OnObjectivesUpdated = notify => { };
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ maintainPresenceID, new Objective(ObjectiveType.Primary, maintainPresence, ObjectiveStatus.InProgress) },
{ destroySovietsID, new Objective(ObjectiveType.Primary, destroySoviets, ObjectiveStatus.Inactive) }
};
const int maintainPresenceID = 0;
const int destroySovietsID = 1;
const string maintainPresence = "Enforce your position and hold-out the onslaught until reinforcements arrive. We must not lose the base!";
const string destroySoviets = "Take control of french reinforcements and dismantle the nearby Soviet base.";
Player allies;
Player soviets;
Actor sovietEntryPoint1;
Actor sovietEntryPoint2;
Actor sovietEntryPoint3;
Actor sovietEntryPoint4;
Actor sovietEntryPoint5;
CPos[] sovietEntryPoints;
Actor sovietRallyPoint1;
Actor sovietRallyPoint2;
Actor sovietRallyPoint3;
Actor sovietRallyPoint4;
Actor sovietRallyPoint5;
CPos[] sovietRallyPoints;
Actor sovietinfantryentry1;
Actor sovietinfantryrally1;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor paraDrop1;
Actor paraDrop2;
Actor sovietEntryPoint7;
Actor alliesbase1;
Actor alliesbase2;
Actor alliesbase;
Actor sam1;
Actor sam2;
Actor barrack1;
World world;
CountdownTimer survivalTimer;
CountdownTimerWidget survivalTimerWidget;
int attackAtFrame;
int attackAtFrameIncrement;
int attackAtFrameInf;
int attackAtFrameIncrementInf;
const int paradropTicks = 750;
static readonly string[] badger1Passengers = { "e1", "e1", "e1", "e2", "e2" };
const int factoryClearRange = 10;
static readonly string[] squad1 = { "e1", "e1" };
static readonly string[] squad2 = { "e2", "e2" };
static readonly string[] sovietVehicles = { "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "ftrk", "ftrk", "apc", "apc" };
static readonly string[] sovietInfantry = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e4", "e4", "e3", };
static readonly string[] reinforcements = { "2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "1tnk", "1tnk", "1tnk", "arty", "arty", "arty", "jeep", "jeep" };
const int sovietAttackGroupSize = 5;
const int sovietInfantryGroupSize = 7;
const int timerTicks = 1500 * 25;
bool spawningSovietUnits = true;
bool spawningInfantry = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2824" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="119" endline="144">
<![CDATA[
}
if (world.FrameNumber == frameInfiltrated + 200)
{
Sound.Play("timergo1.aud");
destroyBaseTimer = new CountdownTimer(destroyBaseTicks, OnDestroyBaseTimerExpired, true);
destroyBaseTimerWidget = new CountdownTimerWidget(destroyBaseTimer, "Secure lab in
Ui.Root.AddChild(destroyBaseTimerWidget);
}
if (world.FrameNumber >= frameInfiltrated + 200)
destroyBaseTimer.Tick();
if (world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead())
{
bridgeTank.QueueActivity(new Attack(Target.FromPos(bridge.CenterLocation), 4));
attackingBridge = true;
}
if (attackingBridge && bridge.IsDead())
{
if (!bridgeTank.IsDead())
bridgeTank.CancelActivity();
attackingBridge = false;
}
if (world.FrameNumber == frameInfiltrated + 1500 * 6)
foreach (var attacker in townAttackers.Where(a => !a.IsDead() && a.IsInWorld))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="142" endline="152">
<![CDATA[
{
SetupAlliedBase(actorsInBase);
baseTransferredTick = world.FrameNumber;
objectives[FindOutpostID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
}
else if (superTankDomeInfiltratedTick == -1)
{
if (world.FrameNumber == baseTransferredTick + 25 * 100)
foreach (var tank in superTanks.Where(t => !t.IsDead() && t.IsInWorld))
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2825" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="272" endline="278">
<![CDATA[
}));
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(reinforcementsEntryPoint.Location));
self.QueueActivity(new RemoveSelf());
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="279" endline="333">
<![CDATA[
}));
lst.QueueActivity(new UnloadCargo(true));
lst.QueueActivity(new Transform(lst, "lst.unselectable.nocargo") { SkipMakeAnims = true });
}
class Patrol
{
Actor[] actors;
CPos[] points;
int pointIndex;
World world;
public Patrol(World world, string[] actorNames, Player owner, CPos[] points, int pointIndex)
{
this.world = world;
this.points = points;
this.pointIndex = pointIndex;
var td = new TypeDictionary { new OwnerInit(owner), new LocationInit(points[pointIndex]) };
actors = actorNames.Select(a => world.CreateActor(a, td)).ToArray();
}
public void DoPatrol()
{
if (actors.Any(a => a.IsDead() || !a.IsIdle || !a.IsInWorld)) return;
pointIndex = (pointIndex + 1) % points.Length;
foreach (var actor in actors.Where(a => !a.IsDead() && a.IsInWorld))
{
actor.QueueActivity(new Wait(world.SharedRandom.Next(50, 75)));
actor.QueueActivity(new AttackMove.AttackMoveActivity(actor, new Move.Move(points[pointIndex], 0)));
}
}
}
void InsertSpies()
{
var lst = world.CreateActor("lst.unselectable", new TypeDictionary
{
new OwnerInit(allies1),
new LocationInit(spyReinforcementsEntryPoint.Location)
});
allies1Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies1) });
lst.Trait<Cargo>().Load(lst, allies1Spy);
if (allies1 != allies2)
{
allies2Spy = world.CreateActor(false, "spy.strong", new TypeDictionary { new OwnerInit(allies2) });
lst.Trait<Cargo>().Load(lst, allies2Spy);
}
lst.AddTrait(new TransformedAction(self =>
{
self.QueueActivity(new Wait(10));
self.QueueActivity(new Move.Move(spyReinforcementsExitPoint.Location));
self.QueueActivity(new RemoveSelf());
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2826" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2827" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2828" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2829" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2830" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="344" endline="354">
<![CDATA[
actor.Trait<AutoTarget>().stance = UnitStance.Defend;
}
public void WorldLoaded(World w)
{
world = w;
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
allies1 = w.Players.Single(p => p.InternalName == "Allies1");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2831" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2832" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2833" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2834" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="356" endline="363">
<![CDATA[
allies1.PlayerActor.Trait<PlayerResources>().Cash = 0;
if (allies2 == null)
allies2 = allies1;
else
allies2.PlayerActor.Trait<PlayerResources>().Cash = 0;
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2835" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderUnit.cs" startline="34" endline="39">
<![CDATA[
public void PlayCustomAnimRepeating(Actor self, string name)
{
anim.PlayThen(name,
() => { PlayCustomAnimRepeating(self, name); });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderBuilding.cs" startline="90" endline="95">
<![CDATA[
public void PlayCustomAnimRepeating(Actor self, string name)
{
anim.PlayThen(NormalizeSequence(self, name),
() => { PlayCustomAnimRepeating(self, name); });
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2836" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderUnit.cs" startline="40" endline="45">
<![CDATA[
public void PlayCustomAnimBackwards(Actor self, string name, Action a)
{
anim.PlayBackwardsThen(name,
() => { anim.PlayRepeating("idle"); a(); });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderBuilding.cs" startline="96" endline="101">
<![CDATA[
public void PlayCustomAnimBackwards(Actor self, string name, Action a)
{
anim.PlayBackwardsThen(NormalizeSequence(self, name),
() => { anim.PlayRepeating(NormalizeSequence(self, "idle")); a(); });
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2837" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs" startline="540" endline="565">
<![CDATA[
public readonly string ToActor = null;
}
class Allies04TransformOnLabInfiltrate { }
class Allies04HazyPaletteEffectInfo
class Allies04HazyPaletteEffect
{
static readonly string[] ExcludePalettes = { "cursor", "chrome", "colorpicker", "fog", "shroud" };
public void AdjustPalette(Dictionary<string, Palette> palettes)
{
foreach (var pal in palettes)
{
if (ExcludePalettes.Contains(pal.Key))
continue;
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
}
foreach (var pal in palettes)
{
if (ExcludePalettes.Contains(pal.Key))
continue;
for (var x = 0; x < 256; x++)
{
var from = pal.Value.GetColor(x);
var to = Color.FromArgb(from.A, Color.FromKnownColor(KnownColor.DarkOrange));
pal.Value.SetColor(x, Exts.ColorLerp(0.15f, from, to));
}
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs" startline="35" endline="52">
<![CDATA[
public void AdjustPalette(Dictionary<string,Palette> palettes)
{
if (remainingFrames == 0)
return;
var frac = (float)remainingFrames / nukeEffectLength;
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var white = Color.FromArgb(orig.A, 255, 255, 255);
pal.Value.SetColor(x, Exts.ColorLerp(frac,orig,white));
}
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var white = Color.FromArgb(orig.A, 255, 255, 255);
pal.Value.SetColor(x, Exts.ColorLerp(frac,orig,white));
}
}
foreach (var pal in palettes)
{
for (var x = 0; x < 256; x++)
{
var orig = pal.Value.GetColor(x);
var white = Color.FromArgb(orig.A, 255, 255, 255);
pal.Value.SetColor(x, Exts.ColorLerp(frac,orig,white));
}
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2838" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2839" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2840" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2841" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2842" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2843" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2844" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2845" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2846" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2847" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2848" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2849" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2850" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2851" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="122" endline="227">
<![CDATA[
if (queue != null)
queue.ResolveOrder(queue.self, Order.StartProduction(queue.self, item, 1));
}
public static Actor UnitContaining(this World world, Actor actor)
{
return world.Actors.FirstOrDefault(a => a.HasTrait<Cargo>() && a.Trait<Cargo>().Passengers.Contains(actor));
}
public static void PlayMissionMusic()
{
if (!Rules.InstalledMusic.Any()) return;
Game.ConnectionStateChanged += StopMusic;
PlayMusic();
}
static void PlayMusic()
{
var track = Rules.InstalledMusic.Random(Game.CosmeticRandom);
Sound.PlayMusicThen(track.Value, PlayMusic);
}
static void StopMusic(OrderManager orderManager)
{
if (!orderManager.GameStarted)
{
Sound.StopMusic();
Game.ConnectionStateChanged -= StopMusic;
}
}
public static void CoopMissionAccomplished(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
player.WinState = WinState.Won;
if (text != null)
Game.AddChatLine(Color.Blue, "Mission accomplished", text);
Sound.Play("misnwon1.aud");
}
public static void CoopMissionFailed(World world, string text, params Player[] players)
{
if (players.First().WinState != WinState.Undefined)
return;
foreach (var player in players)
{
player.WinState = WinState.Lost;
foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == player && !a.IsDead()))
{
actor.Kill(actor);
}
}
if (text != null)
Game.AddChatLine(Color.Red, "Mission failed", text);
Sound.Play("misnlst1.aud");
}
public static Actor CreateActor(this World world, bool addToWorld, string name, Player owner, CPos? location, int? facing)
{
var td = new TypeDictionary { new OwnerInit(owner) };
if (location.HasValue)
td.Add(new LocationInit(location.Value));
if (facing.HasValue)
td.Add(new FacingInit(facing.Value));
return world.CreateActor(addToWorld, name, td);
}
public static Actor CreateActor(this World world, string name, Player owner, CPos? location, int? facing)
{
return CreateActor(world, true, name, owner, location, facing);
}
public static void CapOre(Player player)
{
var res = player.PlayerActor.Trait<PlayerResources>();
if (res.Ore > res.OreCapacity * 0.8)
res.Ore = (int)(res.OreCapacity * 0.8);
}
public static void AttackNearestLandActor(bool queued, Actor self, Player enemyPlayer)
{
var enemies = self.World.Actors.Where(u => u.AppearsHostileTo(self) && u.Owner == enemyPlayer
&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead());
var enemy = enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared).FirstOrDefault();
if (enemy != null)
self.QueueActivity(queued, new AttackMove.AttackMoveActivity(self, new Attack(Target.FromActor(enemy), 3)));
}
}
class TransformedAction
{
Action<Actor> a;
public TransformedAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2852" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2853" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2854" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2855" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2856" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2857" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2858" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2859" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2860" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2861" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2862" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2863" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2864" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs" startline="233" endline="242">
<![CDATA[
}
class InfiltrateAction
{
Action<Actor> a;
public InfiltrateAction(Action<Actor> a)
{
this.a = a;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2865" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2866" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2867" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2868" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2869" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2870" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2871" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2872" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="21" endline="25">
<![CDATA[
public CountdownTimerWidget(CountdownTimer timer, string format)
{
Timer = timer;
Format = format;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2873" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="26" endline="35">
<![CDATA[
public override void Draw()
{
if (!IsVisible()) return;
var font = Game.Renderer.Fonts["Bold"];
var text = Format.F(WidgetUtils.FormatTime(Timer.TicksLeft));
var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(text).X / 2, Game.viewport.Height * 0.1f);
font.DrawTextWithContrast(text, pos, Timer.TicksLeft <= 25 * 10 && Game.LocalTick % 50 < 25 ? Color.Red
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="43" endline="51">
<![CDATA[
public override void Draw()
{
if (!IsVisible()) return;
var font = Game.Renderer.Fonts["Bold"];
var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(Text).X / 2, Game.viewport.Height * 0.1f);
font.DrawTextWithContrast(Text, pos, Color.White, Color.Black, 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2874" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2875" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2876" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2877" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2878" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2879" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2880" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2881" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2882" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2883" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs" startline="36" endline="42">
<![CDATA[
}
public class InfoWidget
{
public string Text;
public InfoWidget(string text) { Text = text; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2884" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2885" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2886" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2887" semantic_similarity= "0.94" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2888" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2889" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2890" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2891" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2892" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2893" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2894" semantic_similarity= "0.91" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2895" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2896" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2897" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="23" endline="27">
<![CDATA[
public readonly string[] FirstStartUnits = null;
public readonly string[] SecondStartUnits = null;
public readonly string[] ThirdStartUnits = null;
public readonly string[] FirstBaseUnits = null;
public readonly string[] CivilianEvacuees = null;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2898" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="44" endline="110">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ FindOutpostID, new Objective(ObjectiveType.Primary, FindOutpost, ObjectiveStatus.InProgress) },
{ EvacuateDemitriID, new Objective(ObjectiveType.Primary, EvacuateDemitri, ObjectiveStatus.InProgress) },
{ InfiltrateRadarDomeID, new Objective(ObjectiveType.Primary, InfiltrateRadarDome, ObjectiveStatus.InProgress) },
};
const int FindOutpostID = 0;
const string FindOutpost = "Find our outpost and start repairs on it.";
const int EvacuateDemitriID = 1;
const string EvacuateDemitri = "Find and evacuate Dr. Demitri. He is missing -- likely hiding in the village to the far south.";
const int InfiltrateRadarDomeID = 2;
const string InfiltrateRadarDome = "Reprogram the Super Tanks by sending a spy into the Soviet radar dome.";
World world;
Player neutral;
Player greece;
Player ussr;
Player badGuy;
Player turkey;
Actor startEntryPoint;
Actor startMovePoint;
Actor startBridgeEndPoint;
Actor alliedBaseTopLeft;
Actor alliedBaseBottomRight;
Actor alliedBaseEntryPoint;
Actor alliedBaseMovePoint;
Actor demitriChurch;
Actor demitriChurchSpawnPoint;
Actor demitriTriggerAreaCenter;
Actor demitri;
Actor demitriLZ;
Actor demitriLZFlare;
Actor demitriChinook;
Actor provingGroundsCameraPoint;
Actor[] superTanks;
Actor hospital;
Actor hospitalCivilianSpawnPoint;
Actor hospitalSuperTankPoint;
Actor superTankDome;
bool hospitalEvacuated;
bool superTanksDestroyed;
int baseTransferredTick = -1;
int superTankDomeInfiltratedTick = -1;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, greece);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="31" endline="69">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.InProgress) }
};
const int DestroyID = 0;
const string Destroy = "A pitiful excuse for resistance has blockaded itself in this village."
+ " Stalin has decided to make an example of them. Kill them all and destroy their homes."
+ " You will have Yak aircraft to use in teaching these rebels a lesson.";
World world;
Player ussr;
Player france;
Actor startJeep;
Actor startJeepMovePoint;
Actor church;
bool startJeepParadropped;
bool churchParadropped;
Actor paradropPoint1;
Actor paradropEntryPoint1;
Actor paradropPoint2;
Actor paradropEntryPoint2;
Actor airfield1;
Actor airfield2;
Actor airfield3;
Actor[] airfields;
const string BadgerName = "badr";
static readonly string[] Reinforcements = { "e1", "e1", "e1", "e2", "e2" };
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, ussr);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2899" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="44" endline="110">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ FindOutpostID, new Objective(ObjectiveType.Primary, FindOutpost, ObjectiveStatus.InProgress) },
{ EvacuateDemitriID, new Objective(ObjectiveType.Primary, EvacuateDemitri, ObjectiveStatus.InProgress) },
{ InfiltrateRadarDomeID, new Objective(ObjectiveType.Primary, InfiltrateRadarDome, ObjectiveStatus.InProgress) },
};
const int FindOutpostID = 0;
const string FindOutpost = "Find our outpost and start repairs on it.";
const int EvacuateDemitriID = 1;
const string EvacuateDemitri = "Find and evacuate Dr. Demitri. He is missing -- likely hiding in the village to the far south.";
const int InfiltrateRadarDomeID = 2;
const string InfiltrateRadarDome = "Reprogram the Super Tanks by sending a spy into the Soviet radar dome.";
World world;
Player neutral;
Player greece;
Player ussr;
Player badGuy;
Player turkey;
Actor startEntryPoint;
Actor startMovePoint;
Actor startBridgeEndPoint;
Actor alliedBaseTopLeft;
Actor alliedBaseBottomRight;
Actor alliedBaseEntryPoint;
Actor alliedBaseMovePoint;
Actor demitriChurch;
Actor demitriChurchSpawnPoint;
Actor demitriTriggerAreaCenter;
Actor demitri;
Actor demitriLZ;
Actor demitriLZFlare;
Actor demitriChinook;
Actor provingGroundsCameraPoint;
Actor[] superTanks;
Actor hospital;
Actor hospitalCivilianSpawnPoint;
Actor hospitalSuperTankPoint;
Actor superTankDome;
bool hospitalEvacuated;
bool superTanksDestroyed;
int baseTransferredTick = -1;
int superTankDomeInfiltratedTick = -1;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, greece);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="30" endline="104">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ maintainPresenceID, new Objective(ObjectiveType.Primary, maintainPresence, ObjectiveStatus.InProgress) },
{ destroySovietsID, new Objective(ObjectiveType.Primary, destroySoviets, ObjectiveStatus.Inactive) }
};
const int maintainPresenceID = 0;
const int destroySovietsID = 1;
const string maintainPresence = "Enforce your position and hold-out the onslaught until reinforcements arrive. We must not lose the base!";
const string destroySoviets = "Take control of french reinforcements and dismantle the nearby Soviet base.";
Player allies;
Player soviets;
Actor sovietEntryPoint1;
Actor sovietEntryPoint2;
Actor sovietEntryPoint3;
Actor sovietEntryPoint4;
Actor sovietEntryPoint5;
CPos[] sovietEntryPoints;
Actor sovietRallyPoint1;
Actor sovietRallyPoint2;
Actor sovietRallyPoint3;
Actor sovietRallyPoint4;
Actor sovietRallyPoint5;
CPos[] sovietRallyPoints;
Actor sovietinfantryentry1;
Actor sovietinfantryrally1;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor paraDrop1;
Actor paraDrop2;
Actor sovietEntryPoint7;
Actor alliesbase1;
Actor alliesbase2;
Actor alliesbase;
Actor sam1;
Actor sam2;
Actor barrack1;
World world;
CountdownTimer survivalTimer;
CountdownTimerWidget survivalTimerWidget;
int attackAtFrame;
int attackAtFrameIncrement;
int attackAtFrameInf;
int attackAtFrameIncrementInf;
const int paradropTicks = 750;
static readonly string[] badger1Passengers = { "e1", "e1", "e1", "e2", "e2" };
const int factoryClearRange = 10;
static readonly string[] squad1 = { "e1", "e1" };
static readonly string[] squad2 = { "e2", "e2" };
static readonly string[] sovietVehicles = { "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "ftrk", "ftrk", "apc", "apc" };
static readonly string[] sovietInfantry = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e4", "e4", "e3", };
static readonly string[] reinforcements = { "2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "1tnk", "1tnk", "1tnk", "arty", "arty", "arty", "jeep", "jeep" };
const int sovietAttackGroupSize = 5;
const int sovietInfantryGroupSize = 7;
const int timerTicks = 1500 * 25;
bool spawningSovietUnits = true;
bool spawningInfantry = true;
string difficulty;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2900" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="264" endline="271">
<![CDATA[
void SpawnAndMoveBridgeUnits(string[] units)
{
Sound.Play("reinfor1.aud");
foreach (var unit in units)
world.CreateActor(unit, greece, startEntryPoint.Location, Util.GetFacing(startBridgeEndPoint.CenterLocation - startEntryPoint.CenterLocation, 0))
foreach (var unit in units)
world.CreateActor(unit, greece, startEntryPoint.Location, Util.GetFacing(startBridgeEndPoint.CenterLocation - startEntryPoint.CenterLocation, 0))
.QueueActivity(new Move.Move(startMovePoint.Location, 0));
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="272" endline="279">
<![CDATA[
void SpawnAndMoveAlliedBaseUnits(string[] units)
{
Sound.Play("reinfor1.aud");
foreach (var unit in units)
world.CreateActor(unit, greece, alliedBaseEntryPoint.Location, Util.GetFacing(alliedBaseMovePoint.CenterLocation - alliedBaseEntryPoint.CenterLocation, 0))
foreach (var unit in units)
world.CreateActor(unit, greece, alliedBaseEntryPoint.Location, Util.GetFacing(alliedBaseMovePoint.CenterLocation - alliedBaseEntryPoint.CenterLocation, 0))
.QueueActivity(new Move.Move(alliedBaseMovePoint.Location, 0));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2901" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2902" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2903" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs" startline="297" endline="309">
<![CDATA[
MissionUtils.AttackNearestLandActor(false, tank, ussr);
superTankDomeInfiltratedTick = world.FrameNumber;
objectives[InfiltrateRadarDomeID].Status = ObjectiveStatus.Completed;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
neutral = w.Players.Single(p => p.InternalName == "Neutral");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2904" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="23" endline="28">
<![CDATA[
public Objective(ObjectiveType type, string text, ObjectiveStatus status)
{
Type = type;
Text = text;
Status = status;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="32" endline="41">
<![CDATA[
public ProximityCapturableInfo Info;
public Actor Self;
public ProximityCapturable(Actor self, ProximityCapturableInfo info)
{
Info = info;
Self = self;
OriginalOwner = self.Owner;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2905" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="29" endline="43">
<![CDATA[
}
public enum ObjectiveType { Primary, Secondary }
public enum ObjectiveStatus { Inactive, InProgress, Completed, Failed }
public interface IHasObjectives
{
event Action<bool> OnObjectivesUpdated;
IEnumerable<Objective> Objectives { get; }
}
public class MissionObjectivesPanelInfo
{
public string ObjectivesPanel = null;
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="29" endline="185">
<![CDATA[
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.InProgress) }
};
const int DestroyID = 0;
const string Destroy = "A pitiful excuse for resistance has blockaded itself in this village."
+ " Stalin has decided to make an example of them. Kill them all and destroy their homes."
+ " You will have Yak aircraft to use in teaching these rebels a lesson.";
World world;
Player ussr;
Player france;
Actor startJeep;
Actor startJeepMovePoint;
Actor church;
bool startJeepParadropped;
bool churchParadropped;
Actor paradropPoint1;
Actor paradropEntryPoint1;
Actor paradropPoint2;
Actor paradropEntryPoint2;
Actor airfield1;
Actor airfield2;
Actor airfield3;
Actor[] airfields;
const string BadgerName = "badr";
static readonly string[] Reinforcements = { "e1", "e1", "e1", "e2", "e2" };
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, ussr);
}
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, ussr);
}
public void Tick(Actor self)
{
if (ussr.WinState != WinState.Undefined) return;
var unitsAndBuildings = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && (a.HasTrait<Mobile>() || (a.HasTrait<Building>() && !a.HasTrait<Wall>())));
if (!unitsAndBuildings.Any(a => a.Owner == france))
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
MissionAccomplished("We destroyed the resistance.");
}
else if (!unitsAndBuildings.Any(a => a.Owner == ussr))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
MissionFailed("We were destroyed by the resistance.");
}
if (!startJeepParadropped && startJeep.IsDead())
{
Sound.Play("reinfor1.aud");
MissionUtils.Paradrop(world, ussr, Reinforcements, paradropEntryPoint1.Location, paradropPoint1.Location);
startJeepParadropped = true;
}
if (!churchParadropped && church.IsDead())
{
Sound.Play("reinfor1.aud");
MissionUtils.Paradrop(world, ussr, Reinforcements, paradropEntryPoint2.Location, paradropPoint2.Location);
churchParadropped = true;
}
}
void LandYaks()
{
foreach (var airfield in airfields)
{
var entry = airfield.Location - new CVec(10, 0);
var yak = world.CreateActor("yak", new TypeDictionary
{
new OwnerInit(ussr),
new LocationInit(entry),
new FacingInit(Util.GetFacing(airfield.Location - entry, 0)),
new AltitudeInit(Rules.Info["yak"].Traits.Get<PlaneInfo>().CruiseAltitude)
});
while (yak.Trait<LimitedAmmo>().TakeAmmo()) { }
yak.QueueActivity(new ReturnToBase(yak, airfield));
yak.QueueActivity(new ResupplyAircraft());
}
}
void MoveJeep()
{
startJeep.QueueActivity(new Move.Move(startJeepMovePoint.Location, 0));
startJeep.QueueActivity(new Turn(128));
startJeep.QueueActivity(new CallFunc(() =>
{
var bridge = world.Actors
.Where(a => a.HasTrait<Bridge>() && !a.IsDead())
.OrderBy(a => (startJeep.CenterLocation - a.CenterLocation).LengthSquared)
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
france = w.Players.Single(p => p.InternalName == "France");
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
startJeep = actors["StartJeep"];
startJeepMovePoint = actors["StartJeepMovePoint"];
paradropPoint1 = actors["ParadropPoint1"];
paradropEntryPoint1 = actors["ParadropEntryPoint1"];
paradropPoint2 = actors["ParadropPoint2"];
paradropEntryPoint2 = actors["ParadropEntryPoint2"];
church = actors["Church"];
airfield1 = actors["Airfield1"];
airfield2 = actors["Airfield2"];
airfield3 = actors["Airfield3"];
airfields = new[] { airfield1, airfield2, airfield3 };
Game.MoveViewport(startJeep.Location.ToFloat2());
if (w.LobbyInfo.IsSinglePlayer)
{
Media.PlayFMVFullscreen(w, "soviet1.vqa", () =>
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
});
}
else
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
}
}
}
class Soviet01ClassicContainsActorsInfo
{
public readonly string[] Actors = { };
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2906" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="29" endline="43">
<![CDATA[
}
public enum ObjectiveType { Primary, Secondary }
public enum ObjectiveStatus { Inactive, InProgress, Completed, Failed }
public interface IHasObjectives
{
event Action<bool> OnObjectivesUpdated;
IEnumerable<Objective> Objectives { get; }
}
public class MissionObjectivesPanelInfo
{
public string ObjectivesPanel = null;
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\TechTree.cs" startline="62" endline="124">
<![CDATA[
if (player == null)
return ret;
foreach (var b in player.World.ActorsWithTrait<ITechTreePrerequisite>()
.Where(a => a.Actor.IsInWorld && !a.Actor.IsDead() && a.Actor.Owner == player))
foreach (var p in b.Trait.ProvidesPrerequisites)
ret[ p ].Add( b.Actor );
player.World.ActorsWithTrait<Buildable>()
.Where(a => a.Actor.Info.Traits.Get<BuildableInfo>().BuildLimit > 0 && !a.Actor.IsDead() && a.Actor.Owner == player && ret.Keys.All(k => k != a.Actor.Info.Name))
.ToList()
.ForEach(b => ret[b.Actor.Info.Name].Add(b.Actor));
return ret;
}
class Watcher
{
public readonly string key;
public readonly string[] prerequisites;
public readonly ITechTreeElement watcher;
bool hasPrerequisites;
int buildLimit;
public Watcher(string key, BuildableInfo info, ITechTreeElement watcher)
{
this.key = key;
this.prerequisites = info.Prerequisites;
this.watcher = watcher;
this.hasPrerequisites = false;
this.buildLimit = info.BuildLimit;
}
bool HasPrerequisites(Cache<string, List<Actor>> buildables)
{
return prerequisites.All(p => !(p.StartsWith("!") ^ !buildables.Keys.Contains(p.Replace("!", ""))));
}
public void Update(Cache<string, List<Actor>> buildables)
{
var hasReachedBuildLimit = buildLimit > 0 && buildables[key].Count >= buildLimit;
var nowHasPrerequisites = HasPrerequisites(buildables) && !hasReachedBuildLimit;
if( nowHasPrerequisites && !hasPrerequisites )
watcher.PrerequisitesAvailable(key);
if( !nowHasPrerequisites && hasPrerequisites )
watcher.PrerequisitesUnavailable(key);
hasPrerequisites = nowHasPrerequisites;
}
}
}
public class ProvidesCustomPrerequisiteInfo
{
public readonly string Prerequisite;
public object Create(ActorInitializer init) { return new ProvidesCustomPrerequisite(this);}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2907" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2908" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2909" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2910" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2911" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2912" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2913" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2914" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2915" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2916" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2917" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Objective.cs" startline="43" endline="49">
<![CDATA[
public object Create(ActorInitializer init) { return new MissionObjectivesPanel(this); }
}
public class MissionObjectivesPanel
{
MissionObjectivesPanelInfo info;
public MissionObjectivesPanel(MissionObjectivesPanelInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2918" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="31" endline="69">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.InProgress) }
};
const int DestroyID = 0;
const string Destroy = "A pitiful excuse for resistance has blockaded itself in this village."
+ " Stalin has decided to make an example of them. Kill them all and destroy their homes."
+ " You will have Yak aircraft to use in teaching these rebels a lesson.";
World world;
Player ussr;
Player france;
Actor startJeep;
Actor startJeepMovePoint;
Actor church;
bool startJeepParadropped;
bool churchParadropped;
Actor paradropPoint1;
Actor paradropEntryPoint1;
Actor paradropPoint2;
Actor paradropEntryPoint2;
Actor airfield1;
Actor airfield2;
Actor airfield3;
Actor[] airfields;
const string BadgerName = "badr";
static readonly string[] Reinforcements = { "e1", "e1", "e1", "e2", "e2" };
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, ussr);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="30" endline="104">
<![CDATA[
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ maintainPresenceID, new Objective(ObjectiveType.Primary, maintainPresence, ObjectiveStatus.InProgress) },
{ destroySovietsID, new Objective(ObjectiveType.Primary, destroySoviets, ObjectiveStatus.Inactive) }
};
const int maintainPresenceID = 0;
const int destroySovietsID = 1;
const string maintainPresence = "Enforce your position and hold-out the onslaught until reinforcements arrive. We must not lose the base!";
const string destroySoviets = "Take control of french reinforcements and dismantle the nearby Soviet base.";
Player allies;
Player soviets;
Actor sovietEntryPoint1;
Actor sovietEntryPoint2;
Actor sovietEntryPoint3;
Actor sovietEntryPoint4;
Actor sovietEntryPoint5;
CPos[] sovietEntryPoints;
Actor sovietRallyPoint1;
Actor sovietRallyPoint2;
Actor sovietRallyPoint3;
Actor sovietRallyPoint4;
Actor sovietRallyPoint5;
CPos[] sovietRallyPoints;
Actor sovietinfantryentry1;
Actor sovietinfantryrally1;
Actor badgerEntryPoint1;
Actor badgerEntryPoint2;
Actor paraDrop1;
Actor paraDrop2;
Actor sovietEntryPoint7;
Actor alliesbase1;
Actor alliesbase2;
Actor alliesbase;
Actor sam1;
Actor sam2;
Actor barrack1;
World world;
CountdownTimer survivalTimer;
CountdownTimerWidget survivalTimerWidget;
int attackAtFrame;
int attackAtFrameIncrement;
int attackAtFrameInf;
int attackAtFrameIncrementInf;
const int paradropTicks = 750;
static readonly string[] badger1Passengers = { "e1", "e1", "e1", "e2", "e2" };
const int factoryClearRange = 10;
static readonly string[] squad1 = { "e1", "e1" };
static readonly string[] squad2 = { "e2", "e2" };
static readonly string[] sovietVehicles = { "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "3tnk", "v2rl", "v2rl", "ftrk", "ftrk", "ftrk", "apc", "apc" };
static readonly string[] sovietInfantry = { "e1", "e1", "e1", "e1", "e2", "e2", "e2", "e4", "e4", "e3", };
static readonly string[] reinforcements = { "2tnk", "2tnk", "2tnk", "2tnk", "2tnk", "1tnk", "1tnk", "1tnk", "arty", "arty", "arty", "jeep", "jeep" };
const int sovietAttackGroupSize = 5;
const int sovietInfantryGroupSize = 7;
const int timerTicks = 1500 * 25;
bool spawningSovietUnits = true;
bool spawningInfantry = true;
string difficulty;
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, allies);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2919" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2920" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="134" endline="145">
<![CDATA[
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2921" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="29" endline="185">
<![CDATA[
public IEnumerable<Objective> Objectives { get { return objectives.Values; } }
Dictionary<int, Objective> objectives = new Dictionary<int, Objective>
{
{ DestroyID, new Objective(ObjectiveType.Primary, Destroy, ObjectiveStatus.InProgress) }
};
const int DestroyID = 0;
const string Destroy = "A pitiful excuse for resistance has blockaded itself in this village."
+ " Stalin has decided to make an example of them. Kill them all and destroy their homes."
+ " You will have Yak aircraft to use in teaching these rebels a lesson.";
World world;
Player ussr;
Player france;
Actor startJeep;
Actor startJeepMovePoint;
Actor church;
bool startJeepParadropped;
bool churchParadropped;
Actor paradropPoint1;
Actor paradropEntryPoint1;
Actor paradropPoint2;
Actor paradropEntryPoint2;
Actor airfield1;
Actor airfield2;
Actor airfield3;
Actor[] airfields;
const string BadgerName = "badr";
static readonly string[] Reinforcements = { "e1", "e1", "e1", "e2", "e2" };
void MissionAccomplished(string text)
{
MissionUtils.CoopMissionAccomplished(world, text, ussr);
}
void MissionFailed(string text)
{
MissionUtils.CoopMissionFailed(world, text, ussr);
}
public void Tick(Actor self)
{
if (ussr.WinState != WinState.Undefined) return;
var unitsAndBuildings = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && (a.HasTrait<Mobile>() || (a.HasTrait<Building>() && !a.HasTrait<Wall>())));
if (!unitsAndBuildings.Any(a => a.Owner == france))
{
objectives[DestroyID].Status = ObjectiveStatus.Completed;
MissionAccomplished("We destroyed the resistance.");
}
else if (!unitsAndBuildings.Any(a => a.Owner == ussr))
{
objectives[DestroyID].Status = ObjectiveStatus.Failed;
MissionFailed("We were destroyed by the resistance.");
}
if (!startJeepParadropped && startJeep.IsDead())
{
Sound.Play("reinfor1.aud");
MissionUtils.Paradrop(world, ussr, Reinforcements, paradropEntryPoint1.Location, paradropPoint1.Location);
startJeepParadropped = true;
}
if (!churchParadropped && church.IsDead())
{
Sound.Play("reinfor1.aud");
MissionUtils.Paradrop(world, ussr, Reinforcements, paradropEntryPoint2.Location, paradropPoint2.Location);
churchParadropped = true;
}
}
void LandYaks()
{
foreach (var airfield in airfields)
{
var entry = airfield.Location - new CVec(10, 0);
var yak = world.CreateActor("yak", new TypeDictionary
{
new OwnerInit(ussr),
new LocationInit(entry),
new FacingInit(Util.GetFacing(airfield.Location - entry, 0)),
new AltitudeInit(Rules.Info["yak"].Traits.Get<PlaneInfo>().CruiseAltitude)
});
while (yak.Trait<LimitedAmmo>().TakeAmmo()) { }
yak.QueueActivity(new ReturnToBase(yak, airfield));
yak.QueueActivity(new ResupplyAircraft());
}
}
void MoveJeep()
{
startJeep.QueueActivity(new Move.Move(startJeepMovePoint.Location, 0));
startJeep.QueueActivity(new Turn(128));
startJeep.QueueActivity(new CallFunc(() =>
{
var bridge = world.Actors
.Where(a => a.HasTrait<Bridge>() && !a.IsDead())
.OrderBy(a => (startJeep.CenterLocation - a.CenterLocation).LengthSquared)
.First();
Combat.DoExplosion(bridge, "Demolish", bridge.CenterLocation, 0);
world.WorldActor.Trait<ScreenShaker>().AddEffect(15, bridge.CenterLocation.ToFloat2(), 6);
bridge.Kill(bridge);
}));
}
public void WorldLoaded(World w)
{
world = w;
ussr = w.Players.Single(p => p.InternalName == "USSR");
france = w.Players.Single(p => p.InternalName == "France");
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
startJeep = actors["StartJeep"];
startJeepMovePoint = actors["StartJeepMovePoint"];
paradropPoint1 = actors["ParadropPoint1"];
paradropEntryPoint1 = actors["ParadropEntryPoint1"];
paradropPoint2 = actors["ParadropPoint2"];
paradropEntryPoint2 = actors["ParadropEntryPoint2"];
church = actors["Church"];
airfield1 = actors["Airfield1"];
airfield2 = actors["Airfield2"];
airfield3 = actors["Airfield3"];
airfields = new[] { airfield1, airfield2, airfield3 };
Game.MoveViewport(startJeep.Location.ToFloat2());
if (w.LobbyInfo.IsSinglePlayer)
{
Media.PlayFMVFullscreen(w, "soviet1.vqa", () =>
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
});
}
else
{
LandYaks();
MoveJeep();
MissionUtils.PlayMissionMusic();
}
}
}
class Soviet01ClassicContainsActorsInfo
{
public readonly string[] Actors = { };
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\TechTree.cs" startline="62" endline="124">
<![CDATA[
if (player == null)
return ret;
foreach (var b in player.World.ActorsWithTrait<ITechTreePrerequisite>()
.Where(a => a.Actor.IsInWorld && !a.Actor.IsDead() && a.Actor.Owner == player))
foreach (var p in b.Trait.ProvidesPrerequisites)
ret[ p ].Add( b.Actor );
player.World.ActorsWithTrait<Buildable>()
.Where(a => a.Actor.Info.Traits.Get<BuildableInfo>().BuildLimit > 0 && !a.Actor.IsDead() && a.Actor.Owner == player && ret.Keys.All(k => k != a.Actor.Info.Name))
.ToList()
.ForEach(b => ret[b.Actor.Info.Name].Add(b.Actor));
return ret;
}
class Watcher
{
public readonly string key;
public readonly string[] prerequisites;
public readonly ITechTreeElement watcher;
bool hasPrerequisites;
int buildLimit;
public Watcher(string key, BuildableInfo info, ITechTreeElement watcher)
{
this.key = key;
this.prerequisites = info.Prerequisites;
this.watcher = watcher;
this.hasPrerequisites = false;
this.buildLimit = info.BuildLimit;
}
bool HasPrerequisites(Cache<string, List<Actor>> buildables)
{
return prerequisites.All(p => !(p.StartsWith("!") ^ !buildables.Keys.Contains(p.Replace("!", ""))));
}
public void Update(Cache<string, List<Actor>> buildables)
{
var hasReachedBuildLimit = buildLimit > 0 && buildables[key].Count >= buildLimit;
var nowHasPrerequisites = HasPrerequisites(buildables) && !hasReachedBuildLimit;
if( nowHasPrerequisites && !hasPrerequisites )
watcher.PrerequisitesAvailable(key);
if( !nowHasPrerequisites && hasPrerequisites )
watcher.PrerequisitesUnavailable(key);
hasPrerequisites = nowHasPrerequisites;
}
}
}
public class ProvidesCustomPrerequisiteInfo
{
public readonly string Prerequisite;
public object Create(ActorInitializer init) { return new ProvidesCustomPrerequisite(this);}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2922" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2923" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2924" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2925" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2926" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2927" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2928" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2929" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2930" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2931" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs" startline="184" endline="196">
<![CDATA[
public object Create(ActorInitializer init) { return new Soviet01ClassicContainsActors(this); }
}
class Soviet01ClassicContainsActors
{
bool spawned;
Soviet01ClassicContainsActorsInfo info;
public Soviet01ClassicContainsActors(Soviet01ClassicContainsActorsInfo info)
{
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2932" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="168" endline="176">
<![CDATA[
void SendSquad1()
{
for (int i = 0; i < squad1.Length; i++)
{
var actor = world.CreateActor(squad1[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase1.Location + new CVec(-2 + i, -6 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase1.Location));
}
for (int i = 0; i < squad1.Length; i++)
{
var actor = world.CreateActor(squad1[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase1.Location + new CVec(-2 + i, -6 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase1.Location));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="177" endline="185">
<![CDATA[
void SendSquad2()
{
for (int i = 0; i < squad2.Length; i++)
{
var actor = world.CreateActor(squad2[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase2.Location + new CVec(-9 + i, -2 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase2.Location));
}
for (int i = 0; i < squad2.Length; i++)
{
var actor = world.CreateActor(squad2[i], new TypeDictionary { new OwnerInit(soviets), new LocationInit(alliesbase2.Location + new CVec(-9 + i, -2 + i * 2)) });
actor.QueueActivity(new Move.Move(alliesbase2.Location));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2933" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="244" endline="285">
<![CDATA[
foreach (var unit in scatteredUnits)
{
AttackNearestAlliedActor(unit);
}
}
void StartCountDownTimer()
{
Sound.Play("timergo1.aud");
survivalTimer = new CountdownTimer(timerTicks, CountDownTimerExpired, true);
survivalTimerWidget = new CountdownTimerWidget(survivalTimer, "Survive
Ui.Root.AddChild(survivalTimerWidget);
}
void SendReinforcements()
{
foreach (var unit in reinforcements)
{
var u = world.CreateActor(unit, new TypeDictionary
{
new LocationInit(sovietEntryPoint7.Location),
new FacingInit(0),
new OwnerInit(allies)
});
u.QueueActivity(new Move.Move(alliesbase.Location));
}
}
void CountDownTimerExpired(CountdownTimer countDownTimer)
{
survivalTimerWidget.Visible = false;
SendReinforcements();
objectives[maintainPresenceID].Status = ObjectiveStatus.Completed;
objectives[destroySovietsID].Status = ObjectiveStatus.InProgress;
OnObjectivesUpdated(true);
}
public void WorldLoaded(World w)
{
world = w;
allies = w.Players.SingleOrDefault(p => p.InternalName == "Allies");
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="286" endline="313">
<![CDATA[
if (allies != null)
{
attackAtFrameInf = 300;
attackAtFrameIncrementInf = 300;
attackAtFrame = 450;
attackAtFrameIncrement = 450;
}
difficulty = w.LobbyInfo.GlobalSettings.Difficulty;
Game.Debug("{0} difficulty selected".F(difficulty));
switch (difficulty)
{
case "Hard"
attackAtFrameIncrement = 350;
attackAtFrameIncrementInf = 200;
break;
case "Normal"
attackAtFrameIncrement = 450;
attackAtFrameIncrementInf = 300;
break;
case "Easy"
attackAtFrameIncrement = 550;
attackAtFrameIncrementInf = 400;
break;
}
soviets = w.Players.Single(p => p.InternalName == "Soviets");
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2934" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="314" endline="320">
<![CDATA[
var actors = w.WorldActor.Trait<SpawnMapActors>().Actors;
sovietEntryPoint1 = actors["sovietEntryPoint1"];
sovietEntryPoint2 = actors["sovietEntryPoint2"];
sovietEntryPoint3 = actors["sovietEntryPoint3"];
sovietEntryPoint4 = actors["sovietEntryPoint4"];
sovietEntryPoint5 = actors["sovietEntryPoint5"];
sovietEntryPoints = new[] { sovietEntryPoint1, sovietEntryPoint2, sovietEntryPoint3, sovietEntryPoint4, sovietEntryPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs" startline="321" endline="326">
<![CDATA[
sovietRallyPoint1 = actors["sovietRallyPoint1"];
sovietRallyPoint2 = actors["sovietRallyPoint2"];
sovietRallyPoint3 = actors["sovietRallyPoint3"];
sovietRallyPoint4 = actors["sovietRallyPoint4"];
sovietRallyPoint5 = actors["sovietRallyPoint5"];
sovietRallyPoints = new[] { sovietRallyPoint1, sovietRallyPoint2, sovietRallyPoint3, sovietRallyPoint4, sovietRallyPoint5 }.Select(p => p.Location).ToArray();
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2935" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Modifiers\FrozenUnderFog.cs" startline="26" endline="33">
<![CDATA[
Renderable[] cache = { };
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
if (IsVisible(self, self.World.RenderPlayer))
cache = r.ToArray();
return cache;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Modifiers\HiddenUnderFog.cs" startline="26" endline="31">
<![CDATA[
static Renderable[] Nothing = { };
public IEnumerable<Renderable> ModifyRender(Actor self, WorldRenderer wr, IEnumerable<Renderable> r)
{
return IsVisible(self, self.World.RenderPlayer) ? r
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2936" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Mobile.cs" startline="376" endline="386">
<![CDATA[
public void EnteringCell(Actor self)
{
var crushable = self.World.ActorMap.GetUnitsAt(toCell).Where(a => a != self && a.HasTrait<ICrushable>());
foreach (var a in crushable)
{
var crushActions = a.TraitsImplementing<ICrushable>().Where(b => b.CrushableBy(Info.Crushes, self.Owner));
foreach (var b in crushActions)
b.WarnCrush(self);
foreach (var b in crushActions)
b.WarnCrush(self);
}
foreach (var a in crushable)
{
var crushActions = a.TraitsImplementing<ICrushable>().Where(b => b.CrushableBy(Info.Crushes, self.Owner));
foreach (var b in crushActions)
b.WarnCrush(self);
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Mobile.cs" startline="387" endline="397">
<![CDATA[
public void FinishedMoving(Actor self)
{
var crushable = self.World.ActorMap.GetUnitsAt(toCell).Where(a => a != self && a.HasTrait<ICrushable>());
foreach (var a in crushable)
{
var crushActions = a.TraitsImplementing<ICrushable>().Where(b => b.CrushableBy(Info.Crushes, self.Owner));
foreach (var b in crushActions)
b.OnCrush(self);
foreach (var b in crushActions)
b.OnCrush(self);
}
foreach (var a in crushable)
{
var crushActions = a.TraitsImplementing<ICrushable>().Where(b => b.CrushableBy(Info.Crushes, self.Owner));
foreach (var b in crushActions)
b.OnCrush(self);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2937" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Move.cs" startline="31" endline="39">
<![CDATA[
public Move(CPos destination)
{
this.getPath = (self,mobile) =>
self.World.WorldActor.Trait<PathFinder>().FindPath(
PathSearch.FromPoint( self.World, mobile.Info, self, mobile.toCell, destination, false )
.WithoutLaneBias());
this.destination = destination;
this.nearEnough = 0;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Move\Move.cs" startline="40" endline="46">
<![CDATA[
public Move(CPos destination, int nearEnough)
{
this.getPath = (self,mobile) => self.World.WorldActor.Trait<PathFinder>().FindUnitPath( mobile.toCell, destination, self );
this.destination = destination;
this.nearEnough = nearEnough;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2938" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs" startline="29" endline="34">
<![CDATA[
public void Tick(Actor self)
{
if (remainingFrames > 0)
remainingFrames--;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="42" endline="47">
<![CDATA[
public void Tick(Actor self)
{
if (progress > 0)
progress--;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2939" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2940" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2941" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2942" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2943" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2944" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2945" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2946" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2947" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\LoadWidgetAtGameStart.cs" startline="20" endline="29">
<![CDATA[
public object Create(ActorInitializer init) { return new LoadWidgetAtGameStart(this); }
}
public class LoadWidgetAtGameStart
{
readonly LoadWidgetAtGameStartInfo Info;
public LoadWidgetAtGameStart(LoadWidgetAtGameStartInfo Info)
{
this.Info = Info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2948" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2949" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2950" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2951" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2952" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2953" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2954" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="24" endline="28">
<![CDATA[
public GlobalButtonOrderGenerator(string cursor, string order)
{
this.cursor = cursor;
this.order = order;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2955" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="29" endline="36">
<![CDATA[
public IEnumerable<Order> Order(World world, CPos xy, MouseInput mi)
{
if (mi.Button == MouseButton.Right)
world.CancelInputMode();
return OrderInner(world, xy, mi);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\RepairOrderGenerator.cs" startline="22" endline="27">
<![CDATA[
{
if (mi.Button == MouseButton.Right)
world.CancelInputMode();
return OrderInner(world, xy, mi);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2956" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="37" endline="56">
<![CDATA[
IEnumerable<Order> OrderInner(World world, CPos xy, MouseInput mi)
{
if (mi.Button == MouseButton.Left)
{
var underCursor = world.FindUnitsAtMouse(mi.Location)
.Where(a => a.Owner == world.LocalPlayer
&& a.HasTrait<T>()).FirstOrDefault();
if (underCursor != null)
yield return new Order(order, underCursor, false);
}
}
public void Tick(World world)
{
if (world.LocalPlayer != null &&
world.LocalPlayer.WinState != WinState.Undefined)
world.CancelInputMode();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\RepairOrderGenerator.cs" startline="28" endline="50">
<![CDATA[
IEnumerable<Order> OrderInner(World world, CPos xy, MouseInput mi)
{
if (mi.Button == MouseButton.Left)
{
var underCursor = world.FindUnitsAtMouse(mi.Location)
.Where(a => a.AppearsFriendlyTo(world.LocalPlayer.PlayerActor) && a.HasTrait<RepairableBuilding>()).FirstOrDefault();
if (underCursor == null)
yield break;
if (underCursor.Info.Traits.Contains<RepairableBuildingInfo>()
&& underCursor.GetDamageState() > DamageState.Undamaged)
yield return new Order("RepairBuilding", world.LocalPlayer.PlayerActor, false) { TargetActor = underCursor };
}
}
public void Tick(World world)
{
if (world.LocalPlayer != null &&
world.LocalPlayer.WinState != WinState.Undefined)
world.CancelInputMode();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2957" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\PowerDownOrderGenerator.cs" startline="60" endline="65">
<![CDATA[
public string GetCursor(World world, CPos xy, MouseInput mi)
{
mi.Button = MouseButton.Left;
return cursor + (OrderInner(world, xy, mi).Any()	? ""
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Orders\RepairOrderGenerator.cs" startline="54" endline="60">
<![CDATA[
public string GetCursor(World world, CPos xy, MouseInput mi)
{
mi.Button = MouseButton.Left;
return OrderInner(world, xy, mi).Any()
? "repair"
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2958" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2959" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2960" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2961" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2962" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2963" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2964" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2965" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2966" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2967" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\OreRefinery.cs" startline="22" endline="28">
<![CDATA[
public readonly int2 DockOffset = new int2(1, 2);
public readonly bool ShowTicks = true;
public readonly int TickLifetime = 30;
public readonly int TickVelocity = 2;
public readonly int TickRate = 10;
public readonly int DockAngle = 64;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2968" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2969" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2970" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2971" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2972" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2973" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2974" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2975" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="18" endline="22">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow.")]
public readonly int[] ShadowIndex = { };
[Desc("Apply palette rotatotors or not.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2976" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2977" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2978" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2979" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2980" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2981" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="23" endline="37">
<![CDATA[
public readonly bool AllowModifiers = true;
public object Create(ActorInitializer init) { return new PlayerPaletteFromCurrentTileset(init.world, this); }
}
class PlayerPaletteFromCurrentTileset
{
readonly World world;
readonly PlayerPaletteFromCurrentTilesetInfo info;
public PlayerPaletteFromCurrentTileset(World world, PlayerPaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2982" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PlayerPaletteFromCurrentTileset.cs" startline="38" endline="43">
<![CDATA[
public void InitPalette (OpenRA.Graphics.WorldRenderer wr)
{
string Filename = world.TileSet.PlayerPalette == null ? world.TileSet.Palette
wr.AddPalette(info.Name, new Palette(FileSystem.Open(Filename), info.ShadowIndex), info.AllowModifiers);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="41" endline="46">
<![CDATA[
public void InitPalette(WorldRenderer wr)
{
if (info.Tileset == null || info.Tileset.ToLowerInvariant() == world.Map.Tileset.ToLowerInvariant())
wr.AddPalette(info.Name, new Palette(FileSystem.Open(info.Filename), info.ShadowIndex), info.AllowModifiers);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2983" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2984" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2985" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2986" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2987" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2988" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2989" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="19" endline="23">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2990" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2991" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2992" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2993" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2994" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromCurrentTileset.cs" startline="24" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromCurrentTileset(init.world, this); }
}
class PaletteFromCurrentTileset
{
readonly World world;
readonly PaletteFromCurrentTilesetInfo info;
public PaletteFromCurrentTileset(World world, PaletteFromCurrentTilesetInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2995" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2996" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2997" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2998" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2999" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3000" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3001" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3002" semantic_similarity= "0.92" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3003" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="19" endline="27">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("filename to load")]
public readonly string Filename = null;
[Desc("Map listed indices to shadow. Ignores previous color.")]
public readonly int[] ShadowIndex = { };
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3004" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3005" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3006" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3007" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromFile.cs" startline="28" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new PaletteFromFile(init.world, this); }
}
class PaletteFromFile
{
readonly World world;
readonly PaletteFromFileInfo info;
public PaletteFromFile(World world, PaletteFromFileInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3008" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3009" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3010" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3011" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3012" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3013" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3014" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3015" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="21" endline="33">
<![CDATA[
[Desc("internal palette name")]
public readonly string Name = null;
[Desc("If defined, load the palette only for this tileset.")]
public readonly string Tileset = null;
[Desc("red color component")]
public readonly int R = 0;
[Desc("green color component")]
public readonly int G = 0;
[Desc("blue color component")]
public readonly int B = 0;
[Desc("alpha channel (transparency)")]
public readonly int A = 255;
public readonly bool AllowModifiers = true;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3016" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3017" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3018" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs" startline="42" endline="46">
<![CDATA[
public PaletteFromRGBA(World world, PaletteFromRGBAInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3019" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3020" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3021" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3022" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3023" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3024" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3025" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3026" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3027" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Passenger.cs" startline="33" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new EnterOrderTargeter<Cargo>( "EnterTransport", 6, false, true,
target => IsCorrectCargoType( target ), target => CanEnter( target ) );
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "EnterTransport" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3028" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3029" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3030" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3031" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs" startline="37" endline="54">
<![CDATA[
}
public Queue<int> EarnedSamples = new Queue<int>(100);
int earnedAtBeginningOfMinute;
public int KillsCost;
public int DeathsCost;
public int UnitsKilled;
public int UnitsDead;
public int BuildingsKilled;
public int BuildingsDead;
public PlayerStatistics(Actor self)
{
world = self.World;
player = self.Owner;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3032" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3033" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3034" semantic_similarity= "0.86" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="25" endline="48">
<![CDATA[
[Desc("What kind of production will be added (e.g. Building, Infantry, Vehicle, ...)")]
public readonly string Type = null;
[Desc("Group queues from separate buildings together into the same tab.")]
public readonly string Group = null;
[Desc("This value is used to translate the unit cost into build time.")]
public float BuildSpeedModifier = 0.4f;
[Desc("The build time is multiplied with this value on low power.")]
public readonly int LowPowerSlowdown = 3;
[Desc("Notification played when production is complete.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string ReadyAudio = "UnitReady";
[Desc("Notification played when you can't train another unit",
"when the build limit exceeded or the exit is jammed.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string BlockedAudio = "NoBuild";
[Desc("Notification played when user clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string QueuedAudio = "Training";
[Desc("Notification played when player right-clicks on the build palette icon.",
"The filename of the audio is defined per faction in notifications.yaml.")]
public readonly string OnHoldAudio = "OnHold";
[Desc("Notification played when player right-clicks on a build palette icon that is already on hold.",
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3035" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3036" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3037" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3038" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="25" endline="31">
<![CDATA[
[Desc("If you build more actors of the same type,", "the same queue will get its build time lowered for every actor produced there.")]
public readonly bool SpeedUp = false;
[Desc("Every time another production building of the same queue is",
"contructed, the build times of all actors in the queue",
"are divided by this value.")]
public readonly int BuildTimeSpeedUpDivisor = 2;
[Desc("You can still build more production buildings", "than this value, but the build time won't increase further.")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3039" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="149" endline="155">
<![CDATA[
public void PrerequisitesAvailable(string key)
{
var ps = Produceable[ Rules.Info[key] ];
if (!ps.Sticky)
ps.Buildable = true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="156" endline="162">
<![CDATA[
public void PrerequisitesUnavailable(string key)
{
var ps = Produceable[ Rules.Info[key] ];
if (!ps.Sticky)
ps.Buildable = false;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3040" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="173" endline="180">
<![CDATA[
public virtual IEnumerable<ActorInfo> AllItems()
{
if (self.World.LobbyInfo.GlobalSettings.AllowCheats && self.Owner.PlayerActor.Trait<DeveloperMode>().AllTech)
return Produceable.Select(a => a.Key);
return Produceable.Where(a => a.Value.Buildable || a.Value.Visible).Select(a => a.Key);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs" startline="181" endline="188">
<![CDATA[
public virtual IEnumerable<ActorInfo> BuildableItems()
{
if (self.World.LobbyInfo.GlobalSettings.AllowCheats && self.Owner.PlayerActor.Trait<DeveloperMode>().AllTech)
return Produceable.Select(a => a.Key);
return Produceable.Where(a => a.Value.Buildable).Select(a => a.Key);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3041" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\ClassicProductionQueue.cs" startline="47" endline="45">
<![CDATA[
[Sync] bool isActive = false;
public ClassicProductionQueue(Actor self, ClassicProductionQueueInfo info)
{
this.Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TakeCover.cs" startline="31" endline="37">
<![CDATA[
[Sync] int remainingProneTime = 0;
public TakeCover(ActorInitializer init, TakeCoverInfo info)
{
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3042" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\TechTree.cs" startline="25" endline="33">
<![CDATA[
readonly List<Watcher> watchers = new List<Watcher>();
readonly Player player;
public TechTree(ActorInitializer init)
{
player = init.self.Owner;
init.world.ActorAdded += ActorChanged;
init.world.ActorRemoved += ActorChanged;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerManager.cs" startline="26" endline="36">
<![CDATA[
public Dictionary<string, SupportPowerInstance> Powers = new Dictionary<string, SupportPowerInstance>();
public readonly DeveloperMode devMode;
public SupportPowerManager(ActorInitializer init)
{
self = init.self;
devMode = init.self.Trait<DeveloperMode>();
init.world.ActorAdded += ActorAdded;
init.world.ActorRemoved += ActorRemoved;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3043" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3044" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3045" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3046" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3047" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3048" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3049" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3050" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="38" endline="43">
<![CDATA[
{
if( order.OrderID == "PrimaryProducer" )
return new Order( order.OrderID, self, false );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3051" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\PrimaryBuilding.cs" startline="44" endline="49">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "PrimaryProducer")
SetPrimaryProducer(self, !isPrimary);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="49" endline="54">
<![CDATA[
public void ResolveOrder( Actor self, Order order )
{
if( order.OrderString == "SetRallyPoint" )
rallyPoint = order.TargetLocation;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3052" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3053" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3054" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3055" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3056" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3057" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3058" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3059" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCaptor.cs" startline="19" endline="26">
<![CDATA[
public object Create(ActorInitializer init) { return new ProximityCaptor(this); }
}
public class ProximityCaptor
{
public readonly ProximityCaptorInfo Info;
public ProximityCaptor(ProximityCaptorInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3060" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="82" endline="102">
<![CDATA[
void ChangeOwnership(Actor self, Actor captor)
{
self.World.AddFrameEndTask(w =>
{
if (self.Destroyed || captor.Destroyed) return;
var previousOwner = self.Owner;
w.Remove(self);
self.Owner = captor.Owner;
w.Add(self);
if (self.Owner == self.World.LocalPlayer)
w.Add(new FlashTarget(self));
foreach (var t in self.TraitsImplementing<INotifyCapture>())
t.OnCapture(self, captor, previousOwner, self.Owner);
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3061" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="115" endline="121">
<![CDATA[
}
bool IsClear(Actor self, Player currentOwner, Player originalOwner)
{
return UnitsInRange().Where(a => a.Owner != originalOwner)
.Where(a => a.Owner != currentOwner)
.Where(a => CanBeCapturedBy(a))
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs" startline="122" endline="130">
<![CDATA[
.All(a => WorldUtils.AreMutualAllies(a.Owner, currentOwner));
}
bool IsStillInRange(Actor self)
{
return UnitsInRange()
.Where(a => a.Owner == self.Owner)
.Where(a => CanBeCapturedBy(a))
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3062" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3063" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3064" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3065" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3066" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3067" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3068" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RallyPoint.cs" startline="43" endline="48">
<![CDATA[
{
if( order.OrderID == "SetRallyPoint" )
return new Order(order.OrderID, self, false) { TargetLocation = target.CenterLocation.ToCPos() };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3069" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderDetectionCircle.cs" startline="21" endline="30">
<![CDATA[
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.LimeGreen),
self.CenterLocation.ToFloat2(), self.Info.Traits.Get<DetectCloakedInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderRangeCircle.cs" startline="33" endline="55">
<![CDATA[
Color.FromArgb(96, Color.Black), 1
);
foreach (var a in w.ActorsWithTrait<RenderRangeCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
if (a.Actor.Info.Traits.Get<RenderRangeCircleInfo>().RangeCircleType == RangeCircleType)
a.Trait.RenderBeforeWorld(wr, a.Actor);
}
}
class RenderRangeCircle
{
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Yellow),
self.CenterLocation.ToFloat2(), self.Trait<AttackBase>().GetMaximumRange(),
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3070" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderDetectionCircle.cs" startline="21" endline="30">
<![CDATA[
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.LimeGreen),
self.CenterLocation.ToFloat2(), self.Info.Traits.Get<DetectCloakedInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderShroudCircle.cs" startline="32" endline="46">
<![CDATA[
}
class RenderShroudCircle
{
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Cyan),
self.CenterLocation.ToFloat2(), self.Info.Traits.Get<CreatesShroudInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3071" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderDetectionCircle.cs" startline="21" endline="30">
<![CDATA[
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.LimeGreen),
self.CenterLocation.ToFloat2(), self.Info.Traits.Get<DetectCloakedInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="58" endline="70">
<![CDATA[
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (!self.Owner.IsAlliedWith(self.World.RenderPlayer))
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Ready() ? Color.White
self.CenterLocation.ToFloat2(), Info.Range,
Color.FromArgb(96, Color.Black), 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3072" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderRangeCircle.cs" startline="28" endline="40">
<![CDATA[
{
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Yellow), centerLocation.ToFloat2(),
ai.Traits.WithInterface<ArmamentInfo>()
.Select(a => Rules.Weapons[a.Weapon.ToLowerInvariant()].Range).Max(),
Color.FromArgb(96, Color.Black), 1
);
foreach (var a in w.ActorsWithTrait<RenderRangeCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
if (a.Actor.Info.Traits.Get<RenderRangeCircleInfo>().RangeCircleType == RangeCircleType)
a.Trait.RenderBeforeWorld(wr, a.Actor);
foreach (var a in w.ActorsWithTrait<RenderRangeCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
if (a.Actor.Info.Traits.Get<RenderRangeCircleInfo>().RangeCircleType == RangeCircleType)
a.Trait.RenderBeforeWorld(wr, a.Actor);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderShroudCircle.cs" startline="20" endline="31">
<![CDATA[
{
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Cyan),
centerLocation.ToFloat2(),
ai.Traits.Get<CreatesShroudInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
foreach (var a in w.ActorsWithTrait<RenderShroudCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
a.Trait.RenderBeforeWorld(wr, a.Actor);
foreach (var a in w.ActorsWithTrait<RenderShroudCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
a.Trait.RenderBeforeWorld(wr, a.Actor);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3073" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderRangeCircle.cs" startline="33" endline="55">
<![CDATA[
Color.FromArgb(96, Color.Black), 1
);
foreach (var a in w.ActorsWithTrait<RenderRangeCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
if (a.Actor.Info.Traits.Get<RenderRangeCircleInfo>().RangeCircleType == RangeCircleType)
a.Trait.RenderBeforeWorld(wr, a.Actor);
}
}
class RenderRangeCircle
{
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Yellow),
self.CenterLocation.ToFloat2(), self.Trait<AttackBase>().GetMaximumRange(),
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderShroudCircle.cs" startline="32" endline="46">
<![CDATA[
}
class RenderShroudCircle
{
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Cyan),
self.CenterLocation.ToFloat2(), self.Info.Traits.Get<CreatesShroudInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3074" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderRangeCircle.cs" startline="33" endline="55">
<![CDATA[
Color.FromArgb(96, Color.Black), 1
);
foreach (var a in w.ActorsWithTrait<RenderRangeCircle>())
if (a.Actor.Owner == a.Actor.World.LocalPlayer)
if (a.Actor.Info.Traits.Get<RenderRangeCircleInfo>().RangeCircleType == RangeCircleType)
a.Trait.RenderBeforeWorld(wr, a.Actor);
}
}
class RenderRangeCircle
{
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Yellow),
self.CenterLocation.ToFloat2(), self.Trait<AttackBase>().GetMaximumRange(),
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="58" endline="70">
<![CDATA[
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (!self.Owner.IsAlliedWith(self.World.RenderPlayer))
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Ready() ? Color.White
self.CenterLocation.ToFloat2(), Info.Range,
Color.FromArgb(96, Color.Black), 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3075" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderBuilding.cs" startline="84" endline="89">
<![CDATA[
public void PlayCustomAnimThen(Actor self, string name, Action a)
{
anim.PlayThen(NormalizeSequence(self, name),
() => { anim.PlayRepeating(NormalizeSequence(self, "idle")); a(); });
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderBuilding.cs" startline="90" endline="95">
<![CDATA[
public void PlayCustomAnimRepeating(Actor self, string name)
{
anim.PlayThen(NormalizeSequence(self, name),
() => { PlayCustomAnimRepeating(self, name); });
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3076" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderInfantryPanic.cs" startline="30" endline="39">
<![CDATA[
protected override string NormalizeInfantrySequence(Actor self, string baseSequence)
{
var prefix = sc != null && sc.Panicking ? "panic-"
if (anim.HasSequence(prefix + baseSequence))
return prefix + baseSequence;
else
return baseSequence;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TakeCover.cs" startline="85" endline="94">
<![CDATA[
protected override string NormalizeInfantrySequence(Actor self, string baseSequence)
{
var prefix = tc != null && tc.IsProne ? "prone-"
if (anim.HasSequence(prefix + baseSequence))
return prefix + baseSequence;
else
return baseSequence;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3077" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderInfantryPanic.cs" startline="45" endline="53">
<![CDATA[
public override void Tick (Actor self)
{
if (wasPanic != sc.Panicking)
dirty = true;
wasPanic = sc.Panicking;
base.Tick(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TakeCover.cs" startline="100" endline="108">
<![CDATA[
public override void Tick(Actor self)
{
if (wasProne != tc.IsProne)
dirty = true;
wasProne = tc.IsProne;
base.Tick(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3078" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderUnitReload.cs" startline="24" endline="33">
<![CDATA[
public override void Tick(Actor self)
{
var attack = self.TraitOrDefault<AttackBase>();
if (attack != null)
anim.ReplaceAnim((attack.IsReloading() ? "empty-"
+ (attack.IsAttacking ? "aim"
base.Tick(self);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\RenderUnitReload.cs" startline="47" endline="54">
<![CDATA[
public override void Tick(Actor self)
{
var attack = self.TraitOrDefault<AttackBase>();
var isAttacking = attack.IsAttacking;
anims["turret_0"].Animation.ReplaceAnim(isAttacking ? "aim"
base.Tick(self);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3079" semantic_similarity= "0.98" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\WithMuzzleFlash.cs" startline="70" endline="73">
<![CDATA[
{
foreach (var a in muzzleFlashes.Values)
a.Animation.Tick();
foreach (var a in muzzleFlashes.Values)
a.Animation.Tick();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerManager.cs" startline="83" endline="88">
<![CDATA[
public void Tick(Actor self)
{
foreach(var power in Powers.Values)
power.Tick();
foreach(var power in Powers.Values)
power.Tick();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3080" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\WithRotor.cs" startline="29" endline="39">
<![CDATA[
public WithRotor(Actor self, WithRotorInfo info)
{
var rs = self.Trait<RenderSimple>();
rotorAnim = new Animation(rs.GetImage(self));
rotorAnim.PlayRepeating("rotor");
rs.anims.Add(info.Id, new AnimationWithOffset(
rotorAnim,
wr => wr.ScreenPxOffset(rs.LocalToWorld(info.Offset.Rotate(rs.QuantizeOrientation(self, self.Orientation)))),
null ) { ZOffset = 1 } );
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Render\WithSpinner.cs" startline="28" endline="37">
<![CDATA[
public WithSpinner(Actor self, WithSpinnerInfo info)
{
var rs = self.Trait<RenderSimple>();
var spinner = new Animation(rs.GetImage(self));
spinner.PlayRepeating("spinner");
rs.anims.Add(info.Name, new AnimationWithOffset(
spinner,
wr => wr.ScreenPxOffset(rs.LocalToWorld(info.Offset.Rotate(rs.QuantizeOrientation(self, self.Orientation)))),
null ) { ZOffset = 1 } );
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3081" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="33" endline="37">
<![CDATA[
public Repairable(Actor self)
{
this.self = self;
Health = self.Trait<Health>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\MoneyBinWidget.cs" startline="23" endline="28">
<![CDATA[
[ObjectCreator.UseCtor]
public MoneyBinWidget(World world)
{
this.world = world;
playerResources = world.LocalPlayer.PlayerActor.Trait<PlayerResources>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3082" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="33" endline="37">
<![CDATA[
public Repairable(Actor self)
{
this.self = self;
Health = self.Trait<Health>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\BridgeHut.cs" startline="23" endline="32">
<![CDATA[
}
class BridgeHut
{
public Bridge bridge;
public BridgeHut(ActorInitializer init)
{
bridge = init.Get<ParentActorInit>().value.Trait<Bridge>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3083" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3084" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3085" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3086" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3087" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3088" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Repairable.cs" startline="45" endline="50">
<![CDATA[
{
if( order.OrderID == "Repair" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3089" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3090" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3091" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3092" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3093" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairableNear.cs" startline="47" endline="52">
<![CDATA[
{
if( order.OrderID == "RepairNear" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3094" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Reservable.cs" startline="54" endline="59">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
if (reservedForAircraft != null)
reservedForAircraft.UnReserve();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Reservable.cs" startline="60" endline="65">
<![CDATA[
public void OnCapture (Actor self, Actor captor, Player oldOwner, Player newOwner)
{
if (reservedForAircraft != null)
reservedForAircraft.UnReserve();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3095" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Reservable.cs" startline="54" endline="59">
<![CDATA[
public void Killed(Actor self, AttackInfo e)
{
if (reservedForAircraft != null)
reservedForAircraft.UnReserve();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Reservable.cs" startline="68" endline="73">
<![CDATA[
public void Sold (Actor self)
{
if (reservedForAircraft != null)
reservedForAircraft.UnReserve();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3096" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Reservable.cs" startline="60" endline="65">
<![CDATA[
public void OnCapture (Actor self, Actor captor, Player oldOwner, Player newOwner)
{
if (reservedForAircraft != null)
reservedForAircraft.UnReserve();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Reservable.cs" startline="68" endline="73">
<![CDATA[
public void Sold (Actor self)
{
if (reservedForAircraft != null)
reservedForAircraft.UnReserve();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3097" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3098" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ScaredyCat.cs" startline="32" endline="37">
<![CDATA[
public ScaredyCat(Actor self, ScaredyCatInfo info)
{
Self = self;
Info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3099" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3100" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3101" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3102" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3103" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3104" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3105" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SelfHealing.cs" startline="21" endline="31">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new SelfHealing(this); }
}
class SelfHealing
{
[Sync] int ticks;
[Sync] int damageTicks;
SelfHealingInfo Info;
public SelfHealing(SelfHealingInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3106" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3107" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3108" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3109" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3110" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3111" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SpawnMPUnits.cs" startline="20" endline="28">
<![CDATA[
public object Create (ActorInitializer init) { return new SpawnMPUnits(this); }
}
class SpawnMPUnits
{
SpawnMPUnitsInfo info;
public SpawnMPUnits(SpawnMPUnitsInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3112" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3113" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3114" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3115" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Spy.cs" startline="82" endline="96">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new TargetTypeOrderTargeter("Disguise", "Disguise", 7, "ability", true, true) { ForceAttack=false };
}
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "Disguise" )
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3116" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\StrategicVictoryConditions.cs" startline="25" endline="40">
<![CDATA[
public object Create(ActorInitializer init) { return new StrategicVictoryConditions(init.self, this); }
}
public class StrategicVictoryConditions
{
Actor self;
StrategicVictoryConditionsInfo info;
[Sync] public int TicksLeft = 0;
public StrategicVictoryConditions(Actor self, StrategicVictoryConditionsInfo info)
{
this.self = self;
this.info = info;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs" startline="22" endline="37">
<![CDATA[
public object Create(ActorInitializer init) { return new WaterPaletteRotation(init.world, this); }
}
class WaterPaletteRotation
{
float t = 0;
readonly WaterPaletteRotationInfo info;
readonly World world;
public WaterPaletteRotation(World world, WaterPaletteRotationInfo info)
{
this.world = world;
this.info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3117" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3118" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3119" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="37" endline="49">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new SupplyTruckOrderTargeter(); }
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "DeliverSupplies")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3120" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupplyTruck.cs" startline="55" endline="64">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "DeliverSupplies")
{
self.SetTargetLine(Target.FromOrder(order), Color.Yellow);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new DonateSupplies(order.TargetActor, Info.Payload)));
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="59" endline="72">
<![CDATA[
public void ResolveOrder(Actor self, Order order)
{
if (order.OrderString == "Infiltrate")
{
if (!CanInfiltrate(order.TargetActor))
return;
self.SetTargetLine(Target.FromOrder(order), Color.Red);
self.CancelActivity();
self.QueueActivity(new Enter(order.TargetActor, new Infiltrate(order.TargetActor)));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3121" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3122" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3123" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="20" endline="25">
<![CDATA[
[ActorReference]
public readonly string UnitType = "badr.bomber";
[ActorReference]
public readonly string FlareType = null;
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3124" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="42" endline="46">
<![CDATA[
public SupportPower(Actor self, SupportPowerInfo info)
{
Info = info;
this.self = self;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Valued.cs" startline="44" endline="49">
<![CDATA[
public Tooltip(Actor self, TooltipInfo info)
{
this.self = self;
Info = info;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3125" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="59" endline="64">
<![CDATA[
public virtual IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ability", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs" startline="33" endline="38">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3126" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="59" endline="64">
<![CDATA[
public virtual IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ability", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\IronCurtainPower.cs" startline="32" endline="36">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3127" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPower.cs" startline="59" endline="64">
<![CDATA[
public virtual IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "ability", MouseButton.Left);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\NukePower.cs" startline="29" endline="33">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "nuke", MouseButton.Left);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3128" semantic_similarity= "0.76" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="33" endline="69">
<![CDATA[
public override void Activate(Actor self, Order order)
{
var startPos = self.World.ChooseRandomEdgeCell();
self.World.AddFrameEndTask(w =>
{
var info = (Info as AirstrikePowerInfo);
var flare = info.FlareType != null ? w.CreateActor(info.FlareType, new TypeDictionary
{
new LocationInit( order.TargetLocation ),
new OwnerInit( self.Owner ),
})
if (flare != null)
{
flare.QueueActivity(new Wait(info.FlareTime));
flare.QueueActivity(new RemoveSelf());
}
var a = w.CreateActor(info.UnitType, new TypeDictionary
{
new LocationInit( startPos ),
new OwnerInit( self.Owner ),
new FacingInit( Util.GetFacing(order.TargetLocation - startPos, 0) ),
new AltitudeInit( Rules.Info[info.UnitType].Traits.Get<PlaneInfo>().CruiseAltitude ),
});
a.Trait<CarpetBomb>().SetTarget(order.TargetLocation);
a.CancelActivity();
a.QueueActivity(Fly.ToCell(order.TargetLocation));
if (flare != null)
a.QueueActivity(new CallFunc(() => flare.Destroy()));
a.QueueActivity(new FlyOffMap());
a.QueueActivity(new RemoveSelf());
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="101" endline="112">
<![CDATA[
public override void Activate(Actor self, Order order)
{
self.World.AddFrameEndTask(w =>
{
Sound.PlayToPlayer(self.Owner, Info.LaunchSound);
w.Add(new SatelliteLaunch(self));
owner.Launch(self, Info);
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3129" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\AirstrikePower.cs" startline="33" endline="69">
<![CDATA[
public override void Activate(Actor self, Order order)
{
var startPos = self.World.ChooseRandomEdgeCell();
self.World.AddFrameEndTask(w =>
{
var info = (Info as AirstrikePowerInfo);
var flare = info.FlareType != null ? w.CreateActor(info.FlareType, new TypeDictionary
{
new LocationInit( order.TargetLocation ),
new OwnerInit( self.Owner ),
})
if (flare != null)
{
flare.QueueActivity(new Wait(info.FlareTime));
flare.QueueActivity(new RemoveSelf());
}
var a = w.CreateActor(info.UnitType, new TypeDictionary
{
new LocationInit( startPos ),
new OwnerInit( self.Owner ),
new FacingInit( Util.GetFacing(order.TargetLocation - startPos, 0) ),
new AltitudeInit( Rules.Info[info.UnitType].Traits.Get<PlaneInfo>().CruiseAltitude ),
});
a.Trait<CarpetBomb>().SetTarget(order.TargetLocation);
a.CancelActivity();
a.QueueActivity(Fly.ToCell(order.TargetLocation));
if (flare != null)
a.QueueActivity(new CallFunc(() => flare.Destroy()));
a.QueueActivity(new FlyOffMap());
a.QueueActivity(new RemoveSelf());
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="35" endline="73">
<![CDATA[
public override void Activate(Actor self, Order order)
{
var items = (Info as ParatroopersPowerInfo).DropItems;
var startPos = self.World.ChooseRandomEdgeCell();
self.World.AddFrameEndTask(w =>
{
var info = (Info as ParatroopersPowerInfo);
var flare = info.FlareType != null ? w.CreateActor(info.FlareType, new TypeDictionary
{
new LocationInit( order.TargetLocation ),
new OwnerInit( self.Owner ),
})
if (flare != null)
{
flare.QueueActivity(new Wait(info.FlareTime));
flare.QueueActivity(new RemoveSelf());
}
var a = w.CreateActor(info.UnitType, new TypeDictionary
{
new LocationInit( startPos ),
new OwnerInit( self.Owner ),
new FacingInit( Util.GetFacing(order.TargetLocation - startPos, 0) ),
new AltitudeInit( Rules.Info[info.UnitType].Traits.Get<PlaneInfo>().CruiseAltitude ),
});
a.CancelActivity();
a.QueueActivity(new FlyAttack(Target.FromOrder(order)));
a.Trait<ParaDrop>().SetLZ(order.TargetLocation);
var cargo = a.Trait<Cargo>();
foreach (var i in items)
cargo.Load(a, self.World.CreateActor(false, i.ToLowerInvariant(),
new TypeDictionary { new OwnerInit( a.Owner ) }));
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3130" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs" startline="33" endline="38">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\IronCurtainPower.cs" startline="32" endline="36">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3131" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs" startline="33" endline="38">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\NukePower.cs" startline="29" endline="33">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "nuke", MouseButton.Left);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3132" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs" startline="52" endline="62">
<![CDATA[
public IEnumerable<Actor> UnitsInRange(CPos xy)
{
int range = (Info as ChronoshiftPowerInfo).Range;
var tiles = self.World.FindTilesInCircle(xy, range);
var units = new List<Actor>();
foreach (var t in tiles)
units.AddRange(self.World.ActorMap.GetUnitsAt(t));
foreach (var t in tiles)
units.AddRange(self.World.ActorMap.GetUnitsAt(t));
return units.Distinct().Where(a => a.HasTrait<Chronoshiftable>());
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\IronCurtainPower.cs" startline="48" endline="58">
<![CDATA[
public IEnumerable<Actor> UnitsInRange(CPos xy)
{
int range = (Info as IronCurtainPowerInfo).Range;
var tiles = self.World.FindTilesInCircle(xy, range);
var units = new List<Actor>();
foreach (var t in tiles)
units.AddRange(self.World.ActorMap.GetUnitsAt(t));
foreach (var t in tiles)
units.AddRange(self.World.ActorMap.GetUnitsAt(t));
return units.Distinct().Where(a => a.HasTrait<IronCurtainable>());
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3133" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs" startline="22" endline="30">
<![CDATA[
bool Initialised = false;
readonly World world;
[ObjectCreator.UseCtor]
public StrategicProgressWidget(World world)
{
IsVisible = () => true;
this.world = world;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3134" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs" startline="27" endline="34">
<![CDATA[
[Sync] bool Launched = false;
[Sync] public bool GrantedAllies = false;
[Sync] public bool Granted = false;
Player owner;
List<Actor> actors = new List<Actor> { };
public GpsWatcher( Player owner ) { this.owner = owner; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3135" semantic_similarity= "0.96" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\IronCurtainPower.cs" startline="32" endline="36">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectTarget(order, manager, this);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\NukePower.cs" startline="29" endline="33">
<![CDATA[
public override IOrderGenerator OrderGenerator(string order, SupportPowerManager manager)
{
Sound.PlayToPlayer(manager.self.Owner, Info.SelectTargetSound);
return new SelectGenericPowerTarget(order, manager, "nuke", MouseButton.Left);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3136" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3137" semantic_similarity= "0.77" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3138" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3139" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\ParatroopersPower.cs" startline="20" endline="27">
<![CDATA[
[ActorReference]
public string[] DropItems = { };
[ActorReference]
public string UnitType = "badr";
[ActorReference]
public string FlareType = "flare";
public readonly int FlareTime = 25 * 60 * 2;	// 2 minutes
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3140" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3141" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3142" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3143" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3144" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerChargeBar.cs" startline="20" endline="25">
<![CDATA[
}
class SupportPowerChargeBar
{
Actor self;
public SupportPowerChargeBar(Actor self) { this.self = self; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3145" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3146" semantic_similarity= "0.88" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3147" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3148" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3149" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Turreted.cs" startline="22" endline="28">
<![CDATA[
public readonly string Turret = "primary";
[Desc("Rate of Turning")]
public readonly int ROT = 255;
public readonly int InitialFacing = 128;
public readonly bool AlignWhenIdle = false;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.cs" startline="13" endline="21">
<![CDATA[
public bool PaletteFromImage = true;
public string PaletteFile = "";
public string ImageFile = "";
public int TileSize = 24;
private System.ComponentModel.IContainer components = null;
public frmNew()
{
InitializeComponent();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3150" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3151" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3152" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3153" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TargetableBuilding.cs" startline="21" endline="29">
<![CDATA[
public object Create( ActorInitializer init ) { return new TargetableBuilding( this ); }
}
class TargetableBuilding
{
readonly TargetableBuildingInfo info;
public TargetableBuilding( TargetableBuildingInfo info ) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3154" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3155" semantic_similarity= "0.89" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3156" semantic_similarity= "0.83" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs" startline="20" endline="34">
<![CDATA[
public readonly string Anim = null;
[Desc("Initial position relative to body")]
public readonly WVec Offset = WVec.Zero;
[Desc("Maximum distance to throw the particle")]
public readonly WRange ThrowRange = new WRange(768);
[Desc("Maximum height to throw the particle")]
public readonly WRange ThrowHeight = new WRange(256);
[Desc("Number of ticks to animate")]
public readonly int Length = 15;
[Desc("Maximum rotation rate")]
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3157" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3158" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3159" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnCapture.cs" startline="21" endline="29">
<![CDATA[
public virtual object Create(ActorInitializer init) { return new TransformOnCapture(this); }
}
class TransformOnCapture
{
TransformOnCaptureInfo Info;
public TransformOnCapture(TransformOnCaptureInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3160" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\TransformOnPassenger.cs" startline="20" endline="24">
<![CDATA[
[ActorReference] public readonly string[] PassengerTypes = {};
[ActorReference] public readonly string OnEnter = null;
[ActorReference] public readonly string OnExit = null;
public readonly bool SkipMakeAnims = false;
public readonly bool BecomeNeutral = false;
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3161" semantic_similarity= "0.81" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="22" endline="26">
<![CDATA[
[ActorReference] public readonly string IntoActor = null;
public readonly int2 Offset = int2.Zero;
public readonly int Facing = 96;
public readonly string[] TransformSounds = {};
public readonly string[] NoTransformSounds = {};
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Armament.cs" startline="30" endline="45">
<![CDATA[
[WeaponReference]
[Desc("Has to be defined here and in weapons.yaml.")]
public readonly string Weapon = null;
public readonly string Turret = "primary";
[Desc("Move the turret backwards when firing.")]
public readonly int LegacyRecoil = 0;
[Desc("Time (in frames) until the weapon can fire again.")]
public readonly int FireDelay = 0;
[Desc("Muzzle position relative to turret or body. (forward, right, up) triples")]
public readonly WRange[] LocalOffset = {};
[Desc("Muzzle yaw relative to turret or body.")]
public readonly WAngle[] LocalYaw = {};
[Desc("Move the turret backwards when firing.")]
public readonly WRange Recoil = WRange.Zero;
[Desc("Recoil recovery per-frame")]
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3162" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3163" semantic_similarity= "0.85" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Transforms.cs" startline="57" endline="69">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get { yield return new DeployOrderTargeter( "DeployTransform", 5, () => CanDeploy() ); }
}
public Order IssueOrder( Actor self, IOrderTargeter order, Target target, bool queued )
{
if( order.OrderID == "DeployTransform" )
return new Order( order.OrderID, self, queued );
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3164" semantic_similarity= "0.93" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs" startline="297" endline="303">
<![CDATA[
string GetOverlayForItem(ProductionItem item)
{
if (item.Paused) return HoldText;
if (item.Done) return ReadyText;
return WidgetUtils.FormatTime(item.RemainingTimeActual);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="94" endline="100">
<![CDATA[
static string GetOverlayForItem(ProductionItem item)
{
if (item.Paused) return "ON HOLD";
if (item.Done) return "READY";
return WidgetUtils.FormatTime(item.RemainingTimeActual);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3165" semantic_similarity= "0.9" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\IngameChatLogic.cs" startline="118" endline="153">
<![CDATA[
public void AddChatLine(Color c, string from, string text)
{
ChatOverlayDisplay.AddLine(c, from, text);
var template = ChatTemplate.Clone();
var nameLabel = template.Get<LabelWidget>("NAME");
var textLabel = template.Get<LabelWidget>("TEXT");
var name = "";
if (!string.IsNullOrEmpty(from))
name = from + "
var font = Game.Renderer.Fonts[nameLabel.Font];
var nameSize = font.Measure(from);
nameLabel.GetColor = () => c;
nameLabel.GetText = () => name;
nameLabel.Bounds.Width = nameSize.X;
textLabel.Bounds.X += nameSize.X;
textLabel.Bounds.Width -= nameSize.X;
text = WidgetUtils.WrapText(text, textLabel.Bounds.Width, font);
textLabel.GetText = () => text;
var dh = font.Measure(text).Y - textLabel.Bounds.Height;
if (dh > 0)
{
textLabel.Bounds.Height += dh;
template.Bounds.Height += dh;
}
ChatScrollPanel.AddChild(template);
ChatScrollPanel.ScrollToBottom();
Sound.PlayNotification(null, "Sounds", "ChatLine", null);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs" startline="299" endline="333">
<![CDATA[
void AddChatLine(Color c, string from, string text)
{
var template = chatTemplate.Clone();
var nameLabel = template.Get<LabelWidget>("NAME");
var timeLabel = template.Get<LabelWidget>("TIME");
var textLabel = template.Get<LabelWidget>("TEXT");
var name = from + "
var font = Game.Renderer.Fonts[nameLabel.Font];
var nameSize = font.Measure(from);
var time = DateTime.Now;
timeLabel.GetText = () => "{0
nameLabel.GetColor = () => c;
nameLabel.GetText = () => name;
nameLabel.Bounds.Width = nameSize.X;
textLabel.Bounds.X += nameSize.X;
textLabel.Bounds.Width -= nameSize.X;
text = WidgetUtils.WrapText(text, textLabel.Bounds.Width, font);
textLabel.GetText = () => text;
var dh = font.Measure(text).Y - textLabel.Bounds.Height;
if (dh > 0)
{
textLabel.Bounds.Height += dh;
template.Bounds.Height += dh;
}
chatPanel.AddChild(template);
chatPanel.ScrollToBottom();
Sound.PlayNotification(null, "Sounds", "ChatLine", null);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3166" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="83" endline="92">
<![CDATA[
void OpenGamePanel(string id)
{
Menu = MenuType.None;
Ui.OpenWindow(id, new WidgetArgs()
{
{ "onExit", () => Menu = MenuType.Main },
{ "openLobby", () => OpenLobbyPanel() }
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="51" endline="59">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_MODS").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MODS_PANEL", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3167" semantic_similarity= "0.79" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="83" endline="92">
<![CDATA[
void OpenGamePanel(string id)
{
Menu = MenuType.None;
Ui.OpenWindow(id, new WidgetArgs()
{
{ "onExit", () => Menu = MenuType.Main },
{ "openLobby", () => OpenLobbyPanel() }
});
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="60" endline="69">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main },
{ "onSwitch", RemoveShellmapUI }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_REPLAY_VIEWER").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("REPLAYBROWSER_BG", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3168" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="51" endline="59">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_MODS").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("MODS_PANEL", new WidgetArgs()
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\MainMenuButtonsLogic.cs" startline="60" endline="69">
<![CDATA[
{
{ "onExit", () => Menu = MenuType.Main },
{ "onSwitch", RemoveShellmapUI }
});
};
widget.Get<ButtonWidget>("MAINMENU_BUTTON_REPLAY_VIEWER").OnClick = () =>
{
Menu = MenuType.None;
Ui.OpenWindow("REPLAYBROWSER_BG", new WidgetArgs()
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3169" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="74" endline="78">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Basic";
DisplayStats(BasicStats);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="85" endline="89">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Economy";
DisplayStats(EconomyStats);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3170" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="74" endline="78">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Basic";
DisplayStats(BasicStats);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="96" endline="100">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Production";
DisplayStats(ProductionStats);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3171" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="74" endline="78">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Basic";
DisplayStats(BasicStats);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="107" endline="111">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Combat";
DisplayStats(CombatStats);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3172" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="85" endline="89">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Economy";
DisplayStats(EconomyStats);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="96" endline="100">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Production";
DisplayStats(ProductionStats);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3173" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="85" endline="89">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Economy";
DisplayStats(EconomyStats);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="107" endline="111">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Combat";
DisplayStats(CombatStats);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3174" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="96" endline="100">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Production";
DisplayStats(ProductionStats);
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs" startline="107" endline="111">
<![CDATA[
OnClick = () =>
{
ClearStats();
statsDropDown.GetText = () => "Combat";
DisplayStats(CombatStats);
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3175" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs" startline="266" endline="288">
<![CDATA[
public static bool ShowSoundTickDropdown(DropDownButtonWidget dropdown, SoundSettings audio)
{
var options = new Dictionary<string, SoundCashTicks>()
{
{ "Extreme", SoundCashTicks.Extreme },
{ "Normal", SoundCashTicks.Normal },
{ "Disabled", SoundCashTicks.Disabled },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => audio.SoundCashTickType == options[o],
() => audio.SoundCashTickType = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs" startline="289" endline="310">
<![CDATA[
public static bool ShowWindowModeDropdown(DropDownButtonWidget dropdown, GraphicSettings s)
{
var options = new Dictionary<string, WindowMode>()
{
{ "Pseudo-Fullscreen", WindowMode.PseudoFullscreen },
{ "Fullscreen", WindowMode.Fullscreen },
{ "Windowed", WindowMode.Windowed },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => s.Mode == options[o],
() => s.Mode = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3176" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs" startline="331" endline="351">
<![CDATA[
public static bool ShowRendererDropdown(DropDownButtonWidget dropdown, GraphicSettings s)
{
var options = new Dictionary<string, string>()
{
{ "OpenGL", "Gl" },
{ "Cg Toolkit", "Cg" },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => s.Renderer == options[o],
() => s.Renderer = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs" startline="352" endline="372">
<![CDATA[
public static bool ShowSoundEngineDropdown(DropDownButtonWidget dropdown, SoundSettings s)
{
var options = new Dictionary<string, string>()
{
{ "OpenAL", "AL" },
{ "None", "Null" },
};
Func<string, ScrollItemWidget, ScrollItemWidget> setupItem = (o, itemTemplate) =>
{
var item = ScrollItemWidget.Setup(itemTemplate,
() => s.Engine == options[o],
() => s.Engine = options[o]);
item.Get<LabelWidget>("LABEL").GetText = () => o;
return item;
};
dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE", 500, options.Keys, setupItem);
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3177" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="28" endline="39">
<![CDATA[
[ObjectCreator.UseCtor]
public ObserverProductionIconsWidget(World world, WorldRenderer worldRenderer)
{
iconSprites = Rules.Info.Values.Where(u => u.Traits.Contains<BuildableInfo>() && u.Name[0] != '^')
.ToDictionary(
u => u.Name,
u => Game.modData.SpriteLoader.LoadAllSprites(u.Traits.Get<TooltipInfo>().Icon ?? (u.Name + "icon"))[0]);
this.world = world;
this.worldRenderer = worldRenderer;
clocks = new Dictionary<ProductionQueue, Animation>();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="28" endline="40">
<![CDATA[
[ObjectCreator.UseCtor]
public ObserverSupportPowerIconsWidget(World world, WorldRenderer worldRenderer)
{
iconSprites = Rules.Info.Values.SelectMany(u => u.Traits.WithInterface<SupportPowerInfo>())
.Select(u => u.Image).Distinct()
.ToDictionary(
u => u,
u => Game.modData.SpriteLoader.LoadAllSprites(u)[0]);
this.world = world;
this.worldRenderer = worldRenderer;
clocks = new Dictionary<string, Animation>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3178" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="40" endline="49">
<![CDATA[
protected ObserverProductionIconsWidget(ObserverProductionIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="41" endline="50">
<![CDATA[
protected ObserverSupportPowerIconsWidget(ObserverSupportPowerIconsWidget other)
{
GetPlayer = other.GetPlayer;
iconSprites = other.iconSprites;
world = other.world;
worldRenderer = other.worldRenderer;
clocks = other.clocks;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3179" semantic_similarity= "0.87" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="50" endline="93">
<![CDATA[
public override void Draw()
{
var player = GetPlayer();
if (player == null)
{
return;
}
var queues = world.ActorsWithTrait<ProductionQueue>()
.Where(a => a.Actor.Owner == player)
.Select((a, i) => new { a.Trait, i });
foreach (var queue in queues)
{
if (!clocks.ContainsKey(queue.Trait))
{
clocks.Add(queue.Trait, new Animation("clock"));
}
}
foreach (var queue in queues)
{
if (!clocks.ContainsKey(queue.Trait))
{
clocks.Add(queue.Trait, new Animation("clock"));
}
}
foreach (var queue in queues)
{
var item = queue.Trait.CurrentItem();
if (item == null)
{
continue;
}
var sprite = iconSprites[item.Item];
var size = sprite.size / new float2(2, 2);
var location = new float2(RenderBounds.Location) + new float2(queue.i * (int)size.Length, 0);
WidgetUtils.DrawSHP(sprite, location, worldRenderer, size);
var clock = clocks[queue.Trait];
clock.PlayFetchIndex("idle",
() => item.TotalTime == 0 ? 0
* (clock.CurrentSequence.Length - 1) / item.TotalTime));
clock.Tick();
WidgetUtils.DrawSHP(clock.Image, location, worldRenderer, size);
var tiny = Game.Renderer.Fonts["Tiny"];
var text = GetOverlayForItem(item);
tiny.DrawTextWithContrast(text,
location + new float2(16, 16) - new float2(tiny.Measure(text).X / 2, 0),
Color.White, Color.Black, 1);
}
foreach (var queue in queues)
{
var item = queue.Trait.CurrentItem();
if (item == null)
{
continue;
}
var sprite = iconSprites[item.Item];
var size = sprite.size / new float2(2, 2);
var location = new float2(RenderBounds.Location) + new float2(queue.i * (int)size.Length, 0);
WidgetUtils.DrawSHP(sprite, location, worldRenderer, size);
var clock = clocks[queue.Trait];
clock.PlayFetchIndex("idle",
() => item.TotalTime == 0 ? 0
* (clock.CurrentSequence.Length - 1) / item.TotalTime));
clock.Tick();
WidgetUtils.DrawSHP(clock.Image, location, worldRenderer, size);
var tiny = Game.Renderer.Fonts["Tiny"];
var text = GetOverlayForItem(item);
tiny.DrawTextWithContrast(text,
location + new float2(16, 16) - new float2(tiny.Measure(text).X / 2, 0),
Color.White, Color.Black, 1);
}
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="51" endline="91">
<![CDATA[
public override void Draw()
{
var player = GetPlayer();
if (player == null)
{
return;
}
var powers = player.PlayerActor.Trait<SupportPowerManager>().Powers
.Select((a, i) => new { a, i });
foreach (var power in powers)
{
if (!clocks.ContainsKey(power.a.Key))
{
clocks.Add(power.a.Key, new Animation("clock"));
}
}
foreach (var power in powers)
{
if (!clocks.ContainsKey(power.a.Key))
{
clocks.Add(power.a.Key, new Animation("clock"));
}
}
foreach (var power in powers)
{
var item = power.a.Value;
if (item == null || item.Info == null || item.Info.Image == null)
continue;
var sprite = iconSprites[item.Info.Image];
var size = sprite.size / new float2(2, 2);
var location = new float2(RenderBounds.Location) + new float2(power.i * (int)size.Length, 0);
WidgetUtils.DrawSHP(sprite, location, worldRenderer, size);
var clock = clocks[power.a.Key];
clock.PlayFetchIndex("idle",
() => item.TotalTime == 0 ? 0
* (clock.CurrentSequence.Length - 1) / item.TotalTime));
clock.Tick();
WidgetUtils.DrawSHP(clock.Image, location, worldRenderer, size);
var tiny = Game.Renderer.Fonts["Tiny"];
var text = GetOverlayForItem(item);
tiny.DrawTextWithContrast(text,
location + new float2(16, 16) - new float2(tiny.Measure(text).X / 2, 0),
Color.White, Color.Black, 1);
}
foreach (var power in powers)
{
var item = power.a.Value;
if (item == null || item.Info == null || item.Info.Image == null)
continue;
var sprite = iconSprites[item.Info.Image];
var size = sprite.size / new float2(2, 2);
var location = new float2(RenderBounds.Location) + new float2(power.i * (int)size.Length, 0);
WidgetUtils.DrawSHP(sprite, location, worldRenderer, size);
var clock = clocks[power.a.Key];
clock.PlayFetchIndex("idle",
() => item.TotalTime == 0 ? 0
* (clock.CurrentSequence.Length - 1) / item.TotalTime));
clock.Tick();
WidgetUtils.DrawSHP(clock.Image, location, worldRenderer, size);
var tiny = Game.Renderer.Fonts["Tiny"];
var text = GetOverlayForItem(item);
tiny.DrawTextWithContrast(text,
location + new float2(16, 16) - new float2(tiny.Measure(text).X / 2, 0),
Color.White, Color.Black, 1);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3180" semantic_similarity= "0.78" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs" startline="94" endline="100">
<![CDATA[
static string GetOverlayForItem(ProductionItem item)
{
if (item.Paused) return "ON HOLD";
if (item.Done) return "READY";
return WidgetUtils.FormatTime(item.RemainingTimeActual);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs" startline="92" endline="98">
<![CDATA[
static string GetOverlayForItem(SupportPowerManager.SupportPowerInstance item)
{
if (item.Disabled) return "ON HOLD";
if (item.Ready) return "READY";
return WidgetUtils.FormatTime(item.RemainingTime);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3181" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs" startline="70" endline="90">
<![CDATA[
public override string GetCursor(int2 pos)
{
if (world == null || !hasRadar)
return null;
var loc = MinimapPixelToCell(pos);
var mi = new MouseInput
{
Location = loc.ToInt2(),
Button = MouseButton.Right,
Modifiers = Game.GetModifierKeys()
};
var cursor = world.OrderGenerator.GetCursor( world, loc, mi );
if (cursor == null)
return "default";
return CursorProvider.HasCursorSequence(cursor+"-minimap") ? cursor+"-minimap"
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs" startline="67" endline="87">
<![CDATA[
public override string GetCursor(int2 pos)
{
if (world == null || !hasRadar)
return null;
var loc = MinimapPixelToCell(pos);
var mi = new MouseInput
{
Location = loc.ToInt2(),
Button = MouseButton.Right,
Modifiers = Game.GetModifierKeys()
};
var cursor = world.OrderGenerator.GetCursor( world, loc, mi );
if (cursor == null)
return "default";
return CursorProvider.HasCursorSequence(cursor+"-minimap") ? cursor+"-minimap"
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3182" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs" startline="91" endline="124">
<![CDATA[
public override bool HandleMouseInput(MouseInput mi)
{
if (!hasRadar || radarAnimating) return false;	// we're not set up for this.
if (!mapRect.Contains(mi.Location))
return false;
var loc = MinimapPixelToCell(mi.Location);
if ((mi.Event == MouseInputEvent.Down || mi.Event == MouseInputEvent.Move) && mi.Button == MouseButton.Left)
Game.viewport.Center(loc.ToFloat2());
if (mi.Event == MouseInputEvent.Down && mi.Button == MouseButton.Right)
{
var fakemi = new MouseInput
{
Event = MouseInputEvent.Down,
Button = MouseButton.Right,
Modifiers = mi.Modifiers,
Location = (((loc.ToPPos().ToFloat2()) - Game.viewport.Location) * Game.viewport.Zoom).ToInt2()
};
if (WorldInteractionController != null)
{
var controller = Ui.Root.Get<WorldInteractionControllerWidget>(WorldInteractionController);
controller.HandleMouseInput(fakemi);
fakemi.Event = MouseInputEvent.Up;
controller.HandleMouseInput(fakemi);
}
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs" startline="88" endline="121">
<![CDATA[
public override bool HandleMouseInput(MouseInput mi)
{
if (!hasRadar || animating) return false;
if (!mapRect.Contains(mi.Location))
return false;
var loc = MinimapPixelToCell(mi.Location);
if ((mi.Event == MouseInputEvent.Down || mi.Event == MouseInputEvent.Move) && mi.Button == MouseButton.Left)
Game.viewport.Center(loc.ToFloat2());
if (mi.Event == MouseInputEvent.Down && mi.Button == MouseButton.Right)
{
var fakemi = new MouseInput
{
Event = MouseInputEvent.Down,
Button = MouseButton.Right,
Modifiers = mi.Modifiers,
Location = (loc.ToPPos().ToFloat2() - Game.viewport.Location).ToInt2()
};
if (WorldInteractionController != null)
{
var controller = Ui.Root.Get<WorldInteractionControllerWidget>(WorldInteractionController);
controller.HandleMouseInput(fakemi);
fakemi.Event = MouseInputEvent.Up;
controller.HandleMouseInput(fakemi);
}
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3183" semantic_similarity= "0.82" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs" startline="167" endline="220">
<![CDATA[
int updateTicks = 0;
public override void Tick()
{
var hasRadarNew = world
.ActorsWithTrait<ProvidesRadar>()
.Any(a => a.Actor.Owner == world.LocalPlayer && a.Trait.IsActive);
if (hasRadarNew != hasRadar)
{
radarAnimating = true;
Sound.PlayNotification(null, "Sounds", (hasRadarNew ? "RadarUp"
}
hasRadar = hasRadarNew;
if (hasRadar)
{
--updateTicks;
if (updateTicks <= 0)
{
updateTicks = 12;
customTerrainSprite.sheet.Texture.SetData(Minimap.CustomTerrainBitmap(world));
}
if (updateTicks == 8)
actorSprite.sheet.Texture.SetData(Minimap.ActorsBitmap(world));
if (updateTicks == 4)
shroudSprite.sheet.Texture.SetData(Minimap.ShroudBitmap(world));
}
if (!radarAnimating)
return;
if (hasRadar)
radarAnimationFrame++;
else
radarAnimationFrame--;
if (radarAnimationFrame <= radarSlideAnimationLength)
radarOrigin = float2.Lerp(radarClosedOrigin, radarOpenOrigin, radarAnimationFrame * 1.0f / radarSlideAnimationLength);
if (radarAnimationFrame >= radarSlideAnimationLength)
radarMinimapHeight = float2.Lerp(0, 1, (radarAnimationFrame - radarSlideAnimationLength) * 1.0f / radarActivateAnimationLength);
if (radarAnimationFrame == (hasRadar ? radarSlideAnimationLength + radarActivateAnimationLength
radarAnimating = false;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs" startline="153" endline="198">
<![CDATA[
public override void Tick()
{
var hasRadarNew = world.LocalPlayer == null || world.LocalPlayer.WinState != WinState.Undefined ||
world.ActorsWithTrait<ProvidesRadar>().Any(a => a.Actor.Owner == world.LocalPlayer && a.Trait.IsActive);
if (hasRadarNew != hasRadar)
{
animating = true;
Sound.Play(hasRadarNew ? RadarOnlineSound
}
hasRadar = hasRadarNew;
if (hasRadar)
{
--updateTicks;
if (updateTicks <= 0)
{
updateTicks = 12;
customTerrainSprite.sheet.Texture.SetData(Minimap.CustomTerrainBitmap(world));
}
if (updateTicks == 8)
actorSprite.sheet.Texture.SetData(Minimap.ActorsBitmap(world));
if (updateTicks == 4)
shroudSprite.sheet.Texture.SetData(Minimap.ShroudBitmap(world));
}
if (!animating)
return;
if (hasRadar)
AnimationFrame++;
else
AnimationFrame--;
radarMinimapHeight = float2.Lerp(0, 1, AnimationFrame*1.0f / AnimationLength);
if (AnimationFrame == (hasRadar ? AnimationLength
animating = false;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3184" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\WorldCommandWidget.cs" startline="99" endline="104">
<![CDATA[
bool PerformStop()
{
PerformKeyboardOrderOnSelection(a => new Order("Stop", a, false));
return true;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\WorldCommandWidget.cs" startline="105" endline="110">
<![CDATA[
bool PerformScatter()
{
PerformKeyboardOrderOnSelection(a => new Order("Scatter", a, false));
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3185" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\WorldCommandWidget.cs" startline="84" endline="95">
<![CDATA[
if (actors.Length > 0)
World.OrderGenerator = new GenericSelectTarget(actors, "AttackMove",
"attackmove", Game.mouseButtonPreference.Action);
return true;
}
void PerformKeyboardOrderOnSelection(Func<Actor, Order> f)
{
var orders = World.Selection.Actors
.Where(a => a.Owner == World.LocalPlayer && !a.Destroyed).Select(f).ToArray();
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\WorldCommandWidget.cs" startline="119" endline="125">
<![CDATA[
return true;
}
bool PerformStanceCycle()
{
var actor = World.Selection.Actors
.Where(a => a.Owner == World.LocalPlayer && !a.Destroyed)
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3186" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\ResourceClaimLayer.cs" startline="70" endline="80">
<![CDATA[
public void UnclaimByCell(CPos cell, Actor claimer)
{
ResourceClaim claim;
if (claimByCell.TryGetValue(cell, out claim))
Unclaim(claim, claimer);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\ResourceClaimLayer.cs" startline="81" endline="91">
<![CDATA[
public void UnclaimByActor(Actor claimer)
{
ResourceClaim claim;
if (claimByActor.TryGetValue(claimer, out claim))
Unclaim(claim, claimer);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3187" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3188" semantic_similarity= "0.84" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\World\PlayMusicOnMapLoad.cs" startline="23" endline="31">
<![CDATA[
public object Create(ActorInitializer init) { return new PlayMusicOnMapLoad(this); }
}
class PlayMusicOnMapLoad
{
PlayMusicOnMapLoadInfo Info;
public PlayMusicOnMapLoad(PlayMusicOnMapLoadInfo info) { Info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3189" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3190" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new BaseAttackNotifier(this); }
}
public class BaseAttackNotifier
{
BaseAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public BaseAttackNotifier(BaseAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3191" semantic_similarity= "0.97" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs" startline="33" endline="49">
<![CDATA[
public void Damaged(Actor self, AttackInfo e)
{
if (!self.HasTrait<Building>())
return;
if (e.Attacker != null && e.Attacker.Owner == self.Owner)
return;
if (self.World.FrameNumber - lastAttackTime > info.NotifyInterval * 25)
Sound.PlayNotification(self.Owner, "Speech", "BaseAttack", self.Owner.Country.Race);
lastAttackLocation = self.CenterLocation.ToCPos();
lastAttackTime = self.World.FrameNumber;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="33" endline="49">
<![CDATA[
public void Damaged(Actor self, AttackInfo e)
{
if (!self.HasTrait<Harvester>())
return;
if (e.Attacker != null && e.Attacker.Owner == self.Owner)
return;
if (self.World.FrameNumber - lastAttackTime > info.NotifyInterval * 25)
Sound.PlayNotification(self.Owner, "Speech", "HarvesterAttack", self.Owner.Country.Race);
lastAttackLocation = self.CenterLocation.ToCPos();
lastAttackTime = self.World.FrameNumber;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3192" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs" startline="21" endline="32">
<![CDATA[
public object Create(ActorInitializer init) { return new HarvesterAttackNotifier(this); }
}
public class HarvesterAttackNotifier
{
HarvesterAttackNotifierInfo info;
public int lastAttackTime = -1;
public CPos lastAttackLocation;
public HarvesterAttackNotifier(HarvesterAttackNotifierInfo info) { this.info = info; }
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Widgets\ColorPreviewManagerWidget.cs" startline="23" endline="37">
<![CDATA[
public readonly string Palette = "colorpicker";
public readonly int[] RemapIndices = {};
public readonly float Ramp = 0.05f;
public HSLColor Color;
HSLColor cachedColor;
WorldRenderer worldRenderer;
Palette preview;
[ObjectCreator.UseCtor]
public ColorPreviewManagerWidget(WorldRenderer worldRenderer)
{
this.worldRenderer = worldRenderer;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3193" semantic_similarity= "0.75" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RenderShroudCircle.cs" startline="32" endline="46">
<![CDATA[
}
class RenderShroudCircle
{
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (self.Owner != self.World.LocalPlayer)
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Color.Cyan),
self.CenterLocation.ToFloat2(), self.Info.Traits.Get<CreatesShroudInfo>().Range,
Color.FromArgb(96, Color.Black),
1);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Buildings\BaseProvider.cs" startline="58" endline="70">
<![CDATA[
public void RenderBeforeWorld(WorldRenderer wr, Actor self)
{
if (!self.Owner.IsAlliedWith(self.World.RenderPlayer))
return;
wr.DrawRangeCircleWithContrast(
Color.FromArgb(128, Ready() ? Color.White
self.CenterLocation.ToFloat2(), Info.Range,
Color.FromArgb(96, Color.Black), 1);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3194" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\Infiltrates.cs" startline="38" endline="53">
<![CDATA[
public IEnumerable<IOrderTargeter> Orders
{
get
{
yield return new InfiltratorOrderTargeter(target => CanInfiltrate(target));
}
}
public Order IssueOrder(Actor self, IOrderTargeter order, Target target, bool queued)
{
if (order.OrderID == "Infiltrate")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Mods.RA\RepairsBridges.cs" startline="30" endline="35">
<![CDATA[
{
if (order.OrderID == "RepairBridge")
return new Order(order.OrderID, self, queued) { TargetActor = target.Actor };
return null;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3195" semantic_similarity= "0.8" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Renderer.SdlCommon\MultiTapDetection.cs" startline="27" endline="32">
<![CDATA[
public static int InfoFromMouse(byte MBName)
{
var clickHistory = ClickHistoryCache[MBName];
return clickHistory.LastTapCount();
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.Renderer.SdlCommon\MultiTapDetection.cs" startline="39" endline="44">
<![CDATA[
public static int InfoFromKeyboard(string KeyName)
{
var keyHistory = KeyHistoryCache[KeyName];
return keyHistory.LastTapCount();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3196" semantic_similarity= "1.0" >
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmBuilder.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
<clone_fragment file="c:\Users\win10Admin\Desktop\Test_Cases\OpenRA\OpenRA\OpenRA.TilesetBuilder\frmNew.Designer.cs" startline="15" endline="21">
<![CDATA[
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}
]]>
</clone_fragment>
</clone_pair>
</clones>
