<clones>
<clone_pair pairid="1" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="2" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="3" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="4" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="5" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="6" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="7" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="8" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="9" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="10" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="11" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="12" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="13" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="14" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="15" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="16" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="17" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="18" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="19" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="20" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="21" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="22" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="23" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="24" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="25" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="26" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="27" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="28" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="29" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="30" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="31" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="80" endline="86">
<![CDATA[
public AssemblyReferences Union(IEnumerable<Assembly> assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
return new AssemblyReferences(Assemblies.Union(assemblies), Paths);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="87" endline="93">
<![CDATA[
public AssemblyReferences Union(IEnumerable<string> paths)
{
Guard.AgainstNullArgument("paths", paths);
return new AssemblyReferences(Assemblies, Paths.Union(paths));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="32" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="80" endline="86">
<![CDATA[
public AssemblyReferences Union(IEnumerable<Assembly> assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
return new AssemblyReferences(Assemblies.Union(assemblies), Paths);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="101" endline="107">
<![CDATA[
public AssemblyReferences Except(IEnumerable<Assembly> assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
return new AssemblyReferences(Assemblies.Except(assemblies), Paths);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="33" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="87" endline="93">
<![CDATA[
public AssemblyReferences Union(IEnumerable<string> paths)
{
Guard.AgainstNullArgument("paths", paths);
return new AssemblyReferences(Assemblies, Paths.Union(paths));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="108" endline="114">
<![CDATA[
public AssemblyReferences Except(IEnumerable<string> paths)
{
Guard.AgainstNullArgument("paths", paths);
return new AssemblyReferences(Assemblies, Paths.Except(paths));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="34" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="101" endline="107">
<![CDATA[
public AssemblyReferences Except(IEnumerable<Assembly> assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
return new AssemblyReferences(Assemblies.Except(assemblies), Paths);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\AssemblyReferences.cs" startline="108" endline="114">
<![CDATA[
public AssemblyReferences Except(IEnumerable<string> paths)
{
Guard.AgainstNullArgument("paths", paths);
return new AssemblyReferences(Assemblies, Paths.Except(paths));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="35" semantic_similarity= "0.82" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\FileParserContext.cs" startline="7" endline="13">
<![CDATA[
public FileParserContext()
{
Namespaces = new List<string>();
References = new List<string>();
LoadedScripts = new List<string>();
BodyLines = new List<string>();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\FilePreProcessorResult.cs" startline="7" endline="12">
<![CDATA[
public FilePreProcessorResult()
{
Namespaces = new List<string>();
LoadedScripts = new List<string>();
References = new List<string>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="36" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\FileParserContext.cs" startline="7" endline="13">
<![CDATA[
public FileParserContext()
{
Namespaces = new List<string>();
References = new List<string>();
LoadedScripts = new List<string>();
BodyLines = new List<string>();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\VisualStudioSolution.cs" startline="15" endline="22">
<![CDATA[
public VisualStudioSolution()
{
Header = new StringBuilder();
Projects = new StringBuilder();
Global = new StringBuilder();
AddHeader();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="37" semantic_similarity= "0.78" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\FilePreProcessorResult.cs" startline="7" endline="12">
<![CDATA[
public FilePreProcessorResult()
{
Namespaces = new List<string>();
LoadedScripts = new List<string>();
References = new List<string>();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\DirectoryInfo.cs" startline="11" endline="16">
<![CDATA[
public DirectoryInfo()
{
Guid = Guid.NewGuid();
Files = new List<string>();
Directories = new Dictionary<string, DirectoryInfo>();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="38" semantic_similarity= "0.77" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\FilePreProcessorResult.cs" startline="7" endline="12">
<![CDATA[
public FilePreProcessorResult()
{
Namespaces = new List<string>();
LoadedScripts = new List<string>();
References = new List<string>();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\VisualStudioSolution.cs" startline="15" endline="22">
<![CDATA[
public VisualStudioSolution()
{
Header = new StringBuilder();
Projects = new StringBuilder();
Global = new StringBuilder();
AddHeader();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="39" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="12" endline="17">
<![CDATA[
public static bool IsErrorEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Error);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="18" endline="23">
<![CDATA[
public static bool IsFatalEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Fatal);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="40" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="12" endline="17">
<![CDATA[
public static bool IsErrorEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Error);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="24" endline="29">
<![CDATA[
public static bool IsInfoEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Info);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="41" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="12" endline="17">
<![CDATA[
public static bool IsErrorEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Error);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="30" endline="35">
<![CDATA[
public static bool IsTraceEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Trace);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="42" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="12" endline="17">
<![CDATA[
public static bool IsErrorEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Error);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="36" endline="41">
<![CDATA[
public static bool IsWarnEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Warn);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="43" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="18" endline="23">
<![CDATA[
public static bool IsFatalEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Fatal);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="24" endline="29">
<![CDATA[
public static bool IsInfoEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Info);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="44" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="18" endline="23">
<![CDATA[
public static bool IsFatalEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Fatal);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="30" endline="35">
<![CDATA[
public static bool IsTraceEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Trace);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="45" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="18" endline="23">
<![CDATA[
public static bool IsFatalEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Fatal);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="36" endline="41">
<![CDATA[
public static bool IsWarnEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Warn);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="46" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="24" endline="29">
<![CDATA[
public static bool IsInfoEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Info);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="30" endline="35">
<![CDATA[
public static bool IsTraceEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Trace);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="47" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="24" endline="29">
<![CDATA[
public static bool IsInfoEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Info);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="36" endline="41">
<![CDATA[
public static bool IsWarnEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Warn);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="48" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="30" endline="35">
<![CDATA[
public static bool IsTraceEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Trace);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="36" endline="41">
<![CDATA[
public static bool IsWarnEnabled(this ILog logger)
{
Guard.AgainstNullArgument("logger", logger);
return logger.Log(LogLevel.Warn);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="49" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="42" endline="47">
<![CDATA[
public static void Debug(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Debug, messageFunc);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="141" endline="146">
<![CDATA[
public static void Info(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Info, messageFunc);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="50" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="42" endline="47">
<![CDATA[
public static void Debug(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Debug, messageFunc);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="172" endline="177">
<![CDATA[
public static void Trace(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Trace, messageFunc);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="51" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="42" endline="47">
<![CDATA[
public static void Debug(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Debug, messageFunc);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="203" endline="208">
<![CDATA[
public static void Warn(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Warn, messageFunc);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="52" semantic_similarity= "0.77" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="48" endline="55">
<![CDATA[
public static void Debug(this ILog logger, string message)
{
if (logger.IsDebugEnabled())
{
logger.Log(LogLevel.Debug, message.AsFunc());
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="64" endline="71">
<![CDATA[
public static void DebugException(this ILog logger, string message, Exception exception)
{
if (logger.IsDebugEnabled())
{
logger.Log(LogLevel.Debug, message.AsFunc(), exception);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="53" semantic_similarity= "0.76" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="64" endline="71">
<![CDATA[
public static void DebugException(this ILog logger, string message, Exception exception)
{
if (logger.IsDebugEnabled())
{
logger.Log(LogLevel.Debug, message.AsFunc(), exception);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="72" endline="80">
<![CDATA[
public static void DebugException(
this ILog logger, string message, Exception exception, params object[] formatParams)
{
if (logger.IsDebugEnabled())
{
logger.Log(LogLevel.Debug, message.AsFunc(), exception, formatParams);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="54" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="141" endline="146">
<![CDATA[
public static void Info(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Info, messageFunc);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="172" endline="177">
<![CDATA[
public static void Trace(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Trace, messageFunc);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="55" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="141" endline="146">
<![CDATA[
public static void Info(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Info, messageFunc);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="203" endline="208">
<![CDATA[
public static void Warn(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Warn, messageFunc);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="56" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="172" endline="177">
<![CDATA[
public static void Trace(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Trace, messageFunc);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\LogExtensions.cs" startline="203" endline="208">
<![CDATA[
public static void Warn(this ILog logger, Func<string> messageFunc)
{
Guard.AgainstNullArgument("logger", logger);
logger.Log(LogLevel.Warn, messageFunc);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="57" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="58" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="59" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="60" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="61" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="62" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="63" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="64" semantic_similarity= "0.79" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\Printers.cs" startline="9" endline="13">
<![CDATA[
private readonly Dictionary<Type, Func<object, string>> _dictionary = new Dictionary<Type, Func<object, string>>();
public Printers(IObjectSerializer serializer)
{
_serializer = serializer;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="65" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="775" endline="782">
<![CDATA[
public NLogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("NLog.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="994" endline="1001">
<![CDATA[
public Log4NetLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("log4net.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="66" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="775" endline="782">
<![CDATA[
public NLogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("NLog.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1245" endline="1252">
<![CDATA[
public EntLibLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Microsoft.Practices.EnterpriseLibrary.Logging.Logger not found");
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="67" semantic_similarity= "0.93" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="775" endline="782">
<![CDATA[
public NLogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("NLog.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1398" endline="1405">
<![CDATA[
public SerilogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Serilog.Log not found");
}
_getLoggerByNameDelegate = GetForContextMethodCall();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="68" semantic_similarity= "0.93" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="775" endline="782">
<![CDATA[
public NLogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("NLog.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1706" endline="1714">
<![CDATA[
public LoupeLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Gibraltar.Agent.Log (Loupe) not found");
}
_logWriteDelegate = GetLogWriteDelegate();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="69" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="788" endline="793">
<![CDATA[
}
public override Logger GetLogger(string name)
{
return new NLogLogger(_getLoggerByNameDelegate(name)).Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1007" endline="1012">
<![CDATA[
}
public override Logger GetLogger(string name)
{
return new Log4NetLogger(_getLoggerByNameDelegate(name)).Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="70" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="788" endline="793">
<![CDATA[
}
public override Logger GetLogger(string name)
{
return new NLogLogger(_getLoggerByNameDelegate(name)).Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1411" endline="1416">
<![CDATA[
}
public override Logger GetLogger(string name)
{
return new SerilogLogger(_getLoggerByNameDelegate(name)).Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="71" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="799" endline="807">
<![CDATA[
protected override OpenNdc GetOpenNdcMethod()
{
Type ndcContextType = Type.GetType("NLog.NestedDiagnosticsContext, NLog");
MethodInfo pushMethod = ndcContextType.GetMethodPortable("Push", typeof(string));
ParameterExpression messageParam = Expression.Parameter(typeof(string), "message");
MethodCallExpression pushMethodCall = Expression.Call(null, pushMethod, messageParam);
return Expression.Lambda<OpenNdc>(pushMethodCall, messageParam).Compile();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1018" endline="1026">
<![CDATA[
protected override OpenNdc GetOpenNdcMethod()
{
Type ndcContextType = Type.GetType("log4net.NDC, log4net");
MethodInfo pushMethod = ndcContextType.GetMethodPortable("Push", typeof(string));
ParameterExpression messageParam = Expression.Parameter(typeof(string), "message");
MethodCallExpression pushMethodCall = Expression.Call(null, pushMethod, messageParam);
return Expression.Lambda<OpenNdc>(pushMethodCall, messageParam).Compile();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="72" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="808" endline="833">
<![CDATA[
protected override OpenMdc GetOpenMdcMethod()
{
Type mdcContextType = Type.GetType("NLog.MappedDiagnosticsContext, NLog");
MethodInfo setMethod = mdcContextType.GetMethodPortable("Set", typeof(string), typeof(string));
MethodInfo removeMethod = mdcContextType.GetMethodPortable("Remove", typeof(string));
ParameterExpression keyParam = Expression.Parameter(typeof(string), "key");
ParameterExpression valueParam = Expression.Parameter(typeof(string), "value");
MethodCallExpression setMethodCall = Expression.Call(null, setMethod, keyParam, valueParam);
MethodCallExpression removeMethodCall = Expression.Call(null, removeMethod, keyParam);
Action<string, string> set = Expression
.Lambda<Action<string, string>>(setMethodCall, keyParam, valueParam)
.Compile();
Action<string> remove = Expression
.Lambda<Action<string>>(removeMethodCall, keyParam)
.Compile();
return (key, value) =>
{
set(key, value);
return new DisposableAction(() => remove(key));
};
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1027" endline="1052">
<![CDATA[
protected override OpenMdc GetOpenMdcMethod()
{
Type mdcContextType = Type.GetType("log4net.MDC, log4net");
MethodInfo setMethod = mdcContextType.GetMethodPortable("Set", typeof(string), typeof(string));
MethodInfo removeMethod = mdcContextType.GetMethodPortable("Remove", typeof(string));
ParameterExpression keyParam = Expression.Parameter(typeof(string), "key");
ParameterExpression valueParam = Expression.Parameter(typeof(string), "value");
MethodCallExpression setMethodCall = Expression.Call(null, setMethod, keyParam, valueParam);
MethodCallExpression removeMethodCall = Expression.Call(null, removeMethod, keyParam);
Action<string, string> set = Expression
.Lambda<Action<string, string>>(setMethodCall, keyParam, valueParam)
.Compile();
Action<string> remove = Expression
.Lambda<Action<string>>(removeMethodCall, keyParam)
.Compile();
return (key, value) =>
{
set(key, value);
return new DisposableAction(() => remove(key));
};
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="73" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="839" endline="847">
<![CDATA[
private static Func<string, object> GetGetLoggerMethodCall()
{
Type logManagerType = GetLogManagerType();
MethodInfo method = logManagerType.GetMethodPortable("GetLogger", typeof(string));
ParameterExpression nameParam = Expression.Parameter(typeof(string), "name");
MethodCallExpression methodCall = Expression.Call(null, method, nameParam);
return Expression.Lambda<Func<string, object>>(methodCall, nameParam).Compile();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1058" endline="1066">
<![CDATA[
private static Func<string, object> GetGetLoggerMethodCall()
{
Type logManagerType = GetLogManagerType();
MethodInfo method = logManagerType.GetMethodPortable("GetLogger", typeof(string));
ParameterExpression nameParam = Expression.Parameter(typeof(string), "name");
MethodCallExpression methodCall = Expression.Call(null, method, nameParam);
return Expression.Lambda<Func<string, object>>(methodCall, nameParam).Compile();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="74" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="994" endline="1001">
<![CDATA[
public Log4NetLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("log4net.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1245" endline="1252">
<![CDATA[
public EntLibLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Microsoft.Practices.EnterpriseLibrary.Logging.Logger not found");
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="75" semantic_similarity= "0.93" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="994" endline="1001">
<![CDATA[
public Log4NetLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("log4net.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1398" endline="1405">
<![CDATA[
public SerilogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Serilog.Log not found");
}
_getLoggerByNameDelegate = GetForContextMethodCall();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="76" semantic_similarity= "0.93" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="994" endline="1001">
<![CDATA[
public Log4NetLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("log4net.LogManager not found");
}
_getLoggerByNameDelegate = GetGetLoggerMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1706" endline="1714">
<![CDATA[
public LoupeLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Gibraltar.Agent.Log (Loupe) not found");
}
_logWriteDelegate = GetLogWriteDelegate();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="77" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1007" endline="1012">
<![CDATA[
}
public override Logger GetLogger(string name)
{
return new Log4NetLogger(_getLoggerByNameDelegate(name)).Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1411" endline="1416">
<![CDATA[
}
public override Logger GetLogger(string name)
{
return new SerilogLogger(_getLoggerByNameDelegate(name)).Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="78" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1245" endline="1252">
<![CDATA[
public EntLibLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Microsoft.Practices.EnterpriseLibrary.Logging.Logger not found");
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1398" endline="1405">
<![CDATA[
public SerilogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Serilog.Log not found");
}
_getLoggerByNameDelegate = GetForContextMethodCall();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="79" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1245" endline="1252">
<![CDATA[
public EntLibLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Microsoft.Practices.EnterpriseLibrary.Logging.Logger not found");
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1706" endline="1714">
<![CDATA[
public LoupeLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Gibraltar.Agent.Log (Loupe) not found");
}
_logWriteDelegate = GetLogWriteDelegate();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="80" semantic_similarity= "0.93" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1398" endline="1405">
<![CDATA[
public SerilogLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Serilog.Log not found");
}
_getLoggerByNameDelegate = GetForContextMethodCall();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Contracts\App_Packages\LibLog.4.2\LibLog.cs" startline="1706" endline="1714">
<![CDATA[
public LoupeLogProvider()
{
if (!IsLoggerAvailable())
{
throw new InvalidOperationException("Gibraltar.Agent.Log (Loupe) not found");
}
_logWriteDelegate = GetLogWriteDelegate();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="81" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="82" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="83" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="84" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="85" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="86" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="87" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="88" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="89" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="90" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="91" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="92" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="93" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="94" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="95" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="96" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="97" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="98" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="99" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="100" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="101" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="102" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="103" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="104" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="105" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="106" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="107" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="108" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="109" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="110" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="111" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="112" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\LoadLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public LoadLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="113" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="114" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="115" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="116" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="117" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="118" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReferenceLineProcessor.cs" startline="15" endline="20">
<![CDATA[
public ReferenceLineProcessor(IFileSystem fileSystem)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
_fileSystem = fileSystem;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="119" semantic_similarity= "0.76" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Repl.cs" startline="49" endline="55">
<![CDATA[
public override void Terminate()
{
base.Terminate();
_log.Debug("Exiting console");
Console.Exit();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="154" endline="159">
<![CDATA[
public virtual void Terminate()
{
_log.Debug("Terminating packs");
ScriptPackSession.TerminatePacks();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="120" semantic_similarity= "0.76" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutorExtensions.cs" startline="14" endline="20">
<![CDATA[
{
Guard.AgainstNullArgument("executor", executor);
Guard.AgainstNullArgument("typesFromReferencedAssembly", typesFromReferencedAssembly);
var namespaces = typesFromReferencedAssembly.Select(t => t.Namespace);
executor.ImportNamespaces(namespaces.ToArray());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutorExtensions.cs" startline="28" endline="37">
<![CDATA[
public static void AddReferences(this IScriptExecutor executor, params Type[] typesFromReferencedAssembly)
{
Guard.AgainstNullArgument("executor", executor);
Guard.AgainstNullArgument("typeFromReferencedAssembly", typesFromReferencedAssembly);
var paths = typesFromReferencedAssembly.Select(t => t.Assembly.Location);
executor.AddReferences(paths.ToArray());
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="121" semantic_similarity= "0.76" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="91" endline="96">
<![CDATA[
public virtual void ImportNamespaces(params string[] namespaces)
{
Guard.AgainstNullArgument("namespaces", namespaces);
Namespaces = new ReadOnlyCollection<string>(Namespaces.Union(namespaces).ToArray());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="97" endline="102">
<![CDATA[
public virtual void RemoveNamespaces(params string[] namespaces)
{
Guard.AgainstNullArgument("namespaces", namespaces);
Namespaces = new ReadOnlyCollection<string>(Namespaces.Except(namespaces).ToArray());
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="122" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="103" endline="109">
<![CDATA[
public virtual void AddReferences(params Assembly[] assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
References = References.Union(assemblies);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="110" endline="116">
<![CDATA[
public virtual void RemoveReferences(params Assembly[] assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
References = References.Except(assemblies);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="123" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="103" endline="109">
<![CDATA[
public virtual void AddReferences(params Assembly[] assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
References = References.Union(assemblies);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="117" endline="123">
<![CDATA[
public virtual void AddReferences(params string[] paths)
{
Guard.AgainstNullArgument("paths", paths);
References = References.Union(paths);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="124" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="110" endline="116">
<![CDATA[
public virtual void RemoveReferences(params Assembly[] assemblies)
{
Guard.AgainstNullArgument("assemblies", assemblies);
References = References.Except(assemblies);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="124" endline="130">
<![CDATA[
public virtual void RemoveReferences(params string[] paths)
{
Guard.AgainstNullArgument("paths", paths);
References = References.Except(paths);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="125" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="117" endline="123">
<![CDATA[
public virtual void AddReferences(params string[] paths)
{
Guard.AgainstNullArgument("paths", paths);
References = References.Union(paths);
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ScriptExecutor.cs" startline="124" endline="130">
<![CDATA[
public virtual void RemoveReferences(params string[] paths)
{
Guard.AgainstNullArgument("paths", paths);
References = References.Except(paths);
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="126" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="127" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="128" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="129" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="130" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\AliasCommand.cs" startline="13" endline="18">
<![CDATA[
public AliasCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="131" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="132" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="133" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="134" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ClearCommand.cs" startline="12" endline="19">
<![CDATA[
}
public ClearCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="135" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="136" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="137" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\CwdCommand.cs" startline="10" endline="15">
<![CDATA[
public CwdCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="138" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="139" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\HelpCommand.cs" startline="11" endline="16">
<![CDATA[
public HelpCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="140" semantic_similarity= "0.9" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\ReplCommands\ExitCommand.cs" startline="17" endline="24">
<![CDATA[
}
public ExitCommand(IConsole console)
{
Guard.AgainstNullArgument("console", console);
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\DeferredCreationCommand.cs" startline="9" endline="14">
<![CDATA[
public DeferredCreationCommand(Func<TCommand> factory)
{
Guard.AgainstNullArgument("factory", factory);
_factory = factory;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="141" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="142" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="143" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="144" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="145" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="146" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="147" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="148" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="149" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="150" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="151" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="152" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="153" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="154" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="155" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="156" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="157" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="158" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="159" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="160" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="161" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="162" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="163" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="164" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="165" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="166" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="167" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="168" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="169" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="170" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="171" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="172" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="173" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="174" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="175" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="176" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="177" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Engine.Mono\MonoScriptEngine.cs" startline="24" endline="31">
<![CDATA[
public MonoScriptEngine(IScriptHostFactory scriptHostFactory, ILogProvider logProvider)
{
Guard.AgainstNullArgument("logProvider", logProvider);
_scriptHostFactory = scriptHostFactory;
_log = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\NugetInstallationProvider.cs" startline="20" endline="27">
<![CDATA[
public NugetInstallationProvider(IFileSystem fileSystem, ILogProvider logProvider)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
Guard.AgainstNullArgument("logProvider", logProvider);
_fileSystem = fileSystem;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="178" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Engine.Mono\MonoScriptEngine.cs" startline="24" endline="31">
<![CDATA[
public MonoScriptEngine(IScriptHostFactory scriptHostFactory, ILogProvider logProvider)
{
Guard.AgainstNullArgument("logProvider", logProvider);
_scriptHostFactory = scriptHostFactory;
_log = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\PackageContainer.cs" startline="22" endline="29">
<![CDATA[
public PackageContainer(IFileSystem fileSystem, ILogProvider logProvider)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
Guard.AgainstNullArgument("logProvider", logProvider);
_fileSystem = fileSystem;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="179" semantic_similarity= "0.87" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Engine.Mono\MonoScriptEngine.cs" startline="24" endline="31">
<![CDATA[
public MonoScriptEngine(IScriptHostFactory scriptHostFactory, ILogProvider logProvider)
{
Guard.AgainstNullArgument("logProvider", logProvider);
_scriptHostFactory = scriptHostFactory;
_log = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\PackageInstaller.cs" startline="13" endline="20">
<![CDATA[
public PackageInstaller(IInstallationProvider installer, ILogProvider logProvider)
{
Guard.AgainstNullArgument("installer", installer);
Guard.AgainstNullArgument("logProvider", logProvider);
_installer = installer;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="180" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="181" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="182" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="183" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="184" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="185" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="186" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="187" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="188" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="189" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="190" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="191" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="192" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="193" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="194" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="195" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="196" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="197" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="198" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="199" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="200" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="201" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="202" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="203" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="204" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="205" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="206" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="207" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="208" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="209" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="210" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="211" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="212" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="213" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="214" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="215" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="216" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="217" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="218" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="219" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="220" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="221" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="222" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="223" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="224" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="225" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\ProfileOptimizationShim.cs" startline="11" endline="18">
<![CDATA[
{
if (profileOptimization != null)
{
profileOptimization
.GetMethod("SetProfileRoot", BindingFlags.Public | BindingFlags.Static)
.Invoke(null, new object[] { directoryPath });
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\ProfileOptimizationShim.cs" startline="19" endline="28">
<![CDATA[
public static void StartProfile(string profile)
{
if (profileOptimization != null)
{
profileOptimization
.GetMethod("StartProfile", BindingFlags.Public | BindingFlags.Static)
.Invoke(null, new object[] { profile });
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="226" semantic_similarity= "0.91" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\ExecuteLooseScriptCommand.cs" startline="21" endline="47">
<![CDATA[
public override CommandResult Execute()
{
try
{
FileSystemMigrator.Migrate();
var assemblyPaths = Enumerable.Empty<string>();
var workingDirectory = FileSystem.CurrentDirectory;
assemblyPaths = AssemblyResolver.GetAssemblyPaths(workingDirectory);
Composer.Compose(workingDirectory);
ScriptExecutor.Initialize(assemblyPaths, _scriptPackResolver.GetPacks());
ScriptExecutor.ScriptEngine.CacheDirectory = Path.Combine(workingDirectory ?? FileSystem.CurrentDirectory, FileSystem.DllCacheFolder);
var scriptResult = ScriptExecutor.ExecuteScript(Script, ScriptArgs);
var commandResult = Inspect(scriptResult);
ScriptExecutor.Terminate();
return commandResult;
}
catch (Exception ex)
{
Logger.ErrorException("Error executing script '{0}'", ex, Script);
return CommandResult.Error;
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs\Command\ExecuteScriptCommand.cs" startline="21" endline="52">
<![CDATA[
public override CommandResult Execute()
{
try
{
FileSystemMigrator.Migrate();
var assemblyPaths = Enumerable.Empty<string>();
var workingDirectory = FileSystem.GetWorkingDirectory(Script);
if (workingDirectory != null)
{
assemblyPaths = AssemblyResolver.GetAssemblyPaths(workingDirectory);
}
Composer.Compose(workingDirectory);
ScriptExecutor.Initialize(assemblyPaths, _scriptPackResolver.GetPacks(), ScriptArgs);
ScriptExecutor.ScriptEngine.CacheDirectory = Path.Combine(workingDirectory ?? FileSystem.CurrentDirectory, FileSystem.DllCacheFolder);
var scriptResult = ScriptExecutor.Execute(Script, ScriptArgs);
var commandResult = Inspect(scriptResult);
ScriptExecutor.Terminate();
return commandResult;
}
catch (Exception ex)
{
Logger.ErrorException("Error executing script '{0}'", ex, Script);
return CommandResult.Error;
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="227" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="24" endline="29">
<![CDATA[
{
if (argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="228" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="30" endline="49">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentIfNullable<TArgument>(string parameterName, [ValidatedNotNull]TArgument argument)
{
if (typeof(TArgument).IsNullableType() && argument == null)
{
throw new ArgumentNullException(parameterName, string.Format(CultureInfo.InvariantCulture, "{0} is null.", parameterName));
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="229" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="50" endline="69">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentProperty<TProperty>(string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
where TProperty
{
if (argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="230" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="70" endline="91">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
[DebuggerStepThrough]
public static void AgainstNullArgumentPropertyIfNullable<TProperty>(
string parameterName, string propertyName, [ValidatedNotNull]TProperty argumentProperty)
{
if (typeof(TProperty).IsNullableType() && argumentProperty == null)
{
throw new ArgumentException(string.Format(CultureInfo.InvariantCulture, "{0}.{1} is null.", parameterName, propertyName), parameterName);
}
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="231" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Core\Guard.cs" startline="92" endline="104">
<![CDATA[
[SuppressMessage("Microsoft.Performance", "CA1811
private static bool IsNullableType(this Type type)
{
return !type.IsValueType || (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="232" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ColoredConsoleLogProvider.cs" startline="25" endline="31">
<![CDATA[
public ColoredConsoleLogProvider(LogLevel logLevel, IConsole console)
{
Guard.AgainstNullArgument("console", console);
_logLevel = logLevel;
_console = console;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\FileConsole.cs" startline="12" endline="18">
<![CDATA[
public FileConsole(string path, IConsole innerConsole)
{
Guard.AgainstNullArgument("innerConsole", innerConsole);
_path = path;
_innerConsole = innerConsole;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="233" semantic_similarity= "0.91" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="132" endline="137">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>(TImpl value) where TImpl
{
Overrides[typeof(TContract)] = value;
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="234" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="235" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="236" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="237" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="238" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="239" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="240" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="241" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="242" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="243" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="244" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="245" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="246" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="247" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="248" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="249" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ScriptServicesBuilder.cs" startline="138" endline="143">
<![CDATA[
public IScriptServicesBuilder SetOverride<TContract, TImpl>() where TImpl
{
Overrides[typeof(TContract)] = typeof(TImpl);
return this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="250" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="251" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="252" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="253" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="254" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="255" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="256" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="257" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="258" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="259" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="260" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="261" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="262" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="263" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="264" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="26" endline="31">
<![CDATA[
public TConfig ScriptHostFactory<T>() where T
{
Overrides[typeof(IScriptHostFactory)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="265" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="266" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="267" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="268" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="269" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="270" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="271" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="272" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="273" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="274" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="275" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="276" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="277" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="278" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="32" endline="37">
<![CDATA[
public TConfig ScriptExecutor<T>() where T
{
Overrides[typeof(IScriptExecutor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="279" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="280" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="281" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="282" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="283" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="284" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="285" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="286" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="287" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="288" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="289" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="290" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="291" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="38" endline="43">
<![CDATA[
public TConfig Repl<T>() where T
{
Overrides[typeof(IRepl)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="292" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="293" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="294" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="295" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="296" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="297" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="298" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="299" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="300" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="301" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="302" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="303" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="44" endline="49">
<![CDATA[
public TConfig ScriptEngine<T>() where T
{
Overrides[typeof(IScriptEngine)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="304" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="305" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="306" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="307" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="308" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="309" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="310" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="311" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="312" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="313" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="314" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="50" endline="55">
<![CDATA[
public TConfig ScriptPackManager<T>() where T
{
Overrides[typeof(IScriptPackManager)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="315" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="316" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="317" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="318" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="319" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="320" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="321" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="322" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="323" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="324" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="56" endline="61">
<![CDATA[
public TConfig ScriptPackResolver<T>() where T
{
Overrides[typeof(IScriptPackResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="325" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="326" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="327" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="328" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="329" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="330" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="331" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="332" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="333" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="62" endline="67">
<![CDATA[
public TConfig InstallationProvider<T>() where T
{
Overrides[typeof(IInstallationProvider)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="334" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="335" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="336" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="337" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="338" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="339" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="340" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="341" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="68" endline="73">
<![CDATA[
public TConfig FileSystem<T>() where T
{
Overrides[typeof(IFileSystem)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="342" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="343" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="344" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="345" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="346" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="347" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="348" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="74" endline="79">
<![CDATA[
public TConfig AssemblyUtility<T>() where T
{
Overrides[typeof(IAssemblyUtility)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="349" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="350" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="351" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="352" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="353" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="354" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="80" endline="85">
<![CDATA[
public TConfig ObjectSerializer<T>() where T
{
Overrides[typeof(IObjectSerializer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="355" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="356" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="357" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="358" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="359" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="86" endline="91">
<![CDATA[
public TConfig PackageContainer<T>() where T
{
Overrides[typeof(IPackageContainer)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="360" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="361" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="362" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="363" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="92" endline="97">
<![CDATA[
public TConfig PackageInstaller<T>() where T
{
Overrides[typeof(IPackageInstaller)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="364" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="365" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="366" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="98" endline="103">
<![CDATA[
public TConfig FilePreProcessor<T>() where T
{
Overrides[typeof(IFilePreProcessor)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="367" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="368" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="104" endline="109">
<![CDATA[
public TConfig PackageAssemblyResolver<T>() where T
{
Overrides[typeof(IPackageAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="369" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="110" endline="115">
<![CDATA[
public TConfig AssemblyResolver<T>() where T
{
Overrides[typeof(IAssemblyResolver)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\ServiceOverrides.cs" startline="116" endline="121">
<![CDATA[
public TConfig Console<T>() where T
{
Overrides[typeof(IConsole)] = typeof(T);
return _this;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="370" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\NugetInstallationProvider.cs" startline="20" endline="27">
<![CDATA[
public NugetInstallationProvider(IFileSystem fileSystem, ILogProvider logProvider)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
Guard.AgainstNullArgument("logProvider", logProvider);
_fileSystem = fileSystem;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\PackageContainer.cs" startline="22" endline="29">
<![CDATA[
public PackageContainer(IFileSystem fileSystem, ILogProvider logProvider)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
Guard.AgainstNullArgument("logProvider", logProvider);
_fileSystem = fileSystem;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="371" semantic_similarity= "0.95" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\NugetInstallationProvider.cs" startline="20" endline="27">
<![CDATA[
public NugetInstallationProvider(IFileSystem fileSystem, ILogProvider logProvider)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
Guard.AgainstNullArgument("logProvider", logProvider);
_fileSystem = fileSystem;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\PackageInstaller.cs" startline="13" endline="20">
<![CDATA[
public PackageInstaller(IInstallationProvider installer, ILogProvider logProvider)
{
Guard.AgainstNullArgument("installer", installer);
Guard.AgainstNullArgument("logProvider", logProvider);
_installer = installer;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="372" semantic_similarity= "0.95" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\PackageContainer.cs" startline="22" endline="29">
<![CDATA[
public PackageContainer(IFileSystem fileSystem, ILogProvider logProvider)
{
Guard.AgainstNullArgument("fileSystem", fileSystem);
Guard.AgainstNullArgument("logProvider", logProvider);
_fileSystem = fileSystem;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\src\ScriptCs.Hosting\Package\PackageInstaller.cs" startline="13" endline="20">
<![CDATA[
public PackageInstaller(IInstallationProvider installer, ILogProvider logProvider)
{
Guard.AgainstNullArgument("installer", installer);
Guard.AgainstNullArgument("logProvider", logProvider);
_installer = installer;
_logger = logProvider.ForCurrentType();
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="373" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsAutoDataAttribute.cs" startline="11" endline="17">
<![CDATA[
new InlineDataAttribute(values),
new AutoDataAttribute(
new Fixture().Customize(new ScriptCsMoqCustomization()))
)
{
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="374" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCsMoqCustomization.cs" startline="12" endline="81">
<![CDATA[
{
this.Customize(fixture);
fixture.Register(() =>
{
var fileSystem = new Mock<IFileSystem>();
fileSystem.SetupGet(f => f.PackagesFile).Returns("scriptcs_packages.config");
fileSystem.SetupGet(f => f.PackagesFolder).Returns("scriptcs_packages");
fileSystem.SetupGet(f => f.BinFolder).Returns("scriptcs_bin");
fileSystem.SetupGet(f => f.DllCacheFolder).Returns(".scriptcs_cache");
fileSystem.SetupGet(f => f.NugetFile).Returns("scriptcs_nuget.config");
fileSystem.SetupGet(f => f.CurrentDirectory).Returns("workingdirectory");
fileSystem.Setup(f => f.FileExists(@"workingdirectory\scriptcs_packages\PackageScripts.csx"))
.Returns(false);
fileSystem.Setup(f => f.DirectoryExists(@"workingdirectory\scriptcs_packages")).Returns(true);
fileSystem.Setup(f => f.GetWorkingDirectory(It.IsAny<string>())).Returns("workingdirectory");
return fileSystem;
});
fixture.Register(() =>
{
var composer = new Mock<IScriptLibraryComposer>();
composer.SetupGet(c => c.ScriptLibrariesFile).Returns("ScriptLibraries.csx");
return composer;
});
var logProvider = new TestLogProvider();
fixture.Register(() => logProvider);
fixture.Register<ILogProvider>(() => logProvider);
fixture.Register(() => new AppDomainAssemblyResolver(
fixture.Create<ILogProvider>(),
fixture.Create<IFileSystem>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IAssemblyUtility>(),
fixture.Create<IDictionary<string, AssemblyInfo>>()));
fixture.Register(() => new ScriptLibraryComposer(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IPackageContainer>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<ILogProvider>()));
fixture.Register(() => new ScriptServices(
fixture.Create<IFileSystem>(),
fixture.Create<IPackageAssemblyResolver>(),
fixture.Create<IScriptExecutor>(),
fixture.Create<IRepl>(),
fixture.Create<IScriptEngine>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptPackResolver>(),
fixture.Create<IPackageInstaller>(),
fixture.Create<IObjectSerializer>(),
fixture.Create<ILogProvider>(),
fixture.Create<IAssemblyResolver>(),
fixture.Create<IEnumerable<IReplCommand>>(),
fixture.Create<IFileSystemMigrator>(),
fixture.Create<IConsole>(),
fixture.Create<IInstallationProvider>(),
fixture.Create<IScriptLibraryComposer>()));
fixture.Register(() => new ScriptExecutor(
fixture.Create<IFileSystem>(),
fixture.Create<IFilePreProcessor>(),
fixture.Create<IScriptEngine>(),
fixture.Create<ILogProvider>(),
fixture.Create<IScriptLibraryComposer>(),
new ScriptInfo()));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="375" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="17" endline="22">
<![CDATA[
}
public Logger GetLogger(string name)
{
return Log;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="376" semantic_similarity= "1.0" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\TestLogProvider.cs" startline="33" endline="49">
<![CDATA[
private bool Log(
LogLevel logLevel, Func<string> messageFunc, Exception exception = null, params object[] formatParameters)
{
if (messageFunc != null)
{
var line = string.Format(
CultureInfo.InvariantCulture,
"{0}
logLevel.ToString().ToUpper(),
string.Format(CultureInfo.InvariantCulture, messageFunc(), formatParameters));
_output.AppendLine(line);
}
return true;
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="377" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\CommandLine.cs" startline="14" endline="33">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"When I execute scriptcs with an unknown option"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run(
new[]
{
"-unknownoption"
},
ScenarioDirectory.Create(scenario))));
"Then scriptcs errors"
.f(() => exception.ShouldBeType<ScriptCsException>());
"And I see an error message regarding the unknown option"
.f(() =>
{
exception.Message.ShouldContain("unknownoption");
});
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\PackageSaving.cs" startline="13" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"When I install ScriptCs.Adder manually"
.f(() =>
{
ScriptCsExe.Install("ScriptCs.Adder.Local", directory = ScenarioDirectory.Create(scenario));
directory.DeleteFile(ScriptCsExe.PackagesFile);
});
"And I save packages"
.f(() => ScriptCsExe.Save(directory));
"Then ScriptCs.Adder is added to the packages file"
.f(() => File.ReadAllText(directory.Map(ScriptCsExe.PackagesFile)).ShouldContain(
@"<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="378" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\CommandLine.cs" startline="14" endline="33">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"When I execute scriptcs with an unknown option"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run(
new[]
{
"-unknownoption"
},
ScenarioDirectory.Create(scenario))));
"Then scriptcs errors"
.f(() => exception.ShouldBeType<ScriptCsException>());
"And I see an error message regarding the unknown option"
.f(() =>
{
exception.Message.ShouldContain("unknownoption");
});
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Migration.cs" startline="13" endline="43">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script directory with a full population of legacy artifacts including a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("bin/foo.txt", null)
.WriteLine(".cache/foo.txt", null)
.WriteLine("packages/foo.txt", null)
.WriteLine("packages.config", @"<?xml version=""1.0"" encoding=""utf-8""?><packages></packages>")
.WriteLine("nuget.config", @"<?xml version=""1.0"" encoding=""utf-8""?><configuration></configuration>")
.WriteLine("hello.csx", @"Console.WriteLine(""Hello, World!"");"));
"When I execute the script"
.f(() => ScriptCsExe.Run("hello.csx", directory));
"Then the artifacts are migrated"
.f(() =>
{
File.Exists(directory.Map("bin/foo.txt")).ShouldBeTrue("bin/ is unchanged");
File.Exists(directory.Map(".cache/foo.txt")).ShouldBeFalse(".cache/ is renamed to .scriptcs_cache/");
File.Exists(directory.Map("packages/foo.txt")).ShouldBeTrue("packages/ is unchanged");
File.Exists(directory.Map("packages.config")).ShouldBeTrue("packages.config is unchanged");
File.Exists(directory.Map("nuget.config")).ShouldBeTrue("nuget.config is unchanged");
File.Exists(directory.Map("scriptcs_bin/foo.txt")).ShouldBeTrue("bin/ is copied to scriptcs_bin/");
File.Exists(directory.Map(".scriptcs_cache/foo.txt")).ShouldBeTrue(".scriptcs_cache/ is renamed from .cache/");
File.Exists(directory.Map("scriptcs_packages/foo.txt")).ShouldBeTrue("packages/ is copied to scriptcs_packages/");
File.Exists(directory.Map("scriptcs_packages.config")).ShouldBeTrue("packages.config is copied to scriptcs_packages.config");
File.Exists(directory.Map("scriptcs_nuget.config")).ShouldBeTrue("nuget.config is copied to scriptcs_nuget.config");
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="379" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ImplicitInstallation.cs" startline="13" endline="51">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And a legacy packages file declaring the ScriptCs.Adder dependency"
.f(() =>
{
var nugetConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
<packageSources>
<clear />
<add key=""Local"" value=""" + Path.GetFullPath(Path.Combine("Support", "Gallery")) + @""" />
</packageSources>
<activePackageSource>
<add key=""All"" value=""(Aggregate source)"" />
</activePackageSource>
</configuration>
";
var packagesConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<packages>
<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />
</packages>
";
directory.WriteLine("nuget.config", nugetConfig);
directory.WriteLine("packages.config", packagesConfig);
});
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="14" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package which contains a framework assembly reference"
.f(() => ScriptCsExe.Install("FrameworkAssemblyReferencer", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="380" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ImplicitInstallation.cs" startline="13" endline="51">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And a legacy packages file declaring the ScriptCs.Adder dependency"
.f(() =>
{
var nugetConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
<packageSources>
<clear />
<add key=""Local"" value=""" + Path.GetFullPath(Path.Combine("Support", "Gallery")) + @""" />
</packageSources>
<activePackageSource>
<add key=""All"" value=""(Aggregate source)"" />
</activePackageSource>
</configuration>
";
var packagesConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<packages>
<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />
</packages>
";
directory.WriteLine("nuget.config", nugetConfig);
directory.WriteLine("packages.config", packagesConfig);
});
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying the log level as debug"
.f(() => directory.WriteLine("scriptcs.opts", @"{ logLevel
"When I execute the script without the log level option"
.f(() => output = ScriptCsExe.Run("foo.csx", false, directory));
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="381" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ImplicitInstallation.cs" startline="13" endline="51">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And a legacy packages file declaring the ScriptCs.Adder dependency"
.f(() =>
{
var nugetConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
<packageSources>
<clear />
<add key=""Local"" value=""" + Path.GetFullPath(Path.Combine("Support", "Gallery")) + @""" />
</packageSources>
<activePackageSource>
<add key=""All"" value=""(Aggregate source)"" />
</activePackageSource>
</configuration>
";
var packagesConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<packages>
<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />
</packages>
";
directory.WriteLine("nuget.config", nugetConfig);
directory.WriteLine("packages.config", packagesConfig);
});
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="28" endline="50">
<![CDATA[
[Scenario]
public static void CustomConfiguration(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying to run as debug"
.f(() => directory.WriteLine("custom.opts", @"{ logLevel
"When I execute the script without the log level option but specifying the custom config"
.f(() =>
{
var args = new[] { "-config", "custom.opts", };
output = ScriptCsExe.Run("foo.csx", false, args, directory);
});
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="382" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ImplicitInstallation.cs" startline="13" endline="51">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And a legacy packages file declaring the ScriptCs.Adder dependency"
.f(() =>
{
var nugetConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
<packageSources>
<clear />
<add key=""Local"" value=""" + Path.GetFullPath(Path.Combine("Support", "Gallery")) + @""" />
</packageSources>
<activePackageSource>
<add key=""All"" value=""(Aggregate source)"" />
</activePackageSource>
</configuration>
";
var packagesConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<packages>
<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />
</packages>
";
directory.WriteLine("nuget.config", nugetConfig);
directory.WriteLine("packages.config", packagesConfig);
});
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="38" endline="56">
<![CDATA[
[Scenario(Skip = "Failing with a path length exception")]
public static void UsingAMethodInAScriptLibraryInTheRepl(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Type
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script into REPL"
.f(() => output = ScriptCsExe.Run("foo.csx", false, new[] { "-r" }, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="383" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ImplicitInstallation.cs" startline="13" endline="51">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And a legacy packages file declaring the ScriptCs.Adder dependency"
.f(() =>
{
var nugetConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
<packageSources>
<clear />
<add key=""Local"" value=""" + Path.GetFullPath(Path.Combine("Support", "Gallery")) + @""" />
</packageSources>
<activePackageSource>
<add key=""All"" value=""(Aggregate source)"" />
</activePackageSource>
</configuration>
";
var packagesConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<packages>
<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />
</packages>
";
directory.WriteLine("nuget.config", nugetConfig);
directory.WriteLine("packages.config", packagesConfig);
});
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="80" endline="99">
<![CDATA[
[Scenario]
public static void UsingALoadedMethodInAScriptLibrary(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the product of 7 and 6"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Multiply(7, 6));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 42"
.f(() => output.ShouldContain("42"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="384" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ImplicitInstallation.cs" startline="13" endline="51">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And a legacy packages file declaring the ScriptCs.Adder dependency"
.f(() =>
{
var nugetConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
<packageSources>
<clear />
<add key=""Local"" value=""" + Path.GetFullPath(Path.Combine("Support", "Gallery")) + @""" />
</packageSources>
<activePackageSource>
<add key=""All"" value=""(Aggregate source)"" />
</activePackageSource>
</configuration>
";
var packagesConfig =
@"<?xml version=""1.0"" encoding=""utf-8""?>
<packages>
<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />
</packages>
";
directory.WriteLine("nuget.config", nugetConfig);
directory.WriteLine("packages.config", packagesConfig);
});
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptPacks.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And ScriptCs.Adder is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Adder.Local", directory));
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="385" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="14" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package which contains a framework assembly reference"
.f(() => ScriptCsExe.Install("FrameworkAssemblyReferencer", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying the log level as debug"
.f(() => directory.WriteLine("scriptcs.opts", @"{ logLevel
"When I execute the script without the log level option"
.f(() => output = ScriptCsExe.Run("foo.csx", false, directory));
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="386" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="14" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package which contains a framework assembly reference"
.f(() => ScriptCsExe.Install("FrameworkAssemblyReferencer", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="28" endline="50">
<![CDATA[
[Scenario]
public static void CustomConfiguration(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying to run as debug"
.f(() => directory.WriteLine("custom.opts", @"{ logLevel
"When I execute the script without the log level option but specifying the custom config"
.f(() =>
{
var args = new[] { "-config", "custom.opts", };
output = ScriptCsExe.Run("foo.csx", false, args, directory);
});
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="387" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="14" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package which contains a framework assembly reference"
.f(() => ScriptCsExe.Install("FrameworkAssemblyReferencer", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="38" endline="56">
<![CDATA[
[Scenario(Skip = "Failing with a path length exception")]
public static void UsingAMethodInAScriptLibraryInTheRepl(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Type
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script into REPL"
.f(() => output = ScriptCsExe.Run("foo.csx", false, new[] { "-r" }, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="388" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="14" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package which contains a framework assembly reference"
.f(() => ScriptCsExe.Install("FrameworkAssemblyReferencer", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="80" endline="99">
<![CDATA[
[Scenario]
public static void UsingALoadedMethodInAScriptLibrary(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the product of 7 and 6"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Multiply(7, 6));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 42"
.f(() => output.ShouldContain("42"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="389" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="14" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package which contains a framework assembly reference"
.f(() => ScriptCsExe.Install("FrameworkAssemblyReferencer", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptPacks.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And ScriptCs.Adder is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Adder.Local", directory));
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="390" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Packages.cs" startline="30" endline="51">
<![CDATA[
[Scenario]
public static void PackagesWithDuplicateAssemblies(ScenarioDirectory directory, Exception exception)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a simple script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine();"));
"When I install a package"
.f(() => ScriptCsExe.Install("Duplicate.A", directory));
"And I install another package containing the same assembly"
.f(() => ScriptCsExe.Install("Duplicate.B", directory));
"And I execute the script"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", directory)));
"Then there should be no errors"
.f(() => exception.ShouldBeNull());
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="15" endline="37">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the sum of 40 and 2"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Add(40, 2));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() =>
{
var scriptArgs = new[] { "-loglevel", "info" };
output = ScriptCsExe.Run("foo.csx", false, Enumerable.Empty<string>(), scriptArgs, directory);
});
"Then I see 42"
.f(() => output.ShouldContain("42"));
"Then I see INFO outputted from the required Logger script pack"
.f(() => output.ShouldContain("INFO"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="391" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying the log level as debug"
.f(() => directory.WriteLine("scriptcs.opts", @"{ logLevel
"When I execute the script without the log level option"
.f(() => output = ScriptCsExe.Run("foo.csx", false, directory));
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="28" endline="50">
<![CDATA[
[Scenario]
public static void CustomConfiguration(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying to run as debug"
.f(() => directory.WriteLine("custom.opts", @"{ logLevel
"When I execute the script without the log level option but specifying the custom config"
.f(() =>
{
var args = new[] { "-config", "custom.opts", };
output = ScriptCsExe.Run("foo.csx", false, args, directory);
});
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="392" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying the log level as debug"
.f(() => directory.WriteLine("scriptcs.opts", @"{ logLevel
"When I execute the script without the log level option"
.f(() => output = ScriptCsExe.Run("foo.csx", false, directory));
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="38" endline="56">
<![CDATA[
[Scenario(Skip = "Failing with a path length exception")]
public static void UsingAMethodInAScriptLibraryInTheRepl(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Type
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script into REPL"
.f(() => output = ScriptCsExe.Run("foo.csx", false, new[] { "-r" }, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="393" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying the log level as debug"
.f(() => directory.WriteLine("scriptcs.opts", @"{ logLevel
"When I execute the script without the log level option"
.f(() => output = ScriptCsExe.Run("foo.csx", false, directory));
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="80" endline="99">
<![CDATA[
[Scenario]
public static void UsingALoadedMethodInAScriptLibrary(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the product of 7 and 6"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Multiply(7, 6));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 42"
.f(() => output.ShouldContain("42"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="394" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying the log level as debug"
.f(() => directory.WriteLine("scriptcs.opts", @"{ logLevel
"When I execute the script without the log level option"
.f(() => output = ScriptCsExe.Run("foo.csx", false, directory));
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptPacks.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And ScriptCs.Adder is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Adder.Local", directory));
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="395" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="28" endline="50">
<![CDATA[
[Scenario]
public static void CustomConfiguration(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying to run as debug"
.f(() => directory.WriteLine("custom.opts", @"{ logLevel
"When I execute the script without the log level option but specifying the custom config"
.f(() =>
{
var args = new[] { "-config", "custom.opts", };
output = ScriptCsExe.Run("foo.csx", false, args, directory);
});
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="38" endline="56">
<![CDATA[
[Scenario(Skip = "Failing with a path length exception")]
public static void UsingAMethodInAScriptLibraryInTheRepl(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Type
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script into REPL"
.f(() => output = ScriptCsExe.Run("foo.csx", false, new[] { "-r" }, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="396" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="28" endline="50">
<![CDATA[
[Scenario]
public static void CustomConfiguration(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying to run as debug"
.f(() => directory.WriteLine("custom.opts", @"{ logLevel
"When I execute the script without the log level option but specifying the custom config"
.f(() =>
{
var args = new[] { "-config", "custom.opts", };
output = ScriptCsExe.Run("foo.csx", false, args, directory);
});
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="80" endline="99">
<![CDATA[
[Scenario]
public static void UsingALoadedMethodInAScriptLibrary(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the product of 7 and 6"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Multiply(7, 6));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 42"
.f(() => output.ShouldContain("42"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="397" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Configuration.cs" startline="28" endline="50">
<![CDATA[
[Scenario]
public static void CustomConfiguration(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Hello world!"");"));
"And a local config file specfying to run as debug"
.f(() => directory.WriteLine("custom.opts", @"{ logLevel
"When I execute the script without the log level option but specifying the custom config"
.f(() =>
{
var args = new[] { "-config", "custom.opts", };
output = ScriptCsExe.Run("foo.csx", false, args, directory);
});
"Then I see debug messages"
.f(() => output.ShouldContain("DEBUG
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptPacks.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And ScriptCs.Adder is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Adder.Local", directory));
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="398" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="38" endline="56">
<![CDATA[
[Scenario(Skip = "Failing with a path length exception")]
public static void UsingAMethodInAScriptLibraryInTheRepl(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Type
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script into REPL"
.f(() => output = ScriptCsExe.Run("foo.csx", false, new[] { "-r" }, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="80" endline="99">
<![CDATA[
[Scenario]
public static void UsingALoadedMethodInAScriptLibrary(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the product of 7 and 6"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Multiply(7, 6));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 42"
.f(() => output.ShouldContain("42"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="399" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="38" endline="56">
<![CDATA[
[Scenario(Skip = "Failing with a path length exception")]
public static void UsingAMethodInAScriptLibraryInTheRepl(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(""Type
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script into REPL"
.f(() => output = ScriptCsExe.Run("foo.csx", false, new[] { "-r" }, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptPacks.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And ScriptCs.Adder is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Adder.Local", directory));
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="400" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="57" endline="79">
<![CDATA[
[Scenario]
public static void LoadingFromANonRootedScript(ScenarioDirectory directory, ScenarioDirectory scriptDirectory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator and it is non-rooted"
.f(() =>
{
directory = ScenarioDirectory.Create(scenario);
scriptDirectory = ScenarioDirectory.Create(Path.Combine(scenario, "script"))
.WriteLine("foo.csx", @"Console.WriteLine(""Type
});
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", scriptDirectory));
"When executing the script"
.f(() => output = ScriptCsExe.Run(Path.Combine("script", "foo.csx"), false, directory));
"Then the ScriptCs.Calculator instance is created"
.f(() => output.ShouldContain("Type
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="31" endline="51">
<![CDATA[
[Scenario]
[Example(true)]
[Example(false)]
public static void ScriptThrowsAnException(bool debug, ScenarioDirectory directory, Exception exception)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which throws an exception"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"throw new Exception(""BOOM!"");"));
"When I execute the script with debug set to {0}"
.f(() => exception = Record.Exception(() => ScriptCsExe.Run("foo.csx", debug, directory)));
"Then scriptcs fails"
.f(() => exception.ShouldBeType<ScriptCsException>());
"And I see the exception message"
.f(() => exception.Message.ShouldContain("BOOM!"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="401" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptLibraries.cs" startline="80" endline="99">
<![CDATA[
[Scenario]
public static void UsingALoadedMethodInAScriptLibrary(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Calculator to print the product of 7 and 6"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(new Calculator().Multiply(7, 6));"));
"And ScriptCs.Calculator is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Calculator", directory));
"When executing the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 42"
.f(() => output.ShouldContain("42"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptPacks.cs" startline="12" endline="27">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses ScriptCs.Adder to print the sum of 1234 and 5678"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"Console.WriteLine(Require<Adder>().Add(1234, 5678));"));
"And ScriptCs.Adder is installed"
.f(() => ScriptCsExe.Install("ScriptCs.Adder.Local", directory));
"When execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then I see 6912"
.f(() => output.ShouldContain("6912"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="402" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\PackageSaving.cs" startline="13" endline="29">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"When I install ScriptCs.Adder manually"
.f(() =>
{
ScriptCsExe.Install("ScriptCs.Adder.Local", directory = ScenarioDirectory.Create(scenario));
directory.DeleteFile(ScriptCsExe.PackagesFile);
});
"And I save packages"
.f(() => ScriptCsExe.Save(directory));
"Then ScriptCs.Adder is added to the packages file"
.f(() => File.ReadAllText(directory.Map(ScriptCsExe.PackagesFile)).ShouldContain(
@"<package id=""ScriptCs.Adder.Local"" version=""0.1.1"" targetFramework=""net45"" />"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Migration.cs" startline="13" endline="43">
<![CDATA[
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script directory with a full population of legacy artifacts including a hello world script"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("bin/foo.txt", null)
.WriteLine(".cache/foo.txt", null)
.WriteLine("packages/foo.txt", null)
.WriteLine("packages.config", @"<?xml version=""1.0"" encoding=""utf-8""?><packages></packages>")
.WriteLine("nuget.config", @"<?xml version=""1.0"" encoding=""utf-8""?><configuration></configuration>")
.WriteLine("hello.csx", @"Console.WriteLine(""Hello, World!"");"));
"When I execute the script"
.f(() => ScriptCsExe.Run("hello.csx", directory));
"Then the artifacts are migrated"
.f(() =>
{
File.Exists(directory.Map("bin/foo.txt")).ShouldBeTrue("bin/ is unchanged");
File.Exists(directory.Map(".cache/foo.txt")).ShouldBeFalse(".cache/ is renamed to .scriptcs_cache/");
File.Exists(directory.Map("packages/foo.txt")).ShouldBeTrue("packages/ is unchanged");
File.Exists(directory.Map("packages.config")).ShouldBeTrue("packages.config is unchanged");
File.Exists(directory.Map("nuget.config")).ShouldBeTrue("nuget.config is unchanged");
File.Exists(directory.Map("scriptcs_bin/foo.txt")).ShouldBeTrue("bin/ is copied to scriptcs_bin/");
File.Exists(directory.Map(".scriptcs_cache/foo.txt")).ShouldBeTrue(".scriptcs_cache/ is renamed from .cache/");
File.Exists(directory.Map("scriptcs_packages/foo.txt")).ShouldBeTrue("packages/ is copied to scriptcs_packages/");
File.Exists(directory.Map("scriptcs_packages.config")).ShouldBeTrue("packages.config is copied to scriptcs_packages.config");
File.Exists(directory.Map("scriptcs_nuget.config")).ShouldBeTrue("nuget.config is copied to scriptcs_nuget.config");
});
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="403" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="52" endline="67">
<![CDATA[
[Scenario]
public static void ScriptCanAccessEnv(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env)"));
"When I execute the script"
.f(()=> output = ScriptCsExe.Run("foo.csx", directory));
"Then the Env object is displayed"
.f(() => output.ShouldContain("ScriptCs.ScriptEnvironment"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="68" endline="84">
<![CDATA[
[Scenario]
public static void ScriptCanUseDynamic(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses dynamic"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"dynamic obj = new ExpandoObject(); obj.foo = ""bar""; Console.WriteLine(obj.foo); ;"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the dynamic value is properly returned "
.f(() => output.ShouldContain("bar"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="404" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="52" endline="67">
<![CDATA[
[Scenario]
public static void ScriptCanAccessEnv(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env)"));
"When I execute the script"
.f(()=> output = ScriptCsExe.Run("foo.csx", directory));
"Then the Env object is displayed"
.f(() => output.ShouldContain("ScriptCs.ScriptEnvironment"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="85" endline="101">
<![CDATA[
[Scenario]
public static void ScriptAssemblyIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptAssembly"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptAssembly)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the Assembly is displayed"
.f(() => output.ShouldContain("Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="405" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="52" endline="67">
<![CDATA[
[Scenario]
public static void ScriptCanAccessEnv(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env)"));
"When I execute the script"
.f(()=> output = ScriptCsExe.Run("foo.csx", directory));
"Then the Env object is displayed"
.f(() => output.ShouldContain("ScriptCs.ScriptEnvironment"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="102" endline="117">
<![CDATA[
[Scenario]
public static void ScriptPathIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptPath"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptPath)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the ScriptPath is displayed"
.f(() => output.ShouldContain("foo.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="406" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="52" endline="67">
<![CDATA[
[Scenario]
public static void ScriptCanAccessEnv(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env)"));
"When I execute the script"
.f(()=> output = ScriptCsExe.Run("foo.csx", directory));
"Then the Env object is displayed"
.f(() => output.ShouldContain("ScriptCs.ScriptEnvironment"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="118" endline="141">
<![CDATA[
[Scenario]
public static void LoadedScriptsIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which loads another script and accesses Env.LoadedScripts"
.f(() =>
{
directory = ScenarioDirectory.Create(scenario)
.WriteLine(
"foo.csx", "#load bar.csx;" + Environment.NewLine +
"Console.WriteLine(Env.LoadedScripts.First());"
);
directory.WriteLine("bar.csx", "");
});
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the loaded script path is displayed"
.f(() => output.ShouldContain("bar.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="407" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="68" endline="84">
<![CDATA[
[Scenario]
public static void ScriptCanUseDynamic(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses dynamic"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"dynamic obj = new ExpandoObject(); obj.foo = ""bar""; Console.WriteLine(obj.foo); ;"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the dynamic value is properly returned "
.f(() => output.ShouldContain("bar"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="85" endline="101">
<![CDATA[
[Scenario]
public static void ScriptAssemblyIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptAssembly"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptAssembly)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the Assembly is displayed"
.f(() => output.ShouldContain("Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="408" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="68" endline="84">
<![CDATA[
[Scenario]
public static void ScriptCanUseDynamic(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses dynamic"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"dynamic obj = new ExpandoObject(); obj.foo = ""bar""; Console.WriteLine(obj.foo); ;"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the dynamic value is properly returned "
.f(() => output.ShouldContain("bar"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="102" endline="117">
<![CDATA[
[Scenario]
public static void ScriptPathIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptPath"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptPath)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the ScriptPath is displayed"
.f(() => output.ShouldContain("foo.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="409" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="68" endline="84">
<![CDATA[
[Scenario]
public static void ScriptCanUseDynamic(ScenarioDirectory directory, string output )
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which uses dynamic"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", @"dynamic obj = new ExpandoObject(); obj.foo = ""bar""; Console.WriteLine(obj.foo); ;"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the dynamic value is properly returned "
.f(() => output.ShouldContain("bar"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="118" endline="141">
<![CDATA[
[Scenario]
public static void LoadedScriptsIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which loads another script and accesses Env.LoadedScripts"
.f(() =>
{
directory = ScenarioDirectory.Create(scenario)
.WriteLine(
"foo.csx", "#load bar.csx;" + Environment.NewLine +
"Console.WriteLine(Env.LoadedScripts.First());"
);
directory.WriteLine("bar.csx", "");
});
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the loaded script path is displayed"
.f(() => output.ShouldContain("bar.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="410" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="85" endline="101">
<![CDATA[
[Scenario]
public static void ScriptAssemblyIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptAssembly"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptAssembly)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the Assembly is displayed"
.f(() => output.ShouldContain("Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="102" endline="117">
<![CDATA[
[Scenario]
public static void ScriptPathIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptPath"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptPath)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the ScriptPath is displayed"
.f(() => output.ShouldContain("foo.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="411" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="85" endline="101">
<![CDATA[
[Scenario]
public static void ScriptAssemblyIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptAssembly"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptAssembly)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the Assembly is displayed"
.f(() => output.ShouldContain("Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="118" endline="141">
<![CDATA[
[Scenario]
public static void LoadedScriptsIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which loads another script and accesses Env.LoadedScripts"
.f(() =>
{
directory = ScenarioDirectory.Create(scenario)
.WriteLine(
"foo.csx", "#load bar.csx;" + Environment.NewLine +
"Console.WriteLine(Env.LoadedScripts.First());"
);
directory.WriteLine("bar.csx", "");
});
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the loaded script path is displayed"
.f(() => output.ShouldContain("bar.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="412" semantic_similarity= "0.8" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="102" endline="117">
<![CDATA[
[Scenario]
public static void ScriptPathIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which accesses Env.ScriptPath"
.f(() => directory = ScenarioDirectory.Create(scenario)
.WriteLine("foo.csx", "Console.WriteLine(Env.ScriptPath)"));
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the ScriptPath is displayed"
.f(() => output.ShouldContain("foo.csx"));
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\ScriptExecution.cs" startline="118" endline="141">
<![CDATA[
[Scenario]
public static void LoadedScriptsIsSet(ScenarioDirectory directory, string output)
{
var scenario = MethodBase.GetCurrentMethod().GetFullName();
"Given a script which loads another script and accesses Env.LoadedScripts"
.f(() =>
{
directory = ScenarioDirectory.Create(scenario)
.WriteLine(
"foo.csx", "#load bar.csx;" + Environment.NewLine +
"Console.WriteLine(Env.LoadedScripts.First());"
);
directory.WriteLine("bar.csx", "");
});
"When I execute the script"
.f(() => output = ScriptCsExe.Run("foo.csx", directory));
"Then the loaded script path is displayed"
.f(() => output.ShouldContain("bar.csx"));
}
]]>
</clone_fragment>
</clone_pair>
<clone_pair pairid="413" semantic_similarity= "0.75" >
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Support\FileSystem.cs" startline="12" endline="56">
<![CDATA[
{
if (Directory.Exists(path))
{
return;
}
var timeout = 0.05d;
var createTimeout = DateTime.Now.AddSeconds(timeout);
while (true)
{
try
{
Directory.CreateDirectory(path);
var existsTimeout = DateTime.Now.AddSeconds(timeout);
while (true)
{
if (Directory.Exists(path))
{
break;
}
if (DateTime.Now < existsTimeout)
{
continue;
}
throw new IOException(
while (true)
{
if (Directory.Exists(path))
{
break;
}
if (DateTime.Now < existsTimeout)
{
continue;
}
throw new IOException(
string.Format(CultureInfo.InvariantCulture, "Failed to create directory '{0}'", path));
}
}
catch (Exception)
{
if (DateTime.Now < createTimeout)
{
continue;
}
throw;
}
break;
while (true)
{
try
{
Directory.CreateDirectory(path);
var existsTimeout = DateTime.Now.AddSeconds(timeout);
while (true)
{
if (Directory.Exists(path))
{
break;
}
if (DateTime.Now < existsTimeout)
{
continue;
}
throw new IOException(
string.Format(CultureInfo.InvariantCulture, "Failed to create directory '{0}'", path));
}
}
catch (Exception)
{
if (DateTime.Now < createTimeout)
{
continue;
}
throw;
}
break;
}
}
]]>
</clone_fragment>
<clone_fragment file="C:\Users\win10Admin\Desktop\Test_Cases\scriptcs-0.17.1\scriptcs-0.17.1\test\ScriptCs.Tests.Acceptance\Support\FileSystem.cs" startline="57" endline="103">
<![CDATA[
public static void EnsureDirectoryDeleted(string path)
{
if (!Directory.Exists(path))
{
return;
}
var timeout = 0.05d;
var deleteTimeout = DateTime.Now.AddSeconds(timeout);
while (true)
{
try
{
Directory.Delete(path, true);
var goneTimeout = DateTime.Now.AddSeconds(timeout);
while (true)
{
if (!Directory.Exists(path))
{
break;
}
if (DateTime.Now < goneTimeout)
{
continue;
}
throw new IOException(
while (true)
{
if (!Directory.Exists(path))
{
break;
}
if (DateTime.Now < goneTimeout)
{
continue;
}
throw new IOException(
string.Format(CultureInfo.InvariantCulture, "Failed to delete directory '{0}'", path));
}
}
catch (Exception)
{
if (DateTime.Now < deleteTimeout)
{
continue;
}
throw;
}
break;
while (true)
{
try
{
Directory.Delete(path, true);
var goneTimeout = DateTime.Now.AddSeconds(timeout);
while (true)
{
if (!Directory.Exists(path))
{
break;
}
if (DateTime.Now < goneTimeout)
{
continue;
}
throw new IOException(
string.Format(CultureInfo.InvariantCulture, "Failed to delete directory '{0}'", path));
}
}
catch (Exception)
{
if (DateTime.Now < deleteTimeout)
{
continue;
}
throw;
}
break;
}
}
]]>
</clone_fragment>
</clone_pair>
</clones>
